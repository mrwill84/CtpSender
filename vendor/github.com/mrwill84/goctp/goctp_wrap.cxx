/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: goctp.i

#define SWIGMODULE goctp
#define SWIG_DIRECTORS

#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>



typedef long long intgo;
typedef unsigned long long uintgo;


# if !defined(__clang__) && (defined(__i386__) || defined(__x86_64__))
#   define SWIGSTRUCTPACKED __attribute__((__packed__, __gcc_struct__))
# else
#   define SWIGSTRUCTPACKED __attribute__((__packed__))
# endif



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;




#define swiggo_size_assert_eq(x, y, name) typedef char name[(x-y)*(x-y)*-2+1];
#define swiggo_size_assert(t, n) swiggo_size_assert_eq(sizeof(t), n, swiggo_sizeof_##t##_is_not_##n)

swiggo_size_assert(char, 1)
swiggo_size_assert(short, 2)
swiggo_size_assert(int, 4)
typedef long long swiggo_long_long;
swiggo_size_assert(swiggo_long_long, 8)
swiggo_size_assert(float, 4)
swiggo_size_assert(double, 8)

#ifdef __cplusplus
extern "C" {
#endif
extern void crosscall2(void (*fn)(void *, int), void *, int);
extern char* _cgo_topofstack(void) __attribute__ ((weak));
extern void _cgo_allocate(void *, int);
extern void _cgo_panic(void *, int);
#ifdef __cplusplus
}
#endif

static char *_swig_topofstack() {
  if (_cgo_topofstack) {
    return _cgo_topofstack();
  } else {
    return 0;
  }
}

static void _swig_gopanic(const char *p) {
  struct {
    const char *p;
  } SWIGSTRUCTPACKED a;
  a.p = p;
  crosscall2(_cgo_panic, &a, (int) sizeof a);
}




#define SWIG_contract_assert(expr, msg) \
  if (!(expr)) { _swig_gopanic(msg); } else


static _gostring_ Swig_AllocateString(const char *p, size_t l) {
  _gostring_ ret;
  ret.p = (char*)malloc(l);
  memcpy(ret.p, p, l);
  ret.n = l;
  return ret;
}


static void Swig_free(void* p) {
  free(p);
}

static void* Swig_malloc(int c) {
  return malloc(c);
}


#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__) || defined(WIN32)

#include "./api/ThostTraderApi_v6.3.6_20160606_win32/ThostFtdcUserApiDataType.h" 
#include "./api/ThostTraderApi_v6.3.6_20160606_win32/ThostFtdcUserApiStruct.h"
#include "./api/ThostTraderApi_v6.3.6_20160606_win32/ThostFtdcMdApi.h"
#include "./api/ThostTraderApi_v6.3.6_20160606_win32/ThostFtdcTraderApi.h"

#else

#include "./api/ThostTraderApi_v6.3.6_20160606_linux64/ThostFtdcUserApiDataType.h" 
#include "./api/ThostTraderApi_v6.3.6_20160606_linux64/ThostFtdcUserApiStruct.h"
#include "./api/ThostTraderApi_v6.3.6_20160606_linux64/ThostFtdcMdApi.h"
#include "./api/ThostTraderApi_v6.3.6_20160606_linux64/ThostFtdcTraderApi.h"

#endif


#include <string>


// C++ director class methods.
#include "goctp_wrap.h"


#include <map>

namespace {
  struct GCItem {
    virtual ~GCItem() {}
  };

  struct GCItem_var {
    GCItem_var(GCItem *item = 0) : _item(item) {
    }

    GCItem_var& operator=(GCItem *item) {
      GCItem *tmp = _item;
      _item = item;
      delete tmp;
      return *this;
    }

    ~GCItem_var() {
      delete _item;
    }

    GCItem* operator->() {
      return _item;
    }

    private:
      GCItem *_item;
  };

  template <typename Type>
  struct GCItem_T : GCItem {
    GCItem_T(Type *ptr) : _ptr(ptr) {
    }

    virtual ~GCItem_T() {
      delete _ptr;
    }

  private:
    Type *_ptr;
  };
}

class Swig_memory {
public:
  template <typename Type>
  void swig_acquire_pointer(Type* vptr) {
    if (vptr) {
      swig_owner[vptr] = new GCItem_T<Type>(vptr);
    }
  }
private:
  typedef std::map<void *, GCItem_var> swig_ownership_map;
  swig_ownership_map swig_owner;
};

template <typename Type>
static void swig_acquire_pointer(Swig_memory** pmem, Type* ptr) {
  if (!pmem) {
    *pmem = new Swig_memory;
  }
  (*pmem)->swig_acquire_pointer(ptr);
}

SwigDirector_CThostFtdcMdSpi::SwigDirector_CThostFtdcMdSpi(int swig_p)
    : CThostFtdcMdSpi(),
      go_val(swig_p), swig_mem(0)
{ }

extern "C" void Swig_DirectorCThostFtdcMdSpi_callback_OnFrontConnected_goctp_ef6abdc493ff8ae2(int);
void SwigDirector_CThostFtdcMdSpi::OnFrontConnected() {
  Swig_DirectorCThostFtdcMdSpi_callback_OnFrontConnected_goctp_ef6abdc493ff8ae2(go_val);
}

extern "C" void Swig_DirectorCThostFtdcMdSpi_callback_OnFrontDisconnected_goctp_ef6abdc493ff8ae2(int, intgo arg2);
void SwigDirector_CThostFtdcMdSpi::OnFrontDisconnected(int nReason) {
  intgo swig_arg2;
  
  swig_arg2 = (int)nReason; 
  Swig_DirectorCThostFtdcMdSpi_callback_OnFrontDisconnected_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcMdSpi_callback_OnHeartBeatWarning_goctp_ef6abdc493ff8ae2(int, intgo arg2);
void SwigDirector_CThostFtdcMdSpi::OnHeartBeatWarning(int nTimeLapse) {
  intgo swig_arg2;
  
  swig_arg2 = (int)nTimeLapse; 
  Swig_DirectorCThostFtdcMdSpi_callback_OnHeartBeatWarning_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcMdSpi_callback_OnRspUserLogin_goctp_ef6abdc493ff8ae2(int, CThostFtdcRspUserLoginField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcMdSpi::OnRspUserLogin(CThostFtdcRspUserLoginField *pRspUserLogin, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcRspUserLoginField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcRspUserLoginField **)&swig_arg2 = (CThostFtdcRspUserLoginField *)pRspUserLogin; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcMdSpi_callback_OnRspUserLogin_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcMdSpi_callback_OnRspUserLogout_goctp_ef6abdc493ff8ae2(int, CThostFtdcUserLogoutField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcMdSpi::OnRspUserLogout(CThostFtdcUserLogoutField *pUserLogout, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcUserLogoutField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcUserLogoutField **)&swig_arg2 = (CThostFtdcUserLogoutField *)pUserLogout; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcMdSpi_callback_OnRspUserLogout_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcMdSpi_callback_OnRspError_goctp_ef6abdc493ff8ae2(int, CThostFtdcRspInfoField *arg2, intgo arg3, bool arg4);
void SwigDirector_CThostFtdcMdSpi::OnRspError(CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcRspInfoField *swig_arg2;
  intgo swig_arg3;
  bool swig_arg4;
  
  *(CThostFtdcRspInfoField **)&swig_arg2 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg3 = (int)nRequestID; 
  swig_arg4 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcMdSpi_callback_OnRspError_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4);
}

extern "C" void Swig_DirectorCThostFtdcMdSpi_callback_OnRspSubMarketData_goctp_ef6abdc493ff8ae2(int, CThostFtdcSpecificInstrumentField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcMdSpi::OnRspSubMarketData(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcSpecificInstrumentField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcSpecificInstrumentField **)&swig_arg2 = (CThostFtdcSpecificInstrumentField *)pSpecificInstrument; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcMdSpi_callback_OnRspSubMarketData_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcMdSpi_callback_OnRspUnSubMarketData_goctp_ef6abdc493ff8ae2(int, CThostFtdcSpecificInstrumentField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcMdSpi::OnRspUnSubMarketData(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcSpecificInstrumentField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcSpecificInstrumentField **)&swig_arg2 = (CThostFtdcSpecificInstrumentField *)pSpecificInstrument; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcMdSpi_callback_OnRspUnSubMarketData_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcMdSpi_callback_OnRspSubForQuoteRsp_goctp_ef6abdc493ff8ae2(int, CThostFtdcSpecificInstrumentField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcMdSpi::OnRspSubForQuoteRsp(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcSpecificInstrumentField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcSpecificInstrumentField **)&swig_arg2 = (CThostFtdcSpecificInstrumentField *)pSpecificInstrument; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcMdSpi_callback_OnRspSubForQuoteRsp_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcMdSpi_callback_OnRspUnSubForQuoteRsp_goctp_ef6abdc493ff8ae2(int, CThostFtdcSpecificInstrumentField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcMdSpi::OnRspUnSubForQuoteRsp(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcSpecificInstrumentField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcSpecificInstrumentField **)&swig_arg2 = (CThostFtdcSpecificInstrumentField *)pSpecificInstrument; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcMdSpi_callback_OnRspUnSubForQuoteRsp_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcMdSpi_callback_OnRtnDepthMarketData_goctp_ef6abdc493ff8ae2(int, CThostFtdcDepthMarketDataField *arg2);
void SwigDirector_CThostFtdcMdSpi::OnRtnDepthMarketData(CThostFtdcDepthMarketDataField *pDepthMarketData) {
  CThostFtdcDepthMarketDataField *swig_arg2;
  
  *(CThostFtdcDepthMarketDataField **)&swig_arg2 = (CThostFtdcDepthMarketDataField *)pDepthMarketData; 
  Swig_DirectorCThostFtdcMdSpi_callback_OnRtnDepthMarketData_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcMdSpi_callback_OnRtnForQuoteRsp_goctp_ef6abdc493ff8ae2(int, CThostFtdcForQuoteRspField *arg2);
void SwigDirector_CThostFtdcMdSpi::OnRtnForQuoteRsp(CThostFtdcForQuoteRspField *pForQuoteRsp) {
  CThostFtdcForQuoteRspField *swig_arg2;
  
  *(CThostFtdcForQuoteRspField **)&swig_arg2 = (CThostFtdcForQuoteRspField *)pForQuoteRsp; 
  Swig_DirectorCThostFtdcMdSpi_callback_OnRtnForQuoteRsp_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

SwigDirector_CThostFtdcTraderSpi::SwigDirector_CThostFtdcTraderSpi(int swig_p)
    : CThostFtdcTraderSpi(),
      go_val(swig_p), swig_mem(0)
{ }

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnFrontConnected_goctp_ef6abdc493ff8ae2(int);
void SwigDirector_CThostFtdcTraderSpi::OnFrontConnected() {
  Swig_DirectorCThostFtdcTraderSpi_callback_OnFrontConnected_goctp_ef6abdc493ff8ae2(go_val);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnFrontDisconnected_goctp_ef6abdc493ff8ae2(int, intgo arg2);
void SwigDirector_CThostFtdcTraderSpi::OnFrontDisconnected(int nReason) {
  intgo swig_arg2;
  
  swig_arg2 = (int)nReason; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnFrontDisconnected_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnHeartBeatWarning_goctp_ef6abdc493ff8ae2(int, intgo arg2);
void SwigDirector_CThostFtdcTraderSpi::OnHeartBeatWarning(int nTimeLapse) {
  intgo swig_arg2;
  
  swig_arg2 = (int)nTimeLapse; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnHeartBeatWarning_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspAuthenticate_goctp_ef6abdc493ff8ae2(int, CThostFtdcRspAuthenticateField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspAuthenticate(CThostFtdcRspAuthenticateField *pRspAuthenticateField, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcRspAuthenticateField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcRspAuthenticateField **)&swig_arg2 = (CThostFtdcRspAuthenticateField *)pRspAuthenticateField; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspAuthenticate_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspUserLogin_goctp_ef6abdc493ff8ae2(int, CThostFtdcRspUserLoginField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspUserLogin(CThostFtdcRspUserLoginField *pRspUserLogin, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcRspUserLoginField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcRspUserLoginField **)&swig_arg2 = (CThostFtdcRspUserLoginField *)pRspUserLogin; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspUserLogin_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspUserLogout_goctp_ef6abdc493ff8ae2(int, CThostFtdcUserLogoutField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspUserLogout(CThostFtdcUserLogoutField *pUserLogout, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcUserLogoutField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcUserLogoutField **)&swig_arg2 = (CThostFtdcUserLogoutField *)pUserLogout; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspUserLogout_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspUserPasswordUpdate_goctp_ef6abdc493ff8ae2(int, CThostFtdcUserPasswordUpdateField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspUserPasswordUpdate(CThostFtdcUserPasswordUpdateField *pUserPasswordUpdate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcUserPasswordUpdateField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcUserPasswordUpdateField **)&swig_arg2 = (CThostFtdcUserPasswordUpdateField *)pUserPasswordUpdate; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspUserPasswordUpdate_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspTradingAccountPasswordUpdate_goctp_ef6abdc493ff8ae2(int, CThostFtdcTradingAccountPasswordUpdateField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspTradingAccountPasswordUpdate(CThostFtdcTradingAccountPasswordUpdateField *pTradingAccountPasswordUpdate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcTradingAccountPasswordUpdateField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcTradingAccountPasswordUpdateField **)&swig_arg2 = (CThostFtdcTradingAccountPasswordUpdateField *)pTradingAccountPasswordUpdate; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspTradingAccountPasswordUpdate_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspOrderInsert_goctp_ef6abdc493ff8ae2(int, CThostFtdcInputOrderField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspOrderInsert(CThostFtdcInputOrderField *pInputOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcInputOrderField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcInputOrderField **)&swig_arg2 = (CThostFtdcInputOrderField *)pInputOrder; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspOrderInsert_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspParkedOrderInsert_goctp_ef6abdc493ff8ae2(int, CThostFtdcParkedOrderField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspParkedOrderInsert(CThostFtdcParkedOrderField *pParkedOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcParkedOrderField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcParkedOrderField **)&swig_arg2 = (CThostFtdcParkedOrderField *)pParkedOrder; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspParkedOrderInsert_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspParkedOrderAction_goctp_ef6abdc493ff8ae2(int, CThostFtdcParkedOrderActionField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspParkedOrderAction(CThostFtdcParkedOrderActionField *pParkedOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcParkedOrderActionField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcParkedOrderActionField **)&swig_arg2 = (CThostFtdcParkedOrderActionField *)pParkedOrderAction; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspParkedOrderAction_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspOrderAction_goctp_ef6abdc493ff8ae2(int, CThostFtdcInputOrderActionField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspOrderAction(CThostFtdcInputOrderActionField *pInputOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcInputOrderActionField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcInputOrderActionField **)&swig_arg2 = (CThostFtdcInputOrderActionField *)pInputOrderAction; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspOrderAction_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQueryMaxOrderVolume_goctp_ef6abdc493ff8ae2(int, CThostFtdcQueryMaxOrderVolumeField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQueryMaxOrderVolume(CThostFtdcQueryMaxOrderVolumeField *pQueryMaxOrderVolume, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcQueryMaxOrderVolumeField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcQueryMaxOrderVolumeField **)&swig_arg2 = (CThostFtdcQueryMaxOrderVolumeField *)pQueryMaxOrderVolume; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQueryMaxOrderVolume_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspSettlementInfoConfirm_goctp_ef6abdc493ff8ae2(int, CThostFtdcSettlementInfoConfirmField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspSettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField *pSettlementInfoConfirm, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcSettlementInfoConfirmField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcSettlementInfoConfirmField **)&swig_arg2 = (CThostFtdcSettlementInfoConfirmField *)pSettlementInfoConfirm; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspSettlementInfoConfirm_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspRemoveParkedOrder_goctp_ef6abdc493ff8ae2(int, CThostFtdcRemoveParkedOrderField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspRemoveParkedOrder(CThostFtdcRemoveParkedOrderField *pRemoveParkedOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcRemoveParkedOrderField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcRemoveParkedOrderField **)&swig_arg2 = (CThostFtdcRemoveParkedOrderField *)pRemoveParkedOrder; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspRemoveParkedOrder_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspRemoveParkedOrderAction_goctp_ef6abdc493ff8ae2(int, CThostFtdcRemoveParkedOrderActionField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspRemoveParkedOrderAction(CThostFtdcRemoveParkedOrderActionField *pRemoveParkedOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcRemoveParkedOrderActionField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcRemoveParkedOrderActionField **)&swig_arg2 = (CThostFtdcRemoveParkedOrderActionField *)pRemoveParkedOrderAction; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspRemoveParkedOrderAction_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspExecOrderInsert_goctp_ef6abdc493ff8ae2(int, CThostFtdcInputExecOrderField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspExecOrderInsert(CThostFtdcInputExecOrderField *pInputExecOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcInputExecOrderField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcInputExecOrderField **)&swig_arg2 = (CThostFtdcInputExecOrderField *)pInputExecOrder; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspExecOrderInsert_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspExecOrderAction_goctp_ef6abdc493ff8ae2(int, CThostFtdcInputExecOrderActionField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspExecOrderAction(CThostFtdcInputExecOrderActionField *pInputExecOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcInputExecOrderActionField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcInputExecOrderActionField **)&swig_arg2 = (CThostFtdcInputExecOrderActionField *)pInputExecOrderAction; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspExecOrderAction_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspForQuoteInsert_goctp_ef6abdc493ff8ae2(int, CThostFtdcInputForQuoteField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspForQuoteInsert(CThostFtdcInputForQuoteField *pInputForQuote, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcInputForQuoteField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcInputForQuoteField **)&swig_arg2 = (CThostFtdcInputForQuoteField *)pInputForQuote; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspForQuoteInsert_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQuoteInsert_goctp_ef6abdc493ff8ae2(int, CThostFtdcInputQuoteField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQuoteInsert(CThostFtdcInputQuoteField *pInputQuote, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcInputQuoteField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcInputQuoteField **)&swig_arg2 = (CThostFtdcInputQuoteField *)pInputQuote; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQuoteInsert_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQuoteAction_goctp_ef6abdc493ff8ae2(int, CThostFtdcInputQuoteActionField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQuoteAction(CThostFtdcInputQuoteActionField *pInputQuoteAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcInputQuoteActionField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcInputQuoteActionField **)&swig_arg2 = (CThostFtdcInputQuoteActionField *)pInputQuoteAction; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQuoteAction_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspBatchOrderAction_goctp_ef6abdc493ff8ae2(int, CThostFtdcInputBatchOrderActionField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspBatchOrderAction(CThostFtdcInputBatchOrderActionField *pInputBatchOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcInputBatchOrderActionField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcInputBatchOrderActionField **)&swig_arg2 = (CThostFtdcInputBatchOrderActionField *)pInputBatchOrderAction; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspBatchOrderAction_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspCombActionInsert_goctp_ef6abdc493ff8ae2(int, CThostFtdcInputCombActionField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspCombActionInsert(CThostFtdcInputCombActionField *pInputCombAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcInputCombActionField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcInputCombActionField **)&swig_arg2 = (CThostFtdcInputCombActionField *)pInputCombAction; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspCombActionInsert_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryOrder_goctp_ef6abdc493ff8ae2(int, CThostFtdcOrderField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryOrder(CThostFtdcOrderField *pOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcOrderField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcOrderField **)&swig_arg2 = (CThostFtdcOrderField *)pOrder; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryOrder_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryTrade_goctp_ef6abdc493ff8ae2(int, CThostFtdcTradeField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryTrade(CThostFtdcTradeField *pTrade, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcTradeField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcTradeField **)&swig_arg2 = (CThostFtdcTradeField *)pTrade; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryTrade_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryInvestorPosition_goctp_ef6abdc493ff8ae2(int, CThostFtdcInvestorPositionField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryInvestorPosition(CThostFtdcInvestorPositionField *pInvestorPosition, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcInvestorPositionField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcInvestorPositionField **)&swig_arg2 = (CThostFtdcInvestorPositionField *)pInvestorPosition; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryInvestorPosition_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryTradingAccount_goctp_ef6abdc493ff8ae2(int, CThostFtdcTradingAccountField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryTradingAccount(CThostFtdcTradingAccountField *pTradingAccount, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcTradingAccountField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcTradingAccountField **)&swig_arg2 = (CThostFtdcTradingAccountField *)pTradingAccount; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryTradingAccount_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryInvestor_goctp_ef6abdc493ff8ae2(int, CThostFtdcInvestorField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryInvestor(CThostFtdcInvestorField *pInvestor, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcInvestorField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcInvestorField **)&swig_arg2 = (CThostFtdcInvestorField *)pInvestor; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryInvestor_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryTradingCode_goctp_ef6abdc493ff8ae2(int, CThostFtdcTradingCodeField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryTradingCode(CThostFtdcTradingCodeField *pTradingCode, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcTradingCodeField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcTradingCodeField **)&swig_arg2 = (CThostFtdcTradingCodeField *)pTradingCode; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryTradingCode_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryInstrumentMarginRate_goctp_ef6abdc493ff8ae2(int, CThostFtdcInstrumentMarginRateField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryInstrumentMarginRate(CThostFtdcInstrumentMarginRateField *pInstrumentMarginRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcInstrumentMarginRateField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcInstrumentMarginRateField **)&swig_arg2 = (CThostFtdcInstrumentMarginRateField *)pInstrumentMarginRate; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryInstrumentMarginRate_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryInstrumentCommissionRate_goctp_ef6abdc493ff8ae2(int, CThostFtdcInstrumentCommissionRateField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryInstrumentCommissionRate(CThostFtdcInstrumentCommissionRateField *pInstrumentCommissionRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcInstrumentCommissionRateField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcInstrumentCommissionRateField **)&swig_arg2 = (CThostFtdcInstrumentCommissionRateField *)pInstrumentCommissionRate; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryInstrumentCommissionRate_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryExchange_goctp_ef6abdc493ff8ae2(int, CThostFtdcExchangeField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryExchange(CThostFtdcExchangeField *pExchange, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcExchangeField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcExchangeField **)&swig_arg2 = (CThostFtdcExchangeField *)pExchange; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryExchange_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryProduct_goctp_ef6abdc493ff8ae2(int, CThostFtdcProductField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryProduct(CThostFtdcProductField *pProduct, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcProductField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcProductField **)&swig_arg2 = (CThostFtdcProductField *)pProduct; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryProduct_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryInstrument_goctp_ef6abdc493ff8ae2(int, CThostFtdcInstrumentField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryInstrument(CThostFtdcInstrumentField *pInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcInstrumentField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcInstrumentField **)&swig_arg2 = (CThostFtdcInstrumentField *)pInstrument; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryInstrument_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryDepthMarketData_goctp_ef6abdc493ff8ae2(int, CThostFtdcDepthMarketDataField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryDepthMarketData(CThostFtdcDepthMarketDataField *pDepthMarketData, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcDepthMarketDataField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcDepthMarketDataField **)&swig_arg2 = (CThostFtdcDepthMarketDataField *)pDepthMarketData; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryDepthMarketData_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQrySettlementInfo_goctp_ef6abdc493ff8ae2(int, CThostFtdcSettlementInfoField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQrySettlementInfo(CThostFtdcSettlementInfoField *pSettlementInfo, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcSettlementInfoField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcSettlementInfoField **)&swig_arg2 = (CThostFtdcSettlementInfoField *)pSettlementInfo; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQrySettlementInfo_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryTransferBank_goctp_ef6abdc493ff8ae2(int, CThostFtdcTransferBankField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryTransferBank(CThostFtdcTransferBankField *pTransferBank, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcTransferBankField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcTransferBankField **)&swig_arg2 = (CThostFtdcTransferBankField *)pTransferBank; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryTransferBank_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryInvestorPositionDetail_goctp_ef6abdc493ff8ae2(int, CThostFtdcInvestorPositionDetailField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryInvestorPositionDetail(CThostFtdcInvestorPositionDetailField *pInvestorPositionDetail, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcInvestorPositionDetailField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcInvestorPositionDetailField **)&swig_arg2 = (CThostFtdcInvestorPositionDetailField *)pInvestorPositionDetail; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryInvestorPositionDetail_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryNotice_goctp_ef6abdc493ff8ae2(int, CThostFtdcNoticeField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryNotice(CThostFtdcNoticeField *pNotice, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcNoticeField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcNoticeField **)&swig_arg2 = (CThostFtdcNoticeField *)pNotice; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryNotice_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQrySettlementInfoConfirm_goctp_ef6abdc493ff8ae2(int, CThostFtdcSettlementInfoConfirmField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQrySettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField *pSettlementInfoConfirm, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcSettlementInfoConfirmField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcSettlementInfoConfirmField **)&swig_arg2 = (CThostFtdcSettlementInfoConfirmField *)pSettlementInfoConfirm; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQrySettlementInfoConfirm_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryInvestorPositionCombineDetail_goctp_ef6abdc493ff8ae2(int, CThostFtdcInvestorPositionCombineDetailField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryInvestorPositionCombineDetail(CThostFtdcInvestorPositionCombineDetailField *pInvestorPositionCombineDetail, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcInvestorPositionCombineDetailField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcInvestorPositionCombineDetailField **)&swig_arg2 = (CThostFtdcInvestorPositionCombineDetailField *)pInvestorPositionCombineDetail; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryInvestorPositionCombineDetail_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryCFMMCTradingAccountKey_goctp_ef6abdc493ff8ae2(int, CThostFtdcCFMMCTradingAccountKeyField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryCFMMCTradingAccountKey(CThostFtdcCFMMCTradingAccountKeyField *pCFMMCTradingAccountKey, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcCFMMCTradingAccountKeyField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcCFMMCTradingAccountKeyField **)&swig_arg2 = (CThostFtdcCFMMCTradingAccountKeyField *)pCFMMCTradingAccountKey; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryCFMMCTradingAccountKey_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryEWarrantOffset_goctp_ef6abdc493ff8ae2(int, CThostFtdcEWarrantOffsetField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryEWarrantOffset(CThostFtdcEWarrantOffsetField *pEWarrantOffset, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcEWarrantOffsetField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcEWarrantOffsetField **)&swig_arg2 = (CThostFtdcEWarrantOffsetField *)pEWarrantOffset; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryEWarrantOffset_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryInvestorProductGroupMargin_goctp_ef6abdc493ff8ae2(int, CThostFtdcInvestorProductGroupMarginField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryInvestorProductGroupMargin(CThostFtdcInvestorProductGroupMarginField *pInvestorProductGroupMargin, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcInvestorProductGroupMarginField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcInvestorProductGroupMarginField **)&swig_arg2 = (CThostFtdcInvestorProductGroupMarginField *)pInvestorProductGroupMargin; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryInvestorProductGroupMargin_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryExchangeMarginRate_goctp_ef6abdc493ff8ae2(int, CThostFtdcExchangeMarginRateField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryExchangeMarginRate(CThostFtdcExchangeMarginRateField *pExchangeMarginRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcExchangeMarginRateField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcExchangeMarginRateField **)&swig_arg2 = (CThostFtdcExchangeMarginRateField *)pExchangeMarginRate; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryExchangeMarginRate_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryExchangeMarginRateAdjust_goctp_ef6abdc493ff8ae2(int, CThostFtdcExchangeMarginRateAdjustField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryExchangeMarginRateAdjust(CThostFtdcExchangeMarginRateAdjustField *pExchangeMarginRateAdjust, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcExchangeMarginRateAdjustField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcExchangeMarginRateAdjustField **)&swig_arg2 = (CThostFtdcExchangeMarginRateAdjustField *)pExchangeMarginRateAdjust; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryExchangeMarginRateAdjust_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryExchangeRate_goctp_ef6abdc493ff8ae2(int, CThostFtdcExchangeRateField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryExchangeRate(CThostFtdcExchangeRateField *pExchangeRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcExchangeRateField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcExchangeRateField **)&swig_arg2 = (CThostFtdcExchangeRateField *)pExchangeRate; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryExchangeRate_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQrySecAgentACIDMap_goctp_ef6abdc493ff8ae2(int, CThostFtdcSecAgentACIDMapField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQrySecAgentACIDMap(CThostFtdcSecAgentACIDMapField *pSecAgentACIDMap, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcSecAgentACIDMapField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcSecAgentACIDMapField **)&swig_arg2 = (CThostFtdcSecAgentACIDMapField *)pSecAgentACIDMap; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQrySecAgentACIDMap_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryProductExchRate_goctp_ef6abdc493ff8ae2(int, CThostFtdcProductExchRateField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryProductExchRate(CThostFtdcProductExchRateField *pProductExchRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcProductExchRateField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcProductExchRateField **)&swig_arg2 = (CThostFtdcProductExchRateField *)pProductExchRate; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryProductExchRate_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryProductGroup_goctp_ef6abdc493ff8ae2(int, CThostFtdcProductGroupField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryProductGroup(CThostFtdcProductGroupField *pProductGroup, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcProductGroupField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcProductGroupField **)&swig_arg2 = (CThostFtdcProductGroupField *)pProductGroup; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryProductGroup_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryMMInstrumentCommissionRate_goctp_ef6abdc493ff8ae2(int, CThostFtdcMMInstrumentCommissionRateField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryMMInstrumentCommissionRate(CThostFtdcMMInstrumentCommissionRateField *pMMInstrumentCommissionRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcMMInstrumentCommissionRateField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcMMInstrumentCommissionRateField **)&swig_arg2 = (CThostFtdcMMInstrumentCommissionRateField *)pMMInstrumentCommissionRate; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryMMInstrumentCommissionRate_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryMMOptionInstrCommRate_goctp_ef6abdc493ff8ae2(int, CThostFtdcMMOptionInstrCommRateField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryMMOptionInstrCommRate(CThostFtdcMMOptionInstrCommRateField *pMMOptionInstrCommRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcMMOptionInstrCommRateField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcMMOptionInstrCommRateField **)&swig_arg2 = (CThostFtdcMMOptionInstrCommRateField *)pMMOptionInstrCommRate; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryMMOptionInstrCommRate_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryInstrumentOrderCommRate_goctp_ef6abdc493ff8ae2(int, CThostFtdcInstrumentOrderCommRateField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryInstrumentOrderCommRate(CThostFtdcInstrumentOrderCommRateField *pInstrumentOrderCommRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcInstrumentOrderCommRateField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcInstrumentOrderCommRateField **)&swig_arg2 = (CThostFtdcInstrumentOrderCommRateField *)pInstrumentOrderCommRate; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryInstrumentOrderCommRate_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryOptionInstrTradeCost_goctp_ef6abdc493ff8ae2(int, CThostFtdcOptionInstrTradeCostField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryOptionInstrTradeCost(CThostFtdcOptionInstrTradeCostField *pOptionInstrTradeCost, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcOptionInstrTradeCostField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcOptionInstrTradeCostField **)&swig_arg2 = (CThostFtdcOptionInstrTradeCostField *)pOptionInstrTradeCost; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryOptionInstrTradeCost_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryOptionInstrCommRate_goctp_ef6abdc493ff8ae2(int, CThostFtdcOptionInstrCommRateField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryOptionInstrCommRate(CThostFtdcOptionInstrCommRateField *pOptionInstrCommRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcOptionInstrCommRateField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcOptionInstrCommRateField **)&swig_arg2 = (CThostFtdcOptionInstrCommRateField *)pOptionInstrCommRate; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryOptionInstrCommRate_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryExecOrder_goctp_ef6abdc493ff8ae2(int, CThostFtdcExecOrderField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryExecOrder(CThostFtdcExecOrderField *pExecOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcExecOrderField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcExecOrderField **)&swig_arg2 = (CThostFtdcExecOrderField *)pExecOrder; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryExecOrder_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryForQuote_goctp_ef6abdc493ff8ae2(int, CThostFtdcForQuoteField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryForQuote(CThostFtdcForQuoteField *pForQuote, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcForQuoteField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcForQuoteField **)&swig_arg2 = (CThostFtdcForQuoteField *)pForQuote; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryForQuote_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryQuote_goctp_ef6abdc493ff8ae2(int, CThostFtdcQuoteField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryQuote(CThostFtdcQuoteField *pQuote, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcQuoteField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcQuoteField **)&swig_arg2 = (CThostFtdcQuoteField *)pQuote; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryQuote_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryCombInstrumentGuard_goctp_ef6abdc493ff8ae2(int, CThostFtdcCombInstrumentGuardField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryCombInstrumentGuard(CThostFtdcCombInstrumentGuardField *pCombInstrumentGuard, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcCombInstrumentGuardField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcCombInstrumentGuardField **)&swig_arg2 = (CThostFtdcCombInstrumentGuardField *)pCombInstrumentGuard; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryCombInstrumentGuard_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryCombAction_goctp_ef6abdc493ff8ae2(int, CThostFtdcCombActionField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryCombAction(CThostFtdcCombActionField *pCombAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcCombActionField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcCombActionField **)&swig_arg2 = (CThostFtdcCombActionField *)pCombAction; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryCombAction_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryTransferSerial_goctp_ef6abdc493ff8ae2(int, CThostFtdcTransferSerialField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryTransferSerial(CThostFtdcTransferSerialField *pTransferSerial, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcTransferSerialField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcTransferSerialField **)&swig_arg2 = (CThostFtdcTransferSerialField *)pTransferSerial; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryTransferSerial_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryAccountregister_goctp_ef6abdc493ff8ae2(int, CThostFtdcAccountregisterField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryAccountregister(CThostFtdcAccountregisterField *pAccountregister, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcAccountregisterField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcAccountregisterField **)&swig_arg2 = (CThostFtdcAccountregisterField *)pAccountregister; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryAccountregister_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspError_goctp_ef6abdc493ff8ae2(int, CThostFtdcRspInfoField *arg2, intgo arg3, bool arg4);
void SwigDirector_CThostFtdcTraderSpi::OnRspError(CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcRspInfoField *swig_arg2;
  intgo swig_arg3;
  bool swig_arg4;
  
  *(CThostFtdcRspInfoField **)&swig_arg2 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg3 = (int)nRequestID; 
  swig_arg4 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspError_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnOrder_goctp_ef6abdc493ff8ae2(int, CThostFtdcOrderField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnOrder(CThostFtdcOrderField *pOrder) {
  CThostFtdcOrderField *swig_arg2;
  
  *(CThostFtdcOrderField **)&swig_arg2 = (CThostFtdcOrderField *)pOrder; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnOrder_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnTrade_goctp_ef6abdc493ff8ae2(int, CThostFtdcTradeField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnTrade(CThostFtdcTradeField *pTrade) {
  CThostFtdcTradeField *swig_arg2;
  
  *(CThostFtdcTradeField **)&swig_arg2 = (CThostFtdcTradeField *)pTrade; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnTrade_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnOrderInsert_goctp_ef6abdc493ff8ae2(int, CThostFtdcInputOrderField *arg2, CThostFtdcRspInfoField *arg3);
void SwigDirector_CThostFtdcTraderSpi::OnErrRtnOrderInsert(CThostFtdcInputOrderField *pInputOrder, CThostFtdcRspInfoField *pRspInfo) {
  CThostFtdcInputOrderField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  
  *(CThostFtdcInputOrderField **)&swig_arg2 = (CThostFtdcInputOrderField *)pInputOrder; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnOrderInsert_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnOrderAction_goctp_ef6abdc493ff8ae2(int, CThostFtdcOrderActionField *arg2, CThostFtdcRspInfoField *arg3);
void SwigDirector_CThostFtdcTraderSpi::OnErrRtnOrderAction(CThostFtdcOrderActionField *pOrderAction, CThostFtdcRspInfoField *pRspInfo) {
  CThostFtdcOrderActionField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  
  *(CThostFtdcOrderActionField **)&swig_arg2 = (CThostFtdcOrderActionField *)pOrderAction; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnOrderAction_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnInstrumentStatus_goctp_ef6abdc493ff8ae2(int, CThostFtdcInstrumentStatusField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnInstrumentStatus(CThostFtdcInstrumentStatusField *pInstrumentStatus) {
  CThostFtdcInstrumentStatusField *swig_arg2;
  
  *(CThostFtdcInstrumentStatusField **)&swig_arg2 = (CThostFtdcInstrumentStatusField *)pInstrumentStatus; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnInstrumentStatus_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnBulletin_goctp_ef6abdc493ff8ae2(int, CThostFtdcBulletinField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnBulletin(CThostFtdcBulletinField *pBulletin) {
  CThostFtdcBulletinField *swig_arg2;
  
  *(CThostFtdcBulletinField **)&swig_arg2 = (CThostFtdcBulletinField *)pBulletin; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnBulletin_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnTradingNotice_goctp_ef6abdc493ff8ae2(int, CThostFtdcTradingNoticeInfoField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnTradingNotice(CThostFtdcTradingNoticeInfoField *pTradingNoticeInfo) {
  CThostFtdcTradingNoticeInfoField *swig_arg2;
  
  *(CThostFtdcTradingNoticeInfoField **)&swig_arg2 = (CThostFtdcTradingNoticeInfoField *)pTradingNoticeInfo; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnTradingNotice_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnErrorConditionalOrder_goctp_ef6abdc493ff8ae2(int, CThostFtdcErrorConditionalOrderField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnErrorConditionalOrder(CThostFtdcErrorConditionalOrderField *pErrorConditionalOrder) {
  CThostFtdcErrorConditionalOrderField *swig_arg2;
  
  *(CThostFtdcErrorConditionalOrderField **)&swig_arg2 = (CThostFtdcErrorConditionalOrderField *)pErrorConditionalOrder; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnErrorConditionalOrder_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnExecOrder_goctp_ef6abdc493ff8ae2(int, CThostFtdcExecOrderField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnExecOrder(CThostFtdcExecOrderField *pExecOrder) {
  CThostFtdcExecOrderField *swig_arg2;
  
  *(CThostFtdcExecOrderField **)&swig_arg2 = (CThostFtdcExecOrderField *)pExecOrder; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnExecOrder_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnExecOrderInsert_goctp_ef6abdc493ff8ae2(int, CThostFtdcInputExecOrderField *arg2, CThostFtdcRspInfoField *arg3);
void SwigDirector_CThostFtdcTraderSpi::OnErrRtnExecOrderInsert(CThostFtdcInputExecOrderField *pInputExecOrder, CThostFtdcRspInfoField *pRspInfo) {
  CThostFtdcInputExecOrderField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  
  *(CThostFtdcInputExecOrderField **)&swig_arg2 = (CThostFtdcInputExecOrderField *)pInputExecOrder; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnExecOrderInsert_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnExecOrderAction_goctp_ef6abdc493ff8ae2(int, CThostFtdcExecOrderActionField *arg2, CThostFtdcRspInfoField *arg3);
void SwigDirector_CThostFtdcTraderSpi::OnErrRtnExecOrderAction(CThostFtdcExecOrderActionField *pExecOrderAction, CThostFtdcRspInfoField *pRspInfo) {
  CThostFtdcExecOrderActionField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  
  *(CThostFtdcExecOrderActionField **)&swig_arg2 = (CThostFtdcExecOrderActionField *)pExecOrderAction; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnExecOrderAction_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnForQuoteInsert_goctp_ef6abdc493ff8ae2(int, CThostFtdcInputForQuoteField *arg2, CThostFtdcRspInfoField *arg3);
void SwigDirector_CThostFtdcTraderSpi::OnErrRtnForQuoteInsert(CThostFtdcInputForQuoteField *pInputForQuote, CThostFtdcRspInfoField *pRspInfo) {
  CThostFtdcInputForQuoteField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  
  *(CThostFtdcInputForQuoteField **)&swig_arg2 = (CThostFtdcInputForQuoteField *)pInputForQuote; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnForQuoteInsert_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnQuote_goctp_ef6abdc493ff8ae2(int, CThostFtdcQuoteField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnQuote(CThostFtdcQuoteField *pQuote) {
  CThostFtdcQuoteField *swig_arg2;
  
  *(CThostFtdcQuoteField **)&swig_arg2 = (CThostFtdcQuoteField *)pQuote; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnQuote_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnQuoteInsert_goctp_ef6abdc493ff8ae2(int, CThostFtdcInputQuoteField *arg2, CThostFtdcRspInfoField *arg3);
void SwigDirector_CThostFtdcTraderSpi::OnErrRtnQuoteInsert(CThostFtdcInputQuoteField *pInputQuote, CThostFtdcRspInfoField *pRspInfo) {
  CThostFtdcInputQuoteField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  
  *(CThostFtdcInputQuoteField **)&swig_arg2 = (CThostFtdcInputQuoteField *)pInputQuote; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnQuoteInsert_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnQuoteAction_goctp_ef6abdc493ff8ae2(int, CThostFtdcQuoteActionField *arg2, CThostFtdcRspInfoField *arg3);
void SwigDirector_CThostFtdcTraderSpi::OnErrRtnQuoteAction(CThostFtdcQuoteActionField *pQuoteAction, CThostFtdcRspInfoField *pRspInfo) {
  CThostFtdcQuoteActionField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  
  *(CThostFtdcQuoteActionField **)&swig_arg2 = (CThostFtdcQuoteActionField *)pQuoteAction; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnQuoteAction_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnForQuoteRsp_goctp_ef6abdc493ff8ae2(int, CThostFtdcForQuoteRspField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnForQuoteRsp(CThostFtdcForQuoteRspField *pForQuoteRsp) {
  CThostFtdcForQuoteRspField *swig_arg2;
  
  *(CThostFtdcForQuoteRspField **)&swig_arg2 = (CThostFtdcForQuoteRspField *)pForQuoteRsp; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnForQuoteRsp_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnCFMMCTradingAccountToken_goctp_ef6abdc493ff8ae2(int, CThostFtdcCFMMCTradingAccountTokenField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnCFMMCTradingAccountToken(CThostFtdcCFMMCTradingAccountTokenField *pCFMMCTradingAccountToken) {
  CThostFtdcCFMMCTradingAccountTokenField *swig_arg2;
  
  *(CThostFtdcCFMMCTradingAccountTokenField **)&swig_arg2 = (CThostFtdcCFMMCTradingAccountTokenField *)pCFMMCTradingAccountToken; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnCFMMCTradingAccountToken_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnBatchOrderAction_goctp_ef6abdc493ff8ae2(int, CThostFtdcBatchOrderActionField *arg2, CThostFtdcRspInfoField *arg3);
void SwigDirector_CThostFtdcTraderSpi::OnErrRtnBatchOrderAction(CThostFtdcBatchOrderActionField *pBatchOrderAction, CThostFtdcRspInfoField *pRspInfo) {
  CThostFtdcBatchOrderActionField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  
  *(CThostFtdcBatchOrderActionField **)&swig_arg2 = (CThostFtdcBatchOrderActionField *)pBatchOrderAction; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnBatchOrderAction_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnCombAction_goctp_ef6abdc493ff8ae2(int, CThostFtdcCombActionField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnCombAction(CThostFtdcCombActionField *pCombAction) {
  CThostFtdcCombActionField *swig_arg2;
  
  *(CThostFtdcCombActionField **)&swig_arg2 = (CThostFtdcCombActionField *)pCombAction; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnCombAction_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnCombActionInsert_goctp_ef6abdc493ff8ae2(int, CThostFtdcInputCombActionField *arg2, CThostFtdcRspInfoField *arg3);
void SwigDirector_CThostFtdcTraderSpi::OnErrRtnCombActionInsert(CThostFtdcInputCombActionField *pInputCombAction, CThostFtdcRspInfoField *pRspInfo) {
  CThostFtdcInputCombActionField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  
  *(CThostFtdcInputCombActionField **)&swig_arg2 = (CThostFtdcInputCombActionField *)pInputCombAction; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnCombActionInsert_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryContractBank_goctp_ef6abdc493ff8ae2(int, CThostFtdcContractBankField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryContractBank(CThostFtdcContractBankField *pContractBank, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcContractBankField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcContractBankField **)&swig_arg2 = (CThostFtdcContractBankField *)pContractBank; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryContractBank_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryParkedOrder_goctp_ef6abdc493ff8ae2(int, CThostFtdcParkedOrderField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryParkedOrder(CThostFtdcParkedOrderField *pParkedOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcParkedOrderField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcParkedOrderField **)&swig_arg2 = (CThostFtdcParkedOrderField *)pParkedOrder; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryParkedOrder_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryParkedOrderAction_goctp_ef6abdc493ff8ae2(int, CThostFtdcParkedOrderActionField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryParkedOrderAction(CThostFtdcParkedOrderActionField *pParkedOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcParkedOrderActionField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcParkedOrderActionField **)&swig_arg2 = (CThostFtdcParkedOrderActionField *)pParkedOrderAction; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryParkedOrderAction_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryTradingNotice_goctp_ef6abdc493ff8ae2(int, CThostFtdcTradingNoticeField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryTradingNotice(CThostFtdcTradingNoticeField *pTradingNotice, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcTradingNoticeField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcTradingNoticeField **)&swig_arg2 = (CThostFtdcTradingNoticeField *)pTradingNotice; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryTradingNotice_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryBrokerTradingParams_goctp_ef6abdc493ff8ae2(int, CThostFtdcBrokerTradingParamsField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryBrokerTradingParams(CThostFtdcBrokerTradingParamsField *pBrokerTradingParams, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcBrokerTradingParamsField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcBrokerTradingParamsField **)&swig_arg2 = (CThostFtdcBrokerTradingParamsField *)pBrokerTradingParams; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryBrokerTradingParams_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryBrokerTradingAlgos_goctp_ef6abdc493ff8ae2(int, CThostFtdcBrokerTradingAlgosField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQryBrokerTradingAlgos(CThostFtdcBrokerTradingAlgosField *pBrokerTradingAlgos, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcBrokerTradingAlgosField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcBrokerTradingAlgosField **)&swig_arg2 = (CThostFtdcBrokerTradingAlgosField *)pBrokerTradingAlgos; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQryBrokerTradingAlgos_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQueryCFMMCTradingAccountToken_goctp_ef6abdc493ff8ae2(int, CThostFtdcQueryCFMMCTradingAccountTokenField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQueryCFMMCTradingAccountToken(CThostFtdcQueryCFMMCTradingAccountTokenField *pQueryCFMMCTradingAccountToken, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcQueryCFMMCTradingAccountTokenField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcQueryCFMMCTradingAccountTokenField **)&swig_arg2 = (CThostFtdcQueryCFMMCTradingAccountTokenField *)pQueryCFMMCTradingAccountToken; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQueryCFMMCTradingAccountToken_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnFromBankToFutureByBank_goctp_ef6abdc493ff8ae2(int, CThostFtdcRspTransferField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnFromBankToFutureByBank(CThostFtdcRspTransferField *pRspTransfer) {
  CThostFtdcRspTransferField *swig_arg2;
  
  *(CThostFtdcRspTransferField **)&swig_arg2 = (CThostFtdcRspTransferField *)pRspTransfer; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnFromBankToFutureByBank_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnFromFutureToBankByBank_goctp_ef6abdc493ff8ae2(int, CThostFtdcRspTransferField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnFromFutureToBankByBank(CThostFtdcRspTransferField *pRspTransfer) {
  CThostFtdcRspTransferField *swig_arg2;
  
  *(CThostFtdcRspTransferField **)&swig_arg2 = (CThostFtdcRspTransferField *)pRspTransfer; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnFromFutureToBankByBank_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnRepealFromBankToFutureByBank_goctp_ef6abdc493ff8ae2(int, CThostFtdcRspRepealField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnRepealFromBankToFutureByBank(CThostFtdcRspRepealField *pRspRepeal) {
  CThostFtdcRspRepealField *swig_arg2;
  
  *(CThostFtdcRspRepealField **)&swig_arg2 = (CThostFtdcRspRepealField *)pRspRepeal; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnRepealFromBankToFutureByBank_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnRepealFromFutureToBankByBank_goctp_ef6abdc493ff8ae2(int, CThostFtdcRspRepealField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnRepealFromFutureToBankByBank(CThostFtdcRspRepealField *pRspRepeal) {
  CThostFtdcRspRepealField *swig_arg2;
  
  *(CThostFtdcRspRepealField **)&swig_arg2 = (CThostFtdcRspRepealField *)pRspRepeal; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnRepealFromFutureToBankByBank_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnFromBankToFutureByFuture_goctp_ef6abdc493ff8ae2(int, CThostFtdcRspTransferField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnFromBankToFutureByFuture(CThostFtdcRspTransferField *pRspTransfer) {
  CThostFtdcRspTransferField *swig_arg2;
  
  *(CThostFtdcRspTransferField **)&swig_arg2 = (CThostFtdcRspTransferField *)pRspTransfer; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnFromBankToFutureByFuture_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnFromFutureToBankByFuture_goctp_ef6abdc493ff8ae2(int, CThostFtdcRspTransferField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnFromFutureToBankByFuture(CThostFtdcRspTransferField *pRspTransfer) {
  CThostFtdcRspTransferField *swig_arg2;
  
  *(CThostFtdcRspTransferField **)&swig_arg2 = (CThostFtdcRspTransferField *)pRspTransfer; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnFromFutureToBankByFuture_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnRepealFromBankToFutureByFutureManual_goctp_ef6abdc493ff8ae2(int, CThostFtdcRspRepealField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnRepealFromBankToFutureByFutureManual(CThostFtdcRspRepealField *pRspRepeal) {
  CThostFtdcRspRepealField *swig_arg2;
  
  *(CThostFtdcRspRepealField **)&swig_arg2 = (CThostFtdcRspRepealField *)pRspRepeal; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnRepealFromBankToFutureByFutureManual_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnRepealFromFutureToBankByFutureManual_goctp_ef6abdc493ff8ae2(int, CThostFtdcRspRepealField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnRepealFromFutureToBankByFutureManual(CThostFtdcRspRepealField *pRspRepeal) {
  CThostFtdcRspRepealField *swig_arg2;
  
  *(CThostFtdcRspRepealField **)&swig_arg2 = (CThostFtdcRspRepealField *)pRspRepeal; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnRepealFromFutureToBankByFutureManual_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnQueryBankBalanceByFuture_goctp_ef6abdc493ff8ae2(int, CThostFtdcNotifyQueryAccountField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnQueryBankBalanceByFuture(CThostFtdcNotifyQueryAccountField *pNotifyQueryAccount) {
  CThostFtdcNotifyQueryAccountField *swig_arg2;
  
  *(CThostFtdcNotifyQueryAccountField **)&swig_arg2 = (CThostFtdcNotifyQueryAccountField *)pNotifyQueryAccount; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnQueryBankBalanceByFuture_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnBankToFutureByFuture_goctp_ef6abdc493ff8ae2(int, CThostFtdcReqTransferField *arg2, CThostFtdcRspInfoField *arg3);
void SwigDirector_CThostFtdcTraderSpi::OnErrRtnBankToFutureByFuture(CThostFtdcReqTransferField *pReqTransfer, CThostFtdcRspInfoField *pRspInfo) {
  CThostFtdcReqTransferField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  
  *(CThostFtdcReqTransferField **)&swig_arg2 = (CThostFtdcReqTransferField *)pReqTransfer; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnBankToFutureByFuture_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnFutureToBankByFuture_goctp_ef6abdc493ff8ae2(int, CThostFtdcReqTransferField *arg2, CThostFtdcRspInfoField *arg3);
void SwigDirector_CThostFtdcTraderSpi::OnErrRtnFutureToBankByFuture(CThostFtdcReqTransferField *pReqTransfer, CThostFtdcRspInfoField *pRspInfo) {
  CThostFtdcReqTransferField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  
  *(CThostFtdcReqTransferField **)&swig_arg2 = (CThostFtdcReqTransferField *)pReqTransfer; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnFutureToBankByFuture_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnRepealBankToFutureByFutureManual_goctp_ef6abdc493ff8ae2(int, CThostFtdcReqRepealField *arg2, CThostFtdcRspInfoField *arg3);
void SwigDirector_CThostFtdcTraderSpi::OnErrRtnRepealBankToFutureByFutureManual(CThostFtdcReqRepealField *pReqRepeal, CThostFtdcRspInfoField *pRspInfo) {
  CThostFtdcReqRepealField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  
  *(CThostFtdcReqRepealField **)&swig_arg2 = (CThostFtdcReqRepealField *)pReqRepeal; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnRepealBankToFutureByFutureManual_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnRepealFutureToBankByFutureManual_goctp_ef6abdc493ff8ae2(int, CThostFtdcReqRepealField *arg2, CThostFtdcRspInfoField *arg3);
void SwigDirector_CThostFtdcTraderSpi::OnErrRtnRepealFutureToBankByFutureManual(CThostFtdcReqRepealField *pReqRepeal, CThostFtdcRspInfoField *pRspInfo) {
  CThostFtdcReqRepealField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  
  *(CThostFtdcReqRepealField **)&swig_arg2 = (CThostFtdcReqRepealField *)pReqRepeal; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnRepealFutureToBankByFutureManual_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnQueryBankBalanceByFuture_goctp_ef6abdc493ff8ae2(int, CThostFtdcReqQueryAccountField *arg2, CThostFtdcRspInfoField *arg3);
void SwigDirector_CThostFtdcTraderSpi::OnErrRtnQueryBankBalanceByFuture(CThostFtdcReqQueryAccountField *pReqQueryAccount, CThostFtdcRspInfoField *pRspInfo) {
  CThostFtdcReqQueryAccountField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  
  *(CThostFtdcReqQueryAccountField **)&swig_arg2 = (CThostFtdcReqQueryAccountField *)pReqQueryAccount; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnErrRtnQueryBankBalanceByFuture_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnRepealFromBankToFutureByFuture_goctp_ef6abdc493ff8ae2(int, CThostFtdcRspRepealField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnRepealFromBankToFutureByFuture(CThostFtdcRspRepealField *pRspRepeal) {
  CThostFtdcRspRepealField *swig_arg2;
  
  *(CThostFtdcRspRepealField **)&swig_arg2 = (CThostFtdcRspRepealField *)pRspRepeal; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnRepealFromBankToFutureByFuture_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnRepealFromFutureToBankByFuture_goctp_ef6abdc493ff8ae2(int, CThostFtdcRspRepealField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnRepealFromFutureToBankByFuture(CThostFtdcRspRepealField *pRspRepeal) {
  CThostFtdcRspRepealField *swig_arg2;
  
  *(CThostFtdcRspRepealField **)&swig_arg2 = (CThostFtdcRspRepealField *)pRspRepeal; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnRepealFromFutureToBankByFuture_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspFromBankToFutureByFuture_goctp_ef6abdc493ff8ae2(int, CThostFtdcReqTransferField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspFromBankToFutureByFuture(CThostFtdcReqTransferField *pReqTransfer, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcReqTransferField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcReqTransferField **)&swig_arg2 = (CThostFtdcReqTransferField *)pReqTransfer; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspFromBankToFutureByFuture_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspFromFutureToBankByFuture_goctp_ef6abdc493ff8ae2(int, CThostFtdcReqTransferField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspFromFutureToBankByFuture(CThostFtdcReqTransferField *pReqTransfer, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcReqTransferField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcReqTransferField **)&swig_arg2 = (CThostFtdcReqTransferField *)pReqTransfer; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspFromFutureToBankByFuture_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQueryBankAccountMoneyByFuture_goctp_ef6abdc493ff8ae2(int, CThostFtdcReqQueryAccountField *arg2, CThostFtdcRspInfoField *arg3, intgo arg4, bool arg5);
void SwigDirector_CThostFtdcTraderSpi::OnRspQueryBankAccountMoneyByFuture(CThostFtdcReqQueryAccountField *pReqQueryAccount, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  CThostFtdcReqQueryAccountField *swig_arg2;
  CThostFtdcRspInfoField *swig_arg3;
  intgo swig_arg4;
  bool swig_arg5;
  
  *(CThostFtdcReqQueryAccountField **)&swig_arg2 = (CThostFtdcReqQueryAccountField *)pReqQueryAccount; 
  *(CThostFtdcRspInfoField **)&swig_arg3 = (CThostFtdcRspInfoField *)pRspInfo; 
  swig_arg4 = (int)nRequestID; 
  swig_arg5 = (bool)bIsLast; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRspQueryBankAccountMoneyByFuture_goctp_ef6abdc493ff8ae2(go_val, swig_arg2, swig_arg3, swig_arg4, swig_arg5);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnOpenAccountByBank_goctp_ef6abdc493ff8ae2(int, CThostFtdcOpenAccountField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnOpenAccountByBank(CThostFtdcOpenAccountField *pOpenAccount) {
  CThostFtdcOpenAccountField *swig_arg2;
  
  *(CThostFtdcOpenAccountField **)&swig_arg2 = (CThostFtdcOpenAccountField *)pOpenAccount; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnOpenAccountByBank_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnCancelAccountByBank_goctp_ef6abdc493ff8ae2(int, CThostFtdcCancelAccountField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnCancelAccountByBank(CThostFtdcCancelAccountField *pCancelAccount) {
  CThostFtdcCancelAccountField *swig_arg2;
  
  *(CThostFtdcCancelAccountField **)&swig_arg2 = (CThostFtdcCancelAccountField *)pCancelAccount; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnCancelAccountByBank_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

extern "C" void Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnChangeAccountByBank_goctp_ef6abdc493ff8ae2(int, CThostFtdcChangeAccountField *arg2);
void SwigDirector_CThostFtdcTraderSpi::OnRtnChangeAccountByBank(CThostFtdcChangeAccountField *pChangeAccount) {
  CThostFtdcChangeAccountField *swig_arg2;
  
  *(CThostFtdcChangeAccountField **)&swig_arg2 = (CThostFtdcChangeAccountField *)pChangeAccount; 
  Swig_DirectorCThostFtdcTraderSpi_callback_OnRtnChangeAccountByBank_goctp_ef6abdc493ff8ae2(go_val, swig_arg2);
}

#ifdef __cplusplus
extern "C" {
#endif

void _wrap_Swig_free_goctp_ef6abdc493ff8ae2(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  Swig_free(arg1);
  
}


void *_wrap_Swig_malloc_goctp_ef6abdc493ff8ae2(intgo _swig_go_0) {
  int arg1 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (void *)Swig_malloc(arg1);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


intgo _wrap_THOST_TERT_RESTART_goctp_ef6abdc493ff8ae2() {
  THOST_TE_RESUME_TYPE result;
  intgo _swig_go_result;
  
  
  result = THOST_TERT_RESTART;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_THOST_TERT_RESUME_goctp_ef6abdc493ff8ae2() {
  THOST_TE_RESUME_TYPE result;
  intgo _swig_go_result;
  
  
  result = THOST_TERT_RESUME;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_THOST_TERT_QUICK_goctp_ef6abdc493ff8ae2() {
  THOST_TE_RESUME_TYPE result;
  intgo _swig_go_result;
  
  
  result = THOST_TERT_QUICK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDisseminationField_SequenceSeries_set_goctp_ef6abdc493ff8ae2(CThostFtdcDisseminationField *_swig_go_0, short _swig_go_1) {
  CThostFtdcDisseminationField *arg1 = (CThostFtdcDisseminationField *) 0 ;
  TThostFtdcSequenceSeriesType arg2 ;
  
  arg1 = *(CThostFtdcDisseminationField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceSeriesType)_swig_go_1; 
  
  if (arg1) (arg1)->SequenceSeries = arg2;
  
}


short _wrap_CThostFtdcDisseminationField_SequenceSeries_get_goctp_ef6abdc493ff8ae2(CThostFtdcDisseminationField *_swig_go_0) {
  CThostFtdcDisseminationField *arg1 = (CThostFtdcDisseminationField *) 0 ;
  TThostFtdcSequenceSeriesType result;
  short _swig_go_result;
  
  arg1 = *(CThostFtdcDisseminationField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceSeriesType) ((arg1)->SequenceSeries);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDisseminationField_SequenceNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcDisseminationField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcDisseminationField *arg1 = (CThostFtdcDisseminationField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcDisseminationField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->SequenceNo = arg2;
  
}


intgo _wrap_CThostFtdcDisseminationField_SequenceNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcDisseminationField *_swig_go_0) {
  CThostFtdcDisseminationField *arg1 = (CThostFtdcDisseminationField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcDisseminationField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcDisseminationField *_wrap_new_CThostFtdcDisseminationField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcDisseminationField *result = 0 ;
  CThostFtdcDisseminationField *_swig_go_result;
  
  
  result = (CThostFtdcDisseminationField *)new CThostFtdcDisseminationField();
  *(CThostFtdcDisseminationField **)&_swig_go_result = (CThostFtdcDisseminationField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcDisseminationField_goctp_ef6abdc493ff8ae2(CThostFtdcDisseminationField *_swig_go_0) {
  CThostFtdcDisseminationField *arg1 = (CThostFtdcDisseminationField *) 0 ;
  
  arg1 = *(CThostFtdcDisseminationField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcReqUserLoginField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqUserLoginField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqUserLoginField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqUserLoginField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqUserLoginField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqUserLoginField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqUserLoginField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqUserLoginField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqUserLoginField_UserProductInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqUserLoginField_UserProductInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserProductInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqUserLoginField_InterfaceProductInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InterfaceProductInfo, (const char *)arg2, 11-1);
      arg1->InterfaceProductInfo[11-1] = 0;
    } else {
      arg1->InterfaceProductInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqUserLoginField_InterfaceProductInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InterfaceProductInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqUserLoginField_ProtocolInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ProtocolInfo, (const char *)arg2, 11-1);
      arg1->ProtocolInfo[11-1] = 0;
    } else {
      arg1->ProtocolInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqUserLoginField_ProtocolInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ProtocolInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqUserLoginField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqUserLoginField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqUserLoginField_OneTimePassword_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OneTimePassword, (const char *)arg2, 41-1);
      arg1->OneTimePassword[41-1] = 0;
    } else {
      arg1->OneTimePassword[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqUserLoginField_OneTimePassword_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OneTimePassword);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqUserLoginField_ClientIPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientIPAddress, (const char *)arg2, 16-1);
      arg1->ClientIPAddress[16-1] = 0;
    } else {
      arg1->ClientIPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqUserLoginField_ClientIPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientIPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqUserLoginField_LoginRemark_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LoginRemark, (const char *)arg2, 36-1);
      arg1->LoginRemark[36-1] = 0;
    } else {
      arg1->LoginRemark[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqUserLoginField_LoginRemark_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LoginRemark);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcReqUserLoginField *_wrap_new_CThostFtdcReqUserLoginField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcReqUserLoginField *result = 0 ;
  CThostFtdcReqUserLoginField *_swig_go_result;
  
  
  result = (CThostFtdcReqUserLoginField *)new CThostFtdcReqUserLoginField();
  *(CThostFtdcReqUserLoginField **)&_swig_go_result = (CThostFtdcReqUserLoginField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcReqUserLoginField_goctp_ef6abdc493ff8ae2(CThostFtdcReqUserLoginField *_swig_go_0) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  
  arg1 = *(CThostFtdcReqUserLoginField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcRspUserLoginField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspUserLoginField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspUserLoginField_LoginTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LoginTime, (const char *)arg2, 9-1);
      arg1->LoginTime[9-1] = 0;
    } else {
      arg1->LoginTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspUserLoginField_LoginTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LoginTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspUserLoginField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspUserLoginField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspUserLoginField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspUserLoginField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspUserLoginField_SystemName_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SystemName, (const char *)arg2, 41-1);
      arg1->SystemName[41-1] = 0;
    } else {
      arg1->SystemName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspUserLoginField_SystemName_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->SystemName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspUserLoginField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcRspUserLoginField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspUserLoginField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcRspUserLoginField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspUserLoginField_MaxOrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MaxOrderRef, (const char *)arg2, 13-1);
      arg1->MaxOrderRef[13-1] = 0;
    } else {
      arg1->MaxOrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspUserLoginField_MaxOrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MaxOrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspUserLoginField_SHFETime_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SHFETime, (const char *)arg2, 9-1);
      arg1->SHFETime[9-1] = 0;
    } else {
      arg1->SHFETime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspUserLoginField_SHFETime_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->SHFETime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspUserLoginField_DCETime_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DCETime, (const char *)arg2, 9-1);
      arg1->DCETime[9-1] = 0;
    } else {
      arg1->DCETime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspUserLoginField_DCETime_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DCETime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspUserLoginField_CZCETime_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CZCETime, (const char *)arg2, 9-1);
      arg1->CZCETime[9-1] = 0;
    } else {
      arg1->CZCETime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspUserLoginField_CZCETime_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CZCETime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspUserLoginField_FFEXTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FFEXTime, (const char *)arg2, 9-1);
      arg1->FFEXTime[9-1] = 0;
    } else {
      arg1->FFEXTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspUserLoginField_FFEXTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->FFEXTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspUserLoginField_INETime_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->INETime, (const char *)arg2, 9-1);
      arg1->INETime[9-1] = 0;
    } else {
      arg1->INETime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspUserLoginField_INETime_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->INETime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcRspUserLoginField *_wrap_new_CThostFtdcRspUserLoginField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcRspUserLoginField *result = 0 ;
  CThostFtdcRspUserLoginField *_swig_go_result;
  
  
  result = (CThostFtdcRspUserLoginField *)new CThostFtdcRspUserLoginField();
  *(CThostFtdcRspUserLoginField **)&_swig_go_result = (CThostFtdcRspUserLoginField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcRspUserLoginField_goctp_ef6abdc493ff8ae2(CThostFtdcRspUserLoginField *_swig_go_0) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  
  arg1 = *(CThostFtdcRspUserLoginField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcUserLogoutField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserLogoutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserLogoutField *arg1 = (CThostFtdcUserLogoutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserLogoutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserLogoutField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserLogoutField *_swig_go_0) {
  CThostFtdcUserLogoutField *arg1 = (CThostFtdcUserLogoutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserLogoutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserLogoutField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserLogoutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserLogoutField *arg1 = (CThostFtdcUserLogoutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserLogoutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserLogoutField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserLogoutField *_swig_go_0) {
  CThostFtdcUserLogoutField *arg1 = (CThostFtdcUserLogoutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserLogoutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcUserLogoutField *_wrap_new_CThostFtdcUserLogoutField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcUserLogoutField *result = 0 ;
  CThostFtdcUserLogoutField *_swig_go_result;
  
  
  result = (CThostFtdcUserLogoutField *)new CThostFtdcUserLogoutField();
  *(CThostFtdcUserLogoutField **)&_swig_go_result = (CThostFtdcUserLogoutField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcUserLogoutField_goctp_ef6abdc493ff8ae2(CThostFtdcUserLogoutField *_swig_go_0) {
  CThostFtdcUserLogoutField *arg1 = (CThostFtdcUserLogoutField *) 0 ;
  
  arg1 = *(CThostFtdcUserLogoutField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcForceUserLogoutField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForceUserLogoutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForceUserLogoutField *arg1 = (CThostFtdcForceUserLogoutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForceUserLogoutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForceUserLogoutField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForceUserLogoutField *_swig_go_0) {
  CThostFtdcForceUserLogoutField *arg1 = (CThostFtdcForceUserLogoutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForceUserLogoutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForceUserLogoutField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForceUserLogoutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForceUserLogoutField *arg1 = (CThostFtdcForceUserLogoutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForceUserLogoutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForceUserLogoutField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForceUserLogoutField *_swig_go_0) {
  CThostFtdcForceUserLogoutField *arg1 = (CThostFtdcForceUserLogoutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForceUserLogoutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcForceUserLogoutField *_wrap_new_CThostFtdcForceUserLogoutField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcForceUserLogoutField *result = 0 ;
  CThostFtdcForceUserLogoutField *_swig_go_result;
  
  
  result = (CThostFtdcForceUserLogoutField *)new CThostFtdcForceUserLogoutField();
  *(CThostFtdcForceUserLogoutField **)&_swig_go_result = (CThostFtdcForceUserLogoutField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcForceUserLogoutField_goctp_ef6abdc493ff8ae2(CThostFtdcForceUserLogoutField *_swig_go_0) {
  CThostFtdcForceUserLogoutField *arg1 = (CThostFtdcForceUserLogoutField *) 0 ;
  
  arg1 = *(CThostFtdcForceUserLogoutField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcReqAuthenticateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqAuthenticateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqAuthenticateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqAuthenticateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqAuthenticateField *_swig_go_0) {
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqAuthenticateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqAuthenticateField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqAuthenticateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqAuthenticateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqAuthenticateField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqAuthenticateField *_swig_go_0) {
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqAuthenticateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqAuthenticateField_UserProductInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqAuthenticateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqAuthenticateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqAuthenticateField_UserProductInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqAuthenticateField *_swig_go_0) {
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqAuthenticateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserProductInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqAuthenticateField_AuthCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqAuthenticateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqAuthenticateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AuthCode, (const char *)arg2, 17-1);
      arg1->AuthCode[17-1] = 0;
    } else {
      arg1->AuthCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqAuthenticateField_AuthCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqAuthenticateField *_swig_go_0) {
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqAuthenticateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AuthCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcReqAuthenticateField *_wrap_new_CThostFtdcReqAuthenticateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcReqAuthenticateField *result = 0 ;
  CThostFtdcReqAuthenticateField *_swig_go_result;
  
  
  result = (CThostFtdcReqAuthenticateField *)new CThostFtdcReqAuthenticateField();
  *(CThostFtdcReqAuthenticateField **)&_swig_go_result = (CThostFtdcReqAuthenticateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcReqAuthenticateField_goctp_ef6abdc493ff8ae2(CThostFtdcReqAuthenticateField *_swig_go_0) {
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  
  arg1 = *(CThostFtdcReqAuthenticateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcRspAuthenticateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspAuthenticateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspAuthenticateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspAuthenticateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspAuthenticateField *_swig_go_0) {
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspAuthenticateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspAuthenticateField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspAuthenticateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspAuthenticateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspAuthenticateField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspAuthenticateField *_swig_go_0) {
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspAuthenticateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspAuthenticateField_UserProductInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspAuthenticateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspAuthenticateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspAuthenticateField_UserProductInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspAuthenticateField *_swig_go_0) {
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspAuthenticateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserProductInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcRspAuthenticateField *_wrap_new_CThostFtdcRspAuthenticateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcRspAuthenticateField *result = 0 ;
  CThostFtdcRspAuthenticateField *_swig_go_result;
  
  
  result = (CThostFtdcRspAuthenticateField *)new CThostFtdcRspAuthenticateField();
  *(CThostFtdcRspAuthenticateField **)&_swig_go_result = (CThostFtdcRspAuthenticateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcRspAuthenticateField_goctp_ef6abdc493ff8ae2(CThostFtdcRspAuthenticateField *_swig_go_0) {
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  
  arg1 = *(CThostFtdcRspAuthenticateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcAuthenticationInfoField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcAuthenticationInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcAuthenticationInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcAuthenticationInfoField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcAuthenticationInfoField *_swig_go_0) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcAuthenticationInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcAuthenticationInfoField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcAuthenticationInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcAuthenticationInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcAuthenticationInfoField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcAuthenticationInfoField *_swig_go_0) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcAuthenticationInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcAuthenticationInfoField_UserProductInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcAuthenticationInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcAuthenticationInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcAuthenticationInfoField_UserProductInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcAuthenticationInfoField *_swig_go_0) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcAuthenticationInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserProductInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcAuthenticationInfoField_AuthInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcAuthenticationInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcAuthenticationInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AuthInfo, (const char *)arg2, 129-1);
      arg1->AuthInfo[129-1] = 0;
    } else {
      arg1->AuthInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcAuthenticationInfoField_AuthInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcAuthenticationInfoField *_swig_go_0) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcAuthenticationInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AuthInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcAuthenticationInfoField_IsResult_set_goctp_ef6abdc493ff8ae2(CThostFtdcAuthenticationInfoField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcAuthenticationInfoField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsResult = arg2;
  
}


intgo _wrap_CThostFtdcAuthenticationInfoField_IsResult_get_goctp_ef6abdc493ff8ae2(CThostFtdcAuthenticationInfoField *_swig_go_0) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcAuthenticationInfoField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsResult);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcAuthenticationInfoField *_wrap_new_CThostFtdcAuthenticationInfoField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcAuthenticationInfoField *result = 0 ;
  CThostFtdcAuthenticationInfoField *_swig_go_result;
  
  
  result = (CThostFtdcAuthenticationInfoField *)new CThostFtdcAuthenticationInfoField();
  *(CThostFtdcAuthenticationInfoField **)&_swig_go_result = (CThostFtdcAuthenticationInfoField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcAuthenticationInfoField_goctp_ef6abdc493ff8ae2(CThostFtdcAuthenticationInfoField *_swig_go_0) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  
  arg1 = *(CThostFtdcAuthenticationInfoField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTransferHeaderField_Version_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Version, (const char *)arg2, 4-1);
      arg1->Version[4-1] = 0;
    } else {
      arg1->Version[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferHeaderField_Version_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Version);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferHeaderField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferHeaderField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferHeaderField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferHeaderField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferHeaderField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferHeaderField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferHeaderField_TradeSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeSerial, (const char *)arg2, 9-1);
      arg1->TradeSerial[9-1] = 0;
    } else {
      arg1->TradeSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferHeaderField_TradeSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferHeaderField_FutureID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FutureID, (const char *)arg2, 11-1);
      arg1->FutureID[11-1] = 0;
    } else {
      arg1->FutureID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferHeaderField_FutureID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->FutureID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferHeaderField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferHeaderField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferHeaderField_BankBrchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBrchID, (const char *)arg2, 5-1);
      arg1->BankBrchID[5-1] = 0;
    } else {
      arg1->BankBrchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferHeaderField_BankBrchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBrchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferHeaderField_OperNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferHeaderField_OperNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferHeaderField_DeviceID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferHeaderField_DeviceID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DeviceID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferHeaderField_RecordNum_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->RecordNum, (const char *)arg2, 7-1);
      arg1->RecordNum[7-1] = 0;
    } else {
      arg1->RecordNum[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferHeaderField_RecordNum_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->RecordNum);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferHeaderField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcTransferHeaderField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferHeaderField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcTransferHeaderField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcTransferHeaderField *_wrap_new_CThostFtdcTransferHeaderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTransferHeaderField *result = 0 ;
  CThostFtdcTransferHeaderField *_swig_go_result;
  
  
  result = (CThostFtdcTransferHeaderField *)new CThostFtdcTransferHeaderField();
  *(CThostFtdcTransferHeaderField **)&_swig_go_result = (CThostFtdcTransferHeaderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTransferHeaderField_goctp_ef6abdc493ff8ae2(CThostFtdcTransferHeaderField *_swig_go_0) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  
  arg1 = *(CThostFtdcTransferHeaderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTransferBankToFutureReqField_FutureAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureReqField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferBankToFutureReqField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 13-1);
      arg1->FutureAccount[13-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferBankToFutureReqField_FutureAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureReqField *_swig_go_0) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferBankToFutureReqField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->FutureAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferBankToFutureReqField_FuturePwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureReqField *_swig_go_0, char _swig_go_1) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  TThostFtdcFuturePwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcTransferBankToFutureReqField **)&_swig_go_0; 
  arg2 = (TThostFtdcFuturePwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->FuturePwdFlag = arg2;
  
}


char _wrap_CThostFtdcTransferBankToFutureReqField_FuturePwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureReqField *_swig_go_0) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  TThostFtdcFuturePwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcTransferBankToFutureReqField **)&_swig_go_0; 
  
  result = (TThostFtdcFuturePwdFlagType) ((arg1)->FuturePwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferBankToFutureReqField_FutureAccPwd_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureReqField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferBankToFutureReqField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccPwd, (const char *)arg2, 17-1);
      arg1->FutureAccPwd[17-1] = 0;
    } else {
      arg1->FutureAccPwd[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferBankToFutureReqField_FutureAccPwd_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureReqField *_swig_go_0) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferBankToFutureReqField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->FutureAccPwd);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferBankToFutureReqField_TradeAmt_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureReqField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTransferBankToFutureReqField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->TradeAmt = arg2;
  
}


double _wrap_CThostFtdcTransferBankToFutureReqField_TradeAmt_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureReqField *_swig_go_0) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTransferBankToFutureReqField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->TradeAmt);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferBankToFutureReqField_CustFee_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureReqField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTransferBankToFutureReqField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CustFee = arg2;
  
}


double _wrap_CThostFtdcTransferBankToFutureReqField_CustFee_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureReqField *_swig_go_0) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTransferBankToFutureReqField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CustFee);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferBankToFutureReqField_CurrencyCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureReqField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferBankToFutureReqField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyCode, (const char *)arg2, 4-1);
      arg1->CurrencyCode[4-1] = 0;
    } else {
      arg1->CurrencyCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferBankToFutureReqField_CurrencyCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureReqField *_swig_go_0) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferBankToFutureReqField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcTransferBankToFutureReqField *_wrap_new_CThostFtdcTransferBankToFutureReqField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTransferBankToFutureReqField *result = 0 ;
  CThostFtdcTransferBankToFutureReqField *_swig_go_result;
  
  
  result = (CThostFtdcTransferBankToFutureReqField *)new CThostFtdcTransferBankToFutureReqField();
  *(CThostFtdcTransferBankToFutureReqField **)&_swig_go_result = (CThostFtdcTransferBankToFutureReqField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTransferBankToFutureReqField_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureReqField *_swig_go_0) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  
  arg1 = *(CThostFtdcTransferBankToFutureReqField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTransferBankToFutureRspField_RetCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferBankToFutureRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->RetCode, (const char *)arg2, 5-1);
      arg1->RetCode[5-1] = 0;
    } else {
      arg1->RetCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferBankToFutureRspField_RetCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureRspField *_swig_go_0) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferBankToFutureRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->RetCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferBankToFutureRspField_RetInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferBankToFutureRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->RetInfo, (const char *)arg2, 129-1);
      arg1->RetInfo[129-1] = 0;
    } else {
      arg1->RetInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferBankToFutureRspField_RetInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureRspField *_swig_go_0) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferBankToFutureRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->RetInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferBankToFutureRspField_FutureAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferBankToFutureRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 13-1);
      arg1->FutureAccount[13-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferBankToFutureRspField_FutureAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureRspField *_swig_go_0) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferBankToFutureRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->FutureAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferBankToFutureRspField_TradeAmt_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureRspField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTransferBankToFutureRspField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->TradeAmt = arg2;
  
}


double _wrap_CThostFtdcTransferBankToFutureRspField_TradeAmt_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureRspField *_swig_go_0) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTransferBankToFutureRspField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->TradeAmt);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferBankToFutureRspField_CustFee_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureRspField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTransferBankToFutureRspField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CustFee = arg2;
  
}


double _wrap_CThostFtdcTransferBankToFutureRspField_CustFee_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureRspField *_swig_go_0) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTransferBankToFutureRspField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CustFee);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferBankToFutureRspField_CurrencyCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferBankToFutureRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyCode, (const char *)arg2, 4-1);
      arg1->CurrencyCode[4-1] = 0;
    } else {
      arg1->CurrencyCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferBankToFutureRspField_CurrencyCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureRspField *_swig_go_0) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferBankToFutureRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcTransferBankToFutureRspField *_wrap_new_CThostFtdcTransferBankToFutureRspField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTransferBankToFutureRspField *result = 0 ;
  CThostFtdcTransferBankToFutureRspField *_swig_go_result;
  
  
  result = (CThostFtdcTransferBankToFutureRspField *)new CThostFtdcTransferBankToFutureRspField();
  *(CThostFtdcTransferBankToFutureRspField **)&_swig_go_result = (CThostFtdcTransferBankToFutureRspField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTransferBankToFutureRspField_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankToFutureRspField *_swig_go_0) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  
  arg1 = *(CThostFtdcTransferBankToFutureRspField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTransferFutureToBankReqField_FutureAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankReqField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferFutureToBankReqField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 13-1);
      arg1->FutureAccount[13-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferFutureToBankReqField_FutureAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankReqField *_swig_go_0) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferFutureToBankReqField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->FutureAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferFutureToBankReqField_FuturePwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankReqField *_swig_go_0, char _swig_go_1) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  TThostFtdcFuturePwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcTransferFutureToBankReqField **)&_swig_go_0; 
  arg2 = (TThostFtdcFuturePwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->FuturePwdFlag = arg2;
  
}


char _wrap_CThostFtdcTransferFutureToBankReqField_FuturePwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankReqField *_swig_go_0) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  TThostFtdcFuturePwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcTransferFutureToBankReqField **)&_swig_go_0; 
  
  result = (TThostFtdcFuturePwdFlagType) ((arg1)->FuturePwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferFutureToBankReqField_FutureAccPwd_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankReqField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferFutureToBankReqField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccPwd, (const char *)arg2, 17-1);
      arg1->FutureAccPwd[17-1] = 0;
    } else {
      arg1->FutureAccPwd[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferFutureToBankReqField_FutureAccPwd_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankReqField *_swig_go_0) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferFutureToBankReqField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->FutureAccPwd);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferFutureToBankReqField_TradeAmt_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankReqField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTransferFutureToBankReqField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->TradeAmt = arg2;
  
}


double _wrap_CThostFtdcTransferFutureToBankReqField_TradeAmt_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankReqField *_swig_go_0) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTransferFutureToBankReqField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->TradeAmt);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferFutureToBankReqField_CustFee_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankReqField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTransferFutureToBankReqField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CustFee = arg2;
  
}


double _wrap_CThostFtdcTransferFutureToBankReqField_CustFee_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankReqField *_swig_go_0) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTransferFutureToBankReqField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CustFee);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferFutureToBankReqField_CurrencyCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankReqField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferFutureToBankReqField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyCode, (const char *)arg2, 4-1);
      arg1->CurrencyCode[4-1] = 0;
    } else {
      arg1->CurrencyCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferFutureToBankReqField_CurrencyCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankReqField *_swig_go_0) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferFutureToBankReqField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcTransferFutureToBankReqField *_wrap_new_CThostFtdcTransferFutureToBankReqField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTransferFutureToBankReqField *result = 0 ;
  CThostFtdcTransferFutureToBankReqField *_swig_go_result;
  
  
  result = (CThostFtdcTransferFutureToBankReqField *)new CThostFtdcTransferFutureToBankReqField();
  *(CThostFtdcTransferFutureToBankReqField **)&_swig_go_result = (CThostFtdcTransferFutureToBankReqField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTransferFutureToBankReqField_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankReqField *_swig_go_0) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  
  arg1 = *(CThostFtdcTransferFutureToBankReqField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTransferFutureToBankRspField_RetCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferFutureToBankRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->RetCode, (const char *)arg2, 5-1);
      arg1->RetCode[5-1] = 0;
    } else {
      arg1->RetCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferFutureToBankRspField_RetCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankRspField *_swig_go_0) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferFutureToBankRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->RetCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferFutureToBankRspField_RetInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferFutureToBankRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->RetInfo, (const char *)arg2, 129-1);
      arg1->RetInfo[129-1] = 0;
    } else {
      arg1->RetInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferFutureToBankRspField_RetInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankRspField *_swig_go_0) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferFutureToBankRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->RetInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferFutureToBankRspField_FutureAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferFutureToBankRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 13-1);
      arg1->FutureAccount[13-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferFutureToBankRspField_FutureAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankRspField *_swig_go_0) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferFutureToBankRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->FutureAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferFutureToBankRspField_TradeAmt_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankRspField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTransferFutureToBankRspField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->TradeAmt = arg2;
  
}


double _wrap_CThostFtdcTransferFutureToBankRspField_TradeAmt_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankRspField *_swig_go_0) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTransferFutureToBankRspField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->TradeAmt);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferFutureToBankRspField_CustFee_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankRspField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTransferFutureToBankRspField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CustFee = arg2;
  
}


double _wrap_CThostFtdcTransferFutureToBankRspField_CustFee_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankRspField *_swig_go_0) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTransferFutureToBankRspField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CustFee);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferFutureToBankRspField_CurrencyCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferFutureToBankRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyCode, (const char *)arg2, 4-1);
      arg1->CurrencyCode[4-1] = 0;
    } else {
      arg1->CurrencyCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferFutureToBankRspField_CurrencyCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankRspField *_swig_go_0) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferFutureToBankRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcTransferFutureToBankRspField *_wrap_new_CThostFtdcTransferFutureToBankRspField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTransferFutureToBankRspField *result = 0 ;
  CThostFtdcTransferFutureToBankRspField *_swig_go_result;
  
  
  result = (CThostFtdcTransferFutureToBankRspField *)new CThostFtdcTransferFutureToBankRspField();
  *(CThostFtdcTransferFutureToBankRspField **)&_swig_go_result = (CThostFtdcTransferFutureToBankRspField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTransferFutureToBankRspField_goctp_ef6abdc493ff8ae2(CThostFtdcTransferFutureToBankRspField *_swig_go_0) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  
  arg1 = *(CThostFtdcTransferFutureToBankRspField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTransferQryBankReqField_FutureAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankReqField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferQryBankReqField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 13-1);
      arg1->FutureAccount[13-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferQryBankReqField_FutureAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankReqField *_swig_go_0) {
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryBankReqField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->FutureAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryBankReqField_FuturePwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankReqField *_swig_go_0, char _swig_go_1) {
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  TThostFtdcFuturePwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcTransferQryBankReqField **)&_swig_go_0; 
  arg2 = (TThostFtdcFuturePwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->FuturePwdFlag = arg2;
  
}


char _wrap_CThostFtdcTransferQryBankReqField_FuturePwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankReqField *_swig_go_0) {
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  TThostFtdcFuturePwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryBankReqField **)&_swig_go_0; 
  
  result = (TThostFtdcFuturePwdFlagType) ((arg1)->FuturePwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryBankReqField_FutureAccPwd_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankReqField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferQryBankReqField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccPwd, (const char *)arg2, 17-1);
      arg1->FutureAccPwd[17-1] = 0;
    } else {
      arg1->FutureAccPwd[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferQryBankReqField_FutureAccPwd_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankReqField *_swig_go_0) {
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryBankReqField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->FutureAccPwd);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryBankReqField_CurrencyCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankReqField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferQryBankReqField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyCode, (const char *)arg2, 4-1);
      arg1->CurrencyCode[4-1] = 0;
    } else {
      arg1->CurrencyCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferQryBankReqField_CurrencyCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankReqField *_swig_go_0) {
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryBankReqField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcTransferQryBankReqField *_wrap_new_CThostFtdcTransferQryBankReqField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTransferQryBankReqField *result = 0 ;
  CThostFtdcTransferQryBankReqField *_swig_go_result;
  
  
  result = (CThostFtdcTransferQryBankReqField *)new CThostFtdcTransferQryBankReqField();
  *(CThostFtdcTransferQryBankReqField **)&_swig_go_result = (CThostFtdcTransferQryBankReqField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTransferQryBankReqField_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankReqField *_swig_go_0) {
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  
  arg1 = *(CThostFtdcTransferQryBankReqField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTransferQryBankRspField_RetCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferQryBankRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->RetCode, (const char *)arg2, 5-1);
      arg1->RetCode[5-1] = 0;
    } else {
      arg1->RetCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferQryBankRspField_RetCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankRspField *_swig_go_0) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryBankRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->RetCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryBankRspField_RetInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferQryBankRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->RetInfo, (const char *)arg2, 129-1);
      arg1->RetInfo[129-1] = 0;
    } else {
      arg1->RetInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferQryBankRspField_RetInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankRspField *_swig_go_0) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryBankRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->RetInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryBankRspField_FutureAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferQryBankRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 13-1);
      arg1->FutureAccount[13-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferQryBankRspField_FutureAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankRspField *_swig_go_0) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryBankRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->FutureAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryBankRspField_TradeAmt_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankRspField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTransferQryBankRspField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->TradeAmt = arg2;
  
}


double _wrap_CThostFtdcTransferQryBankRspField_TradeAmt_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankRspField *_swig_go_0) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryBankRspField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->TradeAmt);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryBankRspField_UseAmt_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankRspField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTransferQryBankRspField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->UseAmt = arg2;
  
}


double _wrap_CThostFtdcTransferQryBankRspField_UseAmt_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankRspField *_swig_go_0) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryBankRspField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->UseAmt);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryBankRspField_FetchAmt_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankRspField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTransferQryBankRspField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FetchAmt = arg2;
  
}


double _wrap_CThostFtdcTransferQryBankRspField_FetchAmt_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankRspField *_swig_go_0) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryBankRspField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FetchAmt);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryBankRspField_CurrencyCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferQryBankRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyCode, (const char *)arg2, 4-1);
      arg1->CurrencyCode[4-1] = 0;
    } else {
      arg1->CurrencyCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferQryBankRspField_CurrencyCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankRspField *_swig_go_0) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryBankRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcTransferQryBankRspField *_wrap_new_CThostFtdcTransferQryBankRspField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTransferQryBankRspField *result = 0 ;
  CThostFtdcTransferQryBankRspField *_swig_go_result;
  
  
  result = (CThostFtdcTransferQryBankRspField *)new CThostFtdcTransferQryBankRspField();
  *(CThostFtdcTransferQryBankRspField **)&_swig_go_result = (CThostFtdcTransferQryBankRspField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTransferQryBankRspField_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryBankRspField *_swig_go_0) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  
  arg1 = *(CThostFtdcTransferQryBankRspField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTransferQryDetailReqField_FutureAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailReqField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferQryDetailReqField *arg1 = (CThostFtdcTransferQryDetailReqField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferQryDetailReqField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 13-1);
      arg1->FutureAccount[13-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferQryDetailReqField_FutureAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailReqField *_swig_go_0) {
  CThostFtdcTransferQryDetailReqField *arg1 = (CThostFtdcTransferQryDetailReqField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryDetailReqField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->FutureAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcTransferQryDetailReqField *_wrap_new_CThostFtdcTransferQryDetailReqField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTransferQryDetailReqField *result = 0 ;
  CThostFtdcTransferQryDetailReqField *_swig_go_result;
  
  
  result = (CThostFtdcTransferQryDetailReqField *)new CThostFtdcTransferQryDetailReqField();
  *(CThostFtdcTransferQryDetailReqField **)&_swig_go_result = (CThostFtdcTransferQryDetailReqField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTransferQryDetailReqField_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailReqField *_swig_go_0) {
  CThostFtdcTransferQryDetailReqField *arg1 = (CThostFtdcTransferQryDetailReqField *) 0 ;
  
  arg1 = *(CThostFtdcTransferQryDetailReqField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTransferQryDetailRspField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferQryDetailRspField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryDetailRspField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferQryDetailRspField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryDetailRspField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferQryDetailRspField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryDetailRspField_FutureSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcTradeSerialNoType arg2 ;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeSerialNoType)_swig_go_1; 
  
  if (arg1) (arg1)->FutureSerial = arg2;
  
}


intgo _wrap_CThostFtdcTransferQryDetailRspField_FutureSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcTradeSerialNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeSerialNoType) ((arg1)->FutureSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryDetailRspField_FutureID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FutureID, (const char *)arg2, 11-1);
      arg1->FutureID[11-1] = 0;
    } else {
      arg1->FutureID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferQryDetailRspField_FutureID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->FutureID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryDetailRspField_FutureAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 22-1);
      arg1->FutureAccount[22-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferQryDetailRspField_FutureAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->FutureAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryDetailRspField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcTradeSerialNoType arg2 ;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeSerialNoType)_swig_go_1; 
  
  if (arg1) (arg1)->BankSerial = arg2;
  
}


intgo _wrap_CThostFtdcTransferQryDetailRspField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcTradeSerialNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeSerialNoType) ((arg1)->BankSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryDetailRspField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferQryDetailRspField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryDetailRspField_BankBrchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBrchID, (const char *)arg2, 5-1);
      arg1->BankBrchID[5-1] = 0;
    } else {
      arg1->BankBrchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferQryDetailRspField_BankBrchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBrchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryDetailRspField_BankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferQryDetailRspField_BankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryDetailRspField_CertCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CertCode, (const char *)arg2, 21-1);
      arg1->CertCode[21-1] = 0;
    } else {
      arg1->CertCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferQryDetailRspField_CertCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CertCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryDetailRspField_CurrencyCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyCode, (const char *)arg2, 4-1);
      arg1->CurrencyCode[4-1] = 0;
    } else {
      arg1->CurrencyCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferQryDetailRspField_CurrencyCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryDetailRspField_TxAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->TxAmount = arg2;
  
}


double _wrap_CThostFtdcTransferQryDetailRspField_TxAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->TxAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferQryDetailRspField_Flag_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0, char _swig_go_1) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcTransferValidFlagType arg2 ;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  arg2 = (TThostFtdcTransferValidFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->Flag = arg2;
  
}


char _wrap_CThostFtdcTransferQryDetailRspField_Flag_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcTransferValidFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  result = (TThostFtdcTransferValidFlagType) ((arg1)->Flag);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcTransferQryDetailRspField *_wrap_new_CThostFtdcTransferQryDetailRspField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTransferQryDetailRspField *result = 0 ;
  CThostFtdcTransferQryDetailRspField *_swig_go_result;
  
  
  result = (CThostFtdcTransferQryDetailRspField *)new CThostFtdcTransferQryDetailRspField();
  *(CThostFtdcTransferQryDetailRspField **)&_swig_go_result = (CThostFtdcTransferQryDetailRspField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTransferQryDetailRspField_goctp_ef6abdc493ff8ae2(CThostFtdcTransferQryDetailRspField *_swig_go_0) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  
  arg1 = *(CThostFtdcTransferQryDetailRspField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcRspInfoField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspInfoField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspInfoField *arg1 = (CThostFtdcRspInfoField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcRspInfoField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcRspInfoField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspInfoField *_swig_go_0) {
  CThostFtdcRspInfoField *arg1 = (CThostFtdcRspInfoField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspInfoField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspInfoField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspInfoField *arg1 = (CThostFtdcRspInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspInfoField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspInfoField *_swig_go_0) {
  CThostFtdcRspInfoField *arg1 = (CThostFtdcRspInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcRspInfoField *_wrap_new_CThostFtdcRspInfoField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcRspInfoField *result = 0 ;
  CThostFtdcRspInfoField *_swig_go_result;
  
  
  result = (CThostFtdcRspInfoField *)new CThostFtdcRspInfoField();
  *(CThostFtdcRspInfoField **)&_swig_go_result = (CThostFtdcRspInfoField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcRspInfoField_goctp_ef6abdc493ff8ae2(CThostFtdcRspInfoField *_swig_go_0) {
  CThostFtdcRspInfoField *arg1 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(CThostFtdcRspInfoField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcExchangeField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeField *arg1 = (CThostFtdcExchangeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeField *_swig_go_0) {
  CThostFtdcExchangeField *arg1 = (CThostFtdcExchangeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeField_ExchangeName_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeField *arg1 = (CThostFtdcExchangeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeName, (const char *)arg2, 61-1);
      arg1->ExchangeName[61-1] = 0;
    } else {
      arg1->ExchangeName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeField_ExchangeName_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeField *_swig_go_0) {
  CThostFtdcExchangeField *arg1 = (CThostFtdcExchangeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeField_ExchangeProperty_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeField *arg1 = (CThostFtdcExchangeField *) 0 ;
  TThostFtdcExchangePropertyType arg2 ;
  
  arg1 = *(CThostFtdcExchangeField **)&_swig_go_0; 
  arg2 = (TThostFtdcExchangePropertyType)_swig_go_1; 
  
  if (arg1) (arg1)->ExchangeProperty = arg2;
  
}


char _wrap_CThostFtdcExchangeField_ExchangeProperty_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeField *_swig_go_0) {
  CThostFtdcExchangeField *arg1 = (CThostFtdcExchangeField *) 0 ;
  TThostFtdcExchangePropertyType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeField **)&_swig_go_0; 
  
  result = (TThostFtdcExchangePropertyType) ((arg1)->ExchangeProperty);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcExchangeField *_wrap_new_CThostFtdcExchangeField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcExchangeField *result = 0 ;
  CThostFtdcExchangeField *_swig_go_result;
  
  
  result = (CThostFtdcExchangeField *)new CThostFtdcExchangeField();
  *(CThostFtdcExchangeField **)&_swig_go_result = (CThostFtdcExchangeField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcExchangeField_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeField *_swig_go_0) {
  CThostFtdcExchangeField *arg1 = (CThostFtdcExchangeField *) 0 ;
  
  arg1 = *(CThostFtdcExchangeField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcProductField_ProductID_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 31-1);
      arg1->ProductID[31-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcProductField_ProductID_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ProductID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcProductField_ProductName_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ProductName, (const char *)arg2, 21-1);
      arg1->ProductName[21-1] = 0;
    } else {
      arg1->ProductName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcProductField_ProductName_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ProductName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcProductField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcProductField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcProductField_ProductClass_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0, char _swig_go_1) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcProductClassType arg2 ;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  arg2 = (TThostFtdcProductClassType)_swig_go_1; 
  
  if (arg1) (arg1)->ProductClass = arg2;
  
}


char _wrap_CThostFtdcProductField_ProductClass_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcProductClassType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  result = (TThostFtdcProductClassType) ((arg1)->ProductClass);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcProductField_VolumeMultiple_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeMultipleType arg2 ;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeMultipleType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeMultiple = arg2;
  
}


intgo _wrap_CThostFtdcProductField_VolumeMultiple_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeMultipleType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeMultipleType) ((arg1)->VolumeMultiple);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcProductField_PriceTick_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0, double _swig_go_1) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->PriceTick = arg2;
  
}


double _wrap_CThostFtdcProductField_PriceTick_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->PriceTick);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcProductField_MaxMarketOrderVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->MaxMarketOrderVolume = arg2;
  
}


intgo _wrap_CThostFtdcProductField_MaxMarketOrderVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->MaxMarketOrderVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcProductField_MinMarketOrderVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->MinMarketOrderVolume = arg2;
  
}


intgo _wrap_CThostFtdcProductField_MinMarketOrderVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->MinMarketOrderVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcProductField_MaxLimitOrderVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->MaxLimitOrderVolume = arg2;
  
}


intgo _wrap_CThostFtdcProductField_MaxLimitOrderVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->MaxLimitOrderVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcProductField_MinLimitOrderVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->MinLimitOrderVolume = arg2;
  
}


intgo _wrap_CThostFtdcProductField_MinLimitOrderVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->MinLimitOrderVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcProductField_PositionType_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0, char _swig_go_1) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcPositionTypeType arg2 ;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  arg2 = (TThostFtdcPositionTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->PositionType = arg2;
  
}


char _wrap_CThostFtdcProductField_PositionType_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcPositionTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  result = (TThostFtdcPositionTypeType) ((arg1)->PositionType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcProductField_PositionDateType_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0, char _swig_go_1) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcPositionDateTypeType arg2 ;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  arg2 = (TThostFtdcPositionDateTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->PositionDateType = arg2;
  
}


char _wrap_CThostFtdcProductField_PositionDateType_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcPositionDateTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  result = (TThostFtdcPositionDateTypeType) ((arg1)->PositionDateType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcProductField_CloseDealType_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0, char _swig_go_1) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcCloseDealTypeType arg2 ;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  arg2 = (TThostFtdcCloseDealTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseDealType = arg2;
  
}


char _wrap_CThostFtdcProductField_CloseDealType_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcCloseDealTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  result = (TThostFtdcCloseDealTypeType) ((arg1)->CloseDealType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcProductField_TradeCurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCurrencyID, (const char *)arg2, 4-1);
      arg1->TradeCurrencyID[4-1] = 0;
    } else {
      arg1->TradeCurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcProductField_TradeCurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcProductField_MortgageFundUseRange_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0, char _swig_go_1) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcMortgageFundUseRangeType arg2 ;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  arg2 = (TThostFtdcMortgageFundUseRangeType)_swig_go_1; 
  
  if (arg1) (arg1)->MortgageFundUseRange = arg2;
  
}


char _wrap_CThostFtdcProductField_MortgageFundUseRange_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcMortgageFundUseRangeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  result = (TThostFtdcMortgageFundUseRangeType) ((arg1)->MortgageFundUseRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcProductField_ExchangeProductID_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeProductID, (const char *)arg2, 31-1);
      arg1->ExchangeProductID[31-1] = 0;
    } else {
      arg1->ExchangeProductID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcProductField_ExchangeProductID_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeProductID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcProductField_UnderlyingMultiple_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0, double _swig_go_1) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcUnderlyingMultipleType arg2 ;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  arg2 = (TThostFtdcUnderlyingMultipleType)_swig_go_1; 
  
  if (arg1) (arg1)->UnderlyingMultiple = arg2;
  
}


double _wrap_CThostFtdcProductField_UnderlyingMultiple_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcUnderlyingMultipleType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  result = (TThostFtdcUnderlyingMultipleType) ((arg1)->UnderlyingMultiple);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcProductField *_wrap_new_CThostFtdcProductField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcProductField *result = 0 ;
  CThostFtdcProductField *_swig_go_result;
  
  
  result = (CThostFtdcProductField *)new CThostFtdcProductField();
  *(CThostFtdcProductField **)&_swig_go_result = (CThostFtdcProductField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcProductField_goctp_ef6abdc493ff8ae2(CThostFtdcProductField *_swig_go_0) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  
  arg1 = *(CThostFtdcProductField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInstrumentField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_InstrumentName_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentName, (const char *)arg2, 21-1);
      arg1->InstrumentName[21-1] = 0;
    } else {
      arg1->InstrumentName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentField_InstrumentName_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_ProductID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 31-1);
      arg1->ProductID[31-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentField_ProductID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ProductID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_ProductClass_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcProductClassType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  arg2 = (TThostFtdcProductClassType)_swig_go_1; 
  
  if (arg1) (arg1)->ProductClass = arg2;
  
}


char _wrap_CThostFtdcInstrumentField_ProductClass_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcProductClassType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (TThostFtdcProductClassType) ((arg1)->ProductClass);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_DeliveryYear_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcYearType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  arg2 = (TThostFtdcYearType)_swig_go_1; 
  
  if (arg1) (arg1)->DeliveryYear = arg2;
  
}


intgo _wrap_CThostFtdcInstrumentField_DeliveryYear_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcYearType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (TThostFtdcYearType) ((arg1)->DeliveryYear);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_DeliveryMonth_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcMonthType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  arg2 = (TThostFtdcMonthType)_swig_go_1; 
  
  if (arg1) (arg1)->DeliveryMonth = arg2;
  
}


intgo _wrap_CThostFtdcInstrumentField_DeliveryMonth_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcMonthType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (TThostFtdcMonthType) ((arg1)->DeliveryMonth);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_MaxMarketOrderVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->MaxMarketOrderVolume = arg2;
  
}


intgo _wrap_CThostFtdcInstrumentField_MaxMarketOrderVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->MaxMarketOrderVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_MinMarketOrderVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->MinMarketOrderVolume = arg2;
  
}


intgo _wrap_CThostFtdcInstrumentField_MinMarketOrderVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->MinMarketOrderVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_MaxLimitOrderVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->MaxLimitOrderVolume = arg2;
  
}


intgo _wrap_CThostFtdcInstrumentField_MaxLimitOrderVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->MaxLimitOrderVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_MinLimitOrderVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->MinLimitOrderVolume = arg2;
  
}


intgo _wrap_CThostFtdcInstrumentField_MinLimitOrderVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->MinLimitOrderVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_VolumeMultiple_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeMultipleType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeMultipleType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeMultiple = arg2;
  
}


intgo _wrap_CThostFtdcInstrumentField_VolumeMultiple_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeMultipleType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeMultipleType) ((arg1)->VolumeMultiple);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_PriceTick_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->PriceTick = arg2;
  
}


double _wrap_CThostFtdcInstrumentField_PriceTick_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->PriceTick);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_CreateDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CreateDate, (const char *)arg2, 9-1);
      arg1->CreateDate[9-1] = 0;
    } else {
      arg1->CreateDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentField_CreateDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CreateDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_OpenDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OpenDate, (const char *)arg2, 9-1);
      arg1->OpenDate[9-1] = 0;
    } else {
      arg1->OpenDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentField_OpenDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OpenDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_ExpireDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExpireDate, (const char *)arg2, 9-1);
      arg1->ExpireDate[9-1] = 0;
    } else {
      arg1->ExpireDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentField_ExpireDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExpireDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_StartDelivDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->StartDelivDate, (const char *)arg2, 9-1);
      arg1->StartDelivDate[9-1] = 0;
    } else {
      arg1->StartDelivDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentField_StartDelivDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->StartDelivDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_EndDelivDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->EndDelivDate, (const char *)arg2, 9-1);
      arg1->EndDelivDate[9-1] = 0;
    } else {
      arg1->EndDelivDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentField_EndDelivDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->EndDelivDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_InstLifePhase_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcInstLifePhaseType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstLifePhaseType)_swig_go_1; 
  
  if (arg1) (arg1)->InstLifePhase = arg2;
  
}


char _wrap_CThostFtdcInstrumentField_InstLifePhase_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcInstLifePhaseType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (TThostFtdcInstLifePhaseType) ((arg1)->InstLifePhase);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_IsTrading_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsTrading = arg2;
  
}


intgo _wrap_CThostFtdcInstrumentField_IsTrading_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsTrading);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_PositionType_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPositionTypeType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  arg2 = (TThostFtdcPositionTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->PositionType = arg2;
  
}


char _wrap_CThostFtdcInstrumentField_PositionType_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPositionTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (TThostFtdcPositionTypeType) ((arg1)->PositionType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_PositionDateType_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPositionDateTypeType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  arg2 = (TThostFtdcPositionDateTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->PositionDateType = arg2;
  
}


char _wrap_CThostFtdcInstrumentField_PositionDateType_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPositionDateTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (TThostFtdcPositionDateTypeType) ((arg1)->PositionDateType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_LongMarginRatio_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->LongMarginRatio = arg2;
  
}


double _wrap_CThostFtdcInstrumentField_LongMarginRatio_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->LongMarginRatio);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_ShortMarginRatio_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->ShortMarginRatio = arg2;
  
}


double _wrap_CThostFtdcInstrumentField_ShortMarginRatio_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->ShortMarginRatio);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_MaxMarginSideAlgorithm_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcMaxMarginSideAlgorithmType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  arg2 = (TThostFtdcMaxMarginSideAlgorithmType)_swig_go_1; 
  
  if (arg1) (arg1)->MaxMarginSideAlgorithm = arg2;
  
}


char _wrap_CThostFtdcInstrumentField_MaxMarginSideAlgorithm_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcMaxMarginSideAlgorithmType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (TThostFtdcMaxMarginSideAlgorithmType) ((arg1)->MaxMarginSideAlgorithm);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_UnderlyingInstrID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UnderlyingInstrID, (const char *)arg2, 31-1);
      arg1->UnderlyingInstrID[31-1] = 0;
    } else {
      arg1->UnderlyingInstrID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentField_UnderlyingInstrID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UnderlyingInstrID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_StrikePrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->StrikePrice = arg2;
  
}


double _wrap_CThostFtdcInstrumentField_StrikePrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->StrikePrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_OptionsType_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcOptionsTypeType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  arg2 = (TThostFtdcOptionsTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->OptionsType = arg2;
  
}


char _wrap_CThostFtdcInstrumentField_OptionsType_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcOptionsTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (TThostFtdcOptionsTypeType) ((arg1)->OptionsType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_UnderlyingMultiple_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcUnderlyingMultipleType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  arg2 = (TThostFtdcUnderlyingMultipleType)_swig_go_1; 
  
  if (arg1) (arg1)->UnderlyingMultiple = arg2;
  
}


double _wrap_CThostFtdcInstrumentField_UnderlyingMultiple_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcUnderlyingMultipleType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (TThostFtdcUnderlyingMultipleType) ((arg1)->UnderlyingMultiple);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentField_CombinationType_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcCombinationTypeType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  arg2 = (TThostFtdcCombinationTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->CombinationType = arg2;
  
}


char _wrap_CThostFtdcInstrumentField_CombinationType_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcCombinationTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  result = (TThostFtdcCombinationTypeType) ((arg1)->CombinationType);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcInstrumentField *_wrap_new_CThostFtdcInstrumentField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInstrumentField *result = 0 ;
  CThostFtdcInstrumentField *_swig_go_result;
  
  
  result = (CThostFtdcInstrumentField *)new CThostFtdcInstrumentField();
  *(CThostFtdcInstrumentField **)&_swig_go_result = (CThostFtdcInstrumentField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInstrumentField_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentField *_swig_go_0) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  
  arg1 = *(CThostFtdcInstrumentField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcBrokerField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerField *_swig_go_0) {
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerField_BrokerAbbr_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerAbbr, (const char *)arg2, 9-1);
      arg1->BrokerAbbr[9-1] = 0;
    } else {
      arg1->BrokerAbbr[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerField_BrokerAbbr_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerField *_swig_go_0) {
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerAbbr);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerField_BrokerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerName, (const char *)arg2, 81-1);
      arg1->BrokerName[81-1] = 0;
    } else {
      arg1->BrokerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerField_BrokerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerField *_swig_go_0) {
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerField_IsActive_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcBrokerField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsActive = arg2;
  
}


intgo _wrap_CThostFtdcBrokerField_IsActive_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerField *_swig_go_0) {
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcBrokerField *_wrap_new_CThostFtdcBrokerField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcBrokerField *result = 0 ;
  CThostFtdcBrokerField *_swig_go_result;
  
  
  result = (CThostFtdcBrokerField *)new CThostFtdcBrokerField();
  *(CThostFtdcBrokerField **)&_swig_go_result = (CThostFtdcBrokerField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcBrokerField_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerField *_swig_go_0) {
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  
  arg1 = *(CThostFtdcBrokerField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTraderField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderField *_swig_go_0) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderField *_swig_go_0) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderField *_swig_go_0) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderField *_swig_go_0) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderField_InstallCount_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  TThostFtdcInstallCountType arg2 ;
  
  arg1 = *(CThostFtdcTraderField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallCountType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallCount = arg2;
  
}


intgo _wrap_CThostFtdcTraderField_InstallCount_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderField *_swig_go_0) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  TThostFtdcInstallCountType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallCountType) ((arg1)->InstallCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderField *_swig_go_0) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcTraderField *_wrap_new_CThostFtdcTraderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTraderField *result = 0 ;
  CThostFtdcTraderField *_swig_go_result;
  
  
  result = (CThostFtdcTraderField *)new CThostFtdcTraderField();
  *(CThostFtdcTraderField **)&_swig_go_result = (CThostFtdcTraderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTraderField_goctp_ef6abdc493ff8ae2(CThostFtdcTraderField *_swig_go_0) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  
  arg1 = *(CThostFtdcTraderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInvestorField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorField_InvestorGroupID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorGroupID, (const char *)arg2, 13-1);
      arg1->InvestorGroupID[13-1] = 0;
    } else {
      arg1->InvestorGroupID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorField_InvestorGroupID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorGroupID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorField_InvestorName_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorName, (const char *)arg2, 81-1);
      arg1->InvestorName[81-1] = 0;
    } else {
      arg1->InvestorName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorField_InvestorName_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorField_IdentifiedCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdentifiedCardType = arg2;
  
}


char _wrap_CThostFtdcInvestorField_IdentifiedCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdentifiedCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorField_IsActive_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsActive = arg2;
  
}


intgo _wrap_CThostFtdcInvestorField_IsActive_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorField_Telephone_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorField_Telephone_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Telephone);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorField_Address_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorField_Address_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Address);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorField_OpenDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OpenDate, (const char *)arg2, 9-1);
      arg1->OpenDate[9-1] = 0;
    } else {
      arg1->OpenDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorField_OpenDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OpenDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorField_Mobile_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Mobile, (const char *)arg2, 41-1);
      arg1->Mobile[41-1] = 0;
    } else {
      arg1->Mobile[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorField_Mobile_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Mobile);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorField_CommModelID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CommModelID, (const char *)arg2, 13-1);
      arg1->CommModelID[13-1] = 0;
    } else {
      arg1->CommModelID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorField_CommModelID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CommModelID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorField_MarginModelID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MarginModelID, (const char *)arg2, 13-1);
      arg1->MarginModelID[13-1] = 0;
    } else {
      arg1->MarginModelID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorField_MarginModelID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MarginModelID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcInvestorField *_wrap_new_CThostFtdcInvestorField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInvestorField *result = 0 ;
  CThostFtdcInvestorField *_swig_go_result;
  
  
  result = (CThostFtdcInvestorField *)new CThostFtdcInvestorField();
  *(CThostFtdcInvestorField **)&_swig_go_result = (CThostFtdcInvestorField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInvestorField_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorField *_swig_go_0) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  
  arg1 = *(CThostFtdcInvestorField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTradingCodeField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingCodeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingCodeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingCodeField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingCodeField *_swig_go_0) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingCodeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingCodeField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingCodeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingCodeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingCodeField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingCodeField *_swig_go_0) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingCodeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingCodeField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingCodeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingCodeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingCodeField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingCodeField *_swig_go_0) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingCodeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingCodeField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingCodeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingCodeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingCodeField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingCodeField *_swig_go_0) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingCodeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingCodeField_IsActive_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingCodeField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcTradingCodeField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsActive = arg2;
  
}


intgo _wrap_CThostFtdcTradingCodeField_IsActive_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingCodeField *_swig_go_0) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTradingCodeField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingCodeField_ClientIDType_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingCodeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  TThostFtdcClientIDTypeType arg2 ;
  
  arg1 = *(CThostFtdcTradingCodeField **)&_swig_go_0; 
  arg2 = (TThostFtdcClientIDTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->ClientIDType = arg2;
  
}


char _wrap_CThostFtdcTradingCodeField_ClientIDType_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingCodeField *_swig_go_0) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  TThostFtdcClientIDTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcTradingCodeField **)&_swig_go_0; 
  
  result = (TThostFtdcClientIDTypeType) ((arg1)->ClientIDType);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcTradingCodeField *_wrap_new_CThostFtdcTradingCodeField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTradingCodeField *result = 0 ;
  CThostFtdcTradingCodeField *_swig_go_result;
  
  
  result = (CThostFtdcTradingCodeField *)new CThostFtdcTradingCodeField();
  *(CThostFtdcTradingCodeField **)&_swig_go_result = (CThostFtdcTradingCodeField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTradingCodeField_goctp_ef6abdc493ff8ae2(CThostFtdcTradingCodeField *_swig_go_0) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  
  arg1 = *(CThostFtdcTradingCodeField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcPartBrokerField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcPartBrokerField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcPartBrokerField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcPartBrokerField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcPartBrokerField *_swig_go_0) {
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcPartBrokerField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcPartBrokerField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcPartBrokerField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcPartBrokerField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcPartBrokerField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcPartBrokerField *_swig_go_0) {
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcPartBrokerField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcPartBrokerField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcPartBrokerField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcPartBrokerField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcPartBrokerField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcPartBrokerField *_swig_go_0) {
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcPartBrokerField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcPartBrokerField_IsActive_set_goctp_ef6abdc493ff8ae2(CThostFtdcPartBrokerField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcPartBrokerField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsActive = arg2;
  
}


intgo _wrap_CThostFtdcPartBrokerField_IsActive_get_goctp_ef6abdc493ff8ae2(CThostFtdcPartBrokerField *_swig_go_0) {
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcPartBrokerField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcPartBrokerField *_wrap_new_CThostFtdcPartBrokerField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcPartBrokerField *result = 0 ;
  CThostFtdcPartBrokerField *_swig_go_result;
  
  
  result = (CThostFtdcPartBrokerField *)new CThostFtdcPartBrokerField();
  *(CThostFtdcPartBrokerField **)&_swig_go_result = (CThostFtdcPartBrokerField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcPartBrokerField_goctp_ef6abdc493ff8ae2(CThostFtdcPartBrokerField *_swig_go_0) {
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  
  arg1 = *(CThostFtdcPartBrokerField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcSuperUserField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSuperUserField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSuperUserField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSuperUserField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSuperUserField *_swig_go_0) {
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSuperUserField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSuperUserField_UserName_set_goctp_ef6abdc493ff8ae2(CThostFtdcSuperUserField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSuperUserField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserName, (const char *)arg2, 81-1);
      arg1->UserName[81-1] = 0;
    } else {
      arg1->UserName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSuperUserField_UserName_get_goctp_ef6abdc493ff8ae2(CThostFtdcSuperUserField *_swig_go_0) {
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSuperUserField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSuperUserField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcSuperUserField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSuperUserField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSuperUserField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcSuperUserField *_swig_go_0) {
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSuperUserField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSuperUserField_IsActive_set_goctp_ef6abdc493ff8ae2(CThostFtdcSuperUserField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcSuperUserField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsActive = arg2;
  
}


intgo _wrap_CThostFtdcSuperUserField_IsActive_get_goctp_ef6abdc493ff8ae2(CThostFtdcSuperUserField *_swig_go_0) {
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSuperUserField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcSuperUserField *_wrap_new_CThostFtdcSuperUserField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcSuperUserField *result = 0 ;
  CThostFtdcSuperUserField *_swig_go_result;
  
  
  result = (CThostFtdcSuperUserField *)new CThostFtdcSuperUserField();
  *(CThostFtdcSuperUserField **)&_swig_go_result = (CThostFtdcSuperUserField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcSuperUserField_goctp_ef6abdc493ff8ae2(CThostFtdcSuperUserField *_swig_go_0) {
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  
  arg1 = *(CThostFtdcSuperUserField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcSuperUserFunctionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSuperUserFunctionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSuperUserFunctionField *arg1 = (CThostFtdcSuperUserFunctionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSuperUserFunctionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSuperUserFunctionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSuperUserFunctionField *_swig_go_0) {
  CThostFtdcSuperUserFunctionField *arg1 = (CThostFtdcSuperUserFunctionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSuperUserFunctionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSuperUserFunctionField_FunctionCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcSuperUserFunctionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcSuperUserFunctionField *arg1 = (CThostFtdcSuperUserFunctionField *) 0 ;
  TThostFtdcFunctionCodeType arg2 ;
  
  arg1 = *(CThostFtdcSuperUserFunctionField **)&_swig_go_0; 
  arg2 = (TThostFtdcFunctionCodeType)_swig_go_1; 
  
  if (arg1) (arg1)->FunctionCode = arg2;
  
}


char _wrap_CThostFtdcSuperUserFunctionField_FunctionCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcSuperUserFunctionField *_swig_go_0) {
  CThostFtdcSuperUserFunctionField *arg1 = (CThostFtdcSuperUserFunctionField *) 0 ;
  TThostFtdcFunctionCodeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcSuperUserFunctionField **)&_swig_go_0; 
  
  result = (TThostFtdcFunctionCodeType) ((arg1)->FunctionCode);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcSuperUserFunctionField *_wrap_new_CThostFtdcSuperUserFunctionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcSuperUserFunctionField *result = 0 ;
  CThostFtdcSuperUserFunctionField *_swig_go_result;
  
  
  result = (CThostFtdcSuperUserFunctionField *)new CThostFtdcSuperUserFunctionField();
  *(CThostFtdcSuperUserFunctionField **)&_swig_go_result = (CThostFtdcSuperUserFunctionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcSuperUserFunctionField_goctp_ef6abdc493ff8ae2(CThostFtdcSuperUserFunctionField *_swig_go_0) {
  CThostFtdcSuperUserFunctionField *arg1 = (CThostFtdcSuperUserFunctionField *) 0 ;
  
  arg1 = *(CThostFtdcSuperUserFunctionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInvestorGroupField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorGroupField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorGroupField *arg1 = (CThostFtdcInvestorGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorGroupField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorGroupField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorGroupField *_swig_go_0) {
  CThostFtdcInvestorGroupField *arg1 = (CThostFtdcInvestorGroupField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorGroupField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorGroupField_InvestorGroupID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorGroupField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorGroupField *arg1 = (CThostFtdcInvestorGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorGroupField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorGroupID, (const char *)arg2, 13-1);
      arg1->InvestorGroupID[13-1] = 0;
    } else {
      arg1->InvestorGroupID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorGroupField_InvestorGroupID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorGroupField *_swig_go_0) {
  CThostFtdcInvestorGroupField *arg1 = (CThostFtdcInvestorGroupField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorGroupField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorGroupID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorGroupField_InvestorGroupName_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorGroupField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorGroupField *arg1 = (CThostFtdcInvestorGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorGroupField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorGroupName, (const char *)arg2, 41-1);
      arg1->InvestorGroupName[41-1] = 0;
    } else {
      arg1->InvestorGroupName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorGroupField_InvestorGroupName_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorGroupField *_swig_go_0) {
  CThostFtdcInvestorGroupField *arg1 = (CThostFtdcInvestorGroupField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorGroupField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorGroupName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcInvestorGroupField *_wrap_new_CThostFtdcInvestorGroupField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInvestorGroupField *result = 0 ;
  CThostFtdcInvestorGroupField *_swig_go_result;
  
  
  result = (CThostFtdcInvestorGroupField *)new CThostFtdcInvestorGroupField();
  *(CThostFtdcInvestorGroupField **)&_swig_go_result = (CThostFtdcInvestorGroupField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInvestorGroupField_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorGroupField *_swig_go_0) {
  CThostFtdcInvestorGroupField *arg1 = (CThostFtdcInvestorGroupField *) 0 ;
  
  arg1 = *(CThostFtdcInvestorGroupField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTradingAccountField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingAccountField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingAccountField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_PreMortgage_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PreMortgage = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_PreMortgage_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PreMortgage);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_PreCredit_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PreCredit = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_PreCredit_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PreCredit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_PreDeposit_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PreDeposit = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_PreDeposit_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PreDeposit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_PreBalance_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PreBalance = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_PreBalance_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PreBalance);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_PreMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PreMargin = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_PreMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PreMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_InterestBase_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->InterestBase = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_InterestBase_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->InterestBase);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_Interest_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Interest = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_Interest_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Interest);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_Deposit_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Deposit = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_Deposit_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Deposit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_Withdraw_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Withdraw = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_Withdraw_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Withdraw);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_FrozenMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FrozenMargin = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_FrozenMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FrozenMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_FrozenCash_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FrozenCash = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_FrozenCash_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCash);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_FrozenCommission_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FrozenCommission = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_FrozenCommission_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCommission);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_CurrMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CurrMargin = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_CurrMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CurrMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_CashIn_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CashIn = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_CashIn_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CashIn);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_Commission_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Commission = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_Commission_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Commission);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_CloseProfit_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseProfit = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_CloseProfit_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_PositionProfit_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PositionProfit = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_PositionProfit_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PositionProfit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_Balance_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Balance = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_Balance_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Balance);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_Available_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Available = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_Available_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Available);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_WithdrawQuota_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->WithdrawQuota = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_WithdrawQuota_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->WithdrawQuota);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_Reserve_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Reserve = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_Reserve_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Reserve);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingAccountField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_SettlementID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSettlementIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementID = arg2;
  
}


intgo _wrap_CThostFtdcTradingAccountField_SettlementID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcSettlementIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_Credit_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Credit = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_Credit_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Credit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_Mortgage_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Mortgage = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_Mortgage_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Mortgage);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_ExchangeMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ExchangeMargin = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_ExchangeMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ExchangeMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_DeliveryMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->DeliveryMargin = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_DeliveryMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->DeliveryMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_ExchangeDeliveryMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ExchangeDeliveryMargin = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_ExchangeDeliveryMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ExchangeDeliveryMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_ReserveBalance_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ReserveBalance = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_ReserveBalance_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ReserveBalance);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingAccountField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_PreFundMortgageIn_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PreFundMortgageIn = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_PreFundMortgageIn_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PreFundMortgageIn);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_PreFundMortgageOut_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PreFundMortgageOut = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_PreFundMortgageOut_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PreFundMortgageOut);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_FundMortgageIn_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FundMortgageIn = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_FundMortgageIn_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FundMortgageIn);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_FundMortgageOut_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FundMortgageOut = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_FundMortgageOut_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FundMortgageOut);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_FundMortgageAvailable_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FundMortgageAvailable = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_FundMortgageAvailable_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FundMortgageAvailable);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_MortgageableFund_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->MortgageableFund = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_MortgageableFund_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->MortgageableFund);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_SpecProductMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->SpecProductMargin = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_SpecProductMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_SpecProductFrozenMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->SpecProductFrozenMargin = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_SpecProductFrozenMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductFrozenMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_SpecProductCommission_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->SpecProductCommission = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_SpecProductCommission_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductCommission);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_SpecProductFrozenCommission_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->SpecProductFrozenCommission = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_SpecProductFrozenCommission_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductFrozenCommission);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_SpecProductPositionProfit_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->SpecProductPositionProfit = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_SpecProductPositionProfit_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductPositionProfit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_SpecProductCloseProfit_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->SpecProductCloseProfit = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_SpecProductCloseProfit_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductCloseProfit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_SpecProductPositionProfitByAlg_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->SpecProductPositionProfitByAlg = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_SpecProductPositionProfitByAlg_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductPositionProfitByAlg);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountField_SpecProductExchangeMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->SpecProductExchangeMargin = arg2;
  
}


double _wrap_CThostFtdcTradingAccountField_SpecProductExchangeMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductExchangeMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcTradingAccountField *_wrap_new_CThostFtdcTradingAccountField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTradingAccountField *result = 0 ;
  CThostFtdcTradingAccountField *_swig_go_result;
  
  
  result = (CThostFtdcTradingAccountField *)new CThostFtdcTradingAccountField();
  *(CThostFtdcTradingAccountField **)&_swig_go_result = (CThostFtdcTradingAccountField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTradingAccountField_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountField *_swig_go_0) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  
  arg1 = *(CThostFtdcTradingAccountField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInvestorPositionField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorPositionField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorPositionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorPositionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_PosiDirection_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPosiDirectionType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcPosiDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->PosiDirection = arg2;
  
}


char _wrap_CThostFtdcInvestorPositionField_PosiDirection_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPosiDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcPosiDirectionType) ((arg1)->PosiDirection);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcInvestorPositionField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_PositionDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPositionDateType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcPositionDateType)_swig_go_1; 
  
  if (arg1) (arg1)->PositionDate = arg2;
  
}


char _wrap_CThostFtdcInvestorPositionField_PositionDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPositionDateType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcPositionDateType) ((arg1)->PositionDate);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_YdPosition_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->YdPosition = arg2;
  
}


intgo _wrap_CThostFtdcInvestorPositionField_YdPosition_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->YdPosition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_Position_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->Position = arg2;
  
}


intgo _wrap_CThostFtdcInvestorPositionField_Position_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->Position);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_LongFrozen_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->LongFrozen = arg2;
  
}


intgo _wrap_CThostFtdcInvestorPositionField_LongFrozen_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->LongFrozen);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_ShortFrozen_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->ShortFrozen = arg2;
  
}


intgo _wrap_CThostFtdcInvestorPositionField_ShortFrozen_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->ShortFrozen);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_LongFrozenAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->LongFrozenAmount = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_LongFrozenAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->LongFrozenAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_ShortFrozenAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ShortFrozenAmount = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_ShortFrozenAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ShortFrozenAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_OpenVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenVolume = arg2;
  
}


intgo _wrap_CThostFtdcInvestorPositionField_OpenVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->OpenVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_CloseVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseVolume = arg2;
  
}


intgo _wrap_CThostFtdcInvestorPositionField_CloseVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->CloseVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_OpenAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenAmount = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_OpenAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->OpenAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_CloseAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseAmount = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_CloseAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CloseAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_PositionCost_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PositionCost = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_PositionCost_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PositionCost);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_PreMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PreMargin = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_PreMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PreMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_UseMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->UseMargin = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_UseMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->UseMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_FrozenMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FrozenMargin = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_FrozenMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FrozenMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_FrozenCash_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FrozenCash = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_FrozenCash_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCash);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_FrozenCommission_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FrozenCommission = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_FrozenCommission_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCommission);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_CashIn_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CashIn = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_CashIn_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CashIn);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_Commission_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Commission = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_Commission_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Commission);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_CloseProfit_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseProfit = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_CloseProfit_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_PositionProfit_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PositionProfit = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_PositionProfit_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PositionProfit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_PreSettlementPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->PreSettlementPrice = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_PreSettlementPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->PreSettlementPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_SettlementPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementPrice = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_SettlementPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->SettlementPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorPositionField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_SettlementID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSettlementIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementID = arg2;
  
}


intgo _wrap_CThostFtdcInvestorPositionField_SettlementID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcSettlementIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_OpenCost_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenCost = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_OpenCost_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->OpenCost);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_ExchangeMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ExchangeMargin = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_ExchangeMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ExchangeMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_CombPosition_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->CombPosition = arg2;
  
}


intgo _wrap_CThostFtdcInvestorPositionField_CombPosition_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->CombPosition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_CombLongFrozen_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->CombLongFrozen = arg2;
  
}


intgo _wrap_CThostFtdcInvestorPositionField_CombLongFrozen_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->CombLongFrozen);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_CombShortFrozen_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->CombShortFrozen = arg2;
  
}


intgo _wrap_CThostFtdcInvestorPositionField_CombShortFrozen_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->CombShortFrozen);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_CloseProfitByDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseProfitByDate = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_CloseProfitByDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfitByDate);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_CloseProfitByTrade_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseProfitByTrade = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_CloseProfitByTrade_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfitByTrade);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_TodayPosition_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->TodayPosition = arg2;
  
}


intgo _wrap_CThostFtdcInvestorPositionField_TodayPosition_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->TodayPosition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_MarginRateByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->MarginRateByMoney = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_MarginRateByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_MarginRateByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->MarginRateByVolume = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_MarginRateByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_StrikeFrozen_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->StrikeFrozen = arg2;
  
}


intgo _wrap_CThostFtdcInvestorPositionField_StrikeFrozen_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->StrikeFrozen);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_StrikeFrozenAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->StrikeFrozenAmount = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionField_StrikeFrozenAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->StrikeFrozenAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionField_AbandonFrozen_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->AbandonFrozen = arg2;
  
}


intgo _wrap_CThostFtdcInvestorPositionField_AbandonFrozen_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->AbandonFrozen);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcInvestorPositionField *_wrap_new_CThostFtdcInvestorPositionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInvestorPositionField *result = 0 ;
  CThostFtdcInvestorPositionField *_swig_go_result;
  
  
  result = (CThostFtdcInvestorPositionField *)new CThostFtdcInvestorPositionField();
  *(CThostFtdcInvestorPositionField **)&_swig_go_result = (CThostFtdcInvestorPositionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInvestorPositionField_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionField *_swig_go_0) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  
  arg1 = *(CThostFtdcInvestorPositionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInstrumentMarginRateField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentMarginRateField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentMarginRateField_InvestorRange_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcInvestorRangeType)_swig_go_1; 
  
  if (arg1) (arg1)->InvestorRange = arg2;
  
}


char _wrap_CThostFtdcInstrumentMarginRateField_InvestorRange_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcInvestorRangeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentMarginRateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentMarginRateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentMarginRateField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentMarginRateField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentMarginRateField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcInstrumentMarginRateField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentMarginRateField_LongMarginRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->LongMarginRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcInstrumentMarginRateField_LongMarginRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->LongMarginRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentMarginRateField_LongMarginRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->LongMarginRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcInstrumentMarginRateField_LongMarginRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->LongMarginRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentMarginRateField_ShortMarginRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->ShortMarginRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcInstrumentMarginRateField_ShortMarginRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->ShortMarginRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentMarginRateField_ShortMarginRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ShortMarginRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcInstrumentMarginRateField_ShortMarginRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ShortMarginRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentMarginRateField_IsRelative_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsRelative = arg2;
  
}


intgo _wrap_CThostFtdcInstrumentMarginRateField_IsRelative_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsRelative);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcInstrumentMarginRateField *_wrap_new_CThostFtdcInstrumentMarginRateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInstrumentMarginRateField *result = 0 ;
  CThostFtdcInstrumentMarginRateField *_swig_go_result;
  
  
  result = (CThostFtdcInstrumentMarginRateField *)new CThostFtdcInstrumentMarginRateField();
  *(CThostFtdcInstrumentMarginRateField **)&_swig_go_result = (CThostFtdcInstrumentMarginRateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInstrumentMarginRateField_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInstrumentCommissionRateField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentCommissionRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentCommissionRateField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentCommissionRateField_InvestorRange_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentCommissionRateField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcInvestorRangeType)_swig_go_1; 
  
  if (arg1) (arg1)->InvestorRange = arg2;
  
}


char _wrap_CThostFtdcInstrumentCommissionRateField_InvestorRange_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcInvestorRangeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentCommissionRateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentCommissionRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentCommissionRateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentCommissionRateField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentCommissionRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentCommissionRateField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentCommissionRateField_OpenRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentCommissionRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcInstrumentCommissionRateField_OpenRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentCommissionRateField_OpenRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentCommissionRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcInstrumentCommissionRateField_OpenRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentCommissionRateField_CloseRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentCommissionRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcInstrumentCommissionRateField_CloseRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentCommissionRateField_CloseRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentCommissionRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcInstrumentCommissionRateField_CloseRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentCommissionRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseTodayRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentCommissionRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseTodayRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcInstrumentCommissionRateField *_wrap_new_CThostFtdcInstrumentCommissionRateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInstrumentCommissionRateField *result = 0 ;
  CThostFtdcInstrumentCommissionRateField *_swig_go_result;
  
  
  result = (CThostFtdcInstrumentCommissionRateField *)new CThostFtdcInstrumentCommissionRateField();
  *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_result = (CThostFtdcInstrumentCommissionRateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInstrumentCommissionRateField_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  
  arg1 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcDepthMarketDataField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcDepthMarketDataField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcDepthMarketDataField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcDepthMarketDataField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcDepthMarketDataField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_LastPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LastPrice = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_LastPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LastPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_PreSettlementPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->PreSettlementPrice = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_PreSettlementPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->PreSettlementPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_PreClosePrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->PreClosePrice = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_PreClosePrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->PreClosePrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_PreOpenInterest_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcLargeVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->PreOpenInterest = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_PreOpenInterest_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcLargeVolumeType) ((arg1)->PreOpenInterest);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_OpenPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenPrice = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_OpenPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->OpenPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_HighestPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->HighestPrice = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_HighestPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->HighestPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_LowestPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LowestPrice = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_LowestPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LowestPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_Volume_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->Volume = arg2;
  
}


intgo _wrap_CThostFtdcDepthMarketDataField_Volume_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_Turnover_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Turnover = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_Turnover_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Turnover);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_OpenInterest_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcLargeVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenInterest = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_OpenInterest_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcLargeVolumeType) ((arg1)->OpenInterest);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_ClosePrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->ClosePrice = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_ClosePrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->ClosePrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_SettlementPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementPrice = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_SettlementPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->SettlementPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_UpperLimitPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->UpperLimitPrice = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_UpperLimitPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->UpperLimitPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_LowerLimitPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LowerLimitPrice = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_LowerLimitPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LowerLimitPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_PreDelta_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->PreDelta = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_PreDelta_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->PreDelta);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_CurrDelta_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CurrDelta = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_CurrDelta_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CurrDelta);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_UpdateTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UpdateTime, (const char *)arg2, 9-1);
      arg1->UpdateTime[9-1] = 0;
    } else {
      arg1->UpdateTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcDepthMarketDataField_UpdateTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UpdateTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_UpdateMillisec_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcMillisecType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcMillisecType)_swig_go_1; 
  
  if (arg1) (arg1)->UpdateMillisec = arg2;
  
}


intgo _wrap_CThostFtdcDepthMarketDataField_UpdateMillisec_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcMillisecType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcMillisecType) ((arg1)->UpdateMillisec);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_BidPrice1_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->BidPrice1 = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_BidPrice1_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->BidPrice1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_BidVolume1_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->BidVolume1 = arg2;
  
}


intgo _wrap_CThostFtdcDepthMarketDataField_BidVolume1_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_AskPrice1_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->AskPrice1 = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_AskPrice1_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->AskPrice1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_AskVolume1_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->AskVolume1 = arg2;
  
}


intgo _wrap_CThostFtdcDepthMarketDataField_AskVolume1_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_BidPrice2_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->BidPrice2 = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_BidPrice2_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->BidPrice2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_BidVolume2_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->BidVolume2 = arg2;
  
}


intgo _wrap_CThostFtdcDepthMarketDataField_BidVolume2_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_AskPrice2_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->AskPrice2 = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_AskPrice2_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->AskPrice2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_AskVolume2_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->AskVolume2 = arg2;
  
}


intgo _wrap_CThostFtdcDepthMarketDataField_AskVolume2_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_BidPrice3_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->BidPrice3 = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_BidPrice3_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->BidPrice3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_BidVolume3_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->BidVolume3 = arg2;
  
}


intgo _wrap_CThostFtdcDepthMarketDataField_BidVolume3_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_AskPrice3_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->AskPrice3 = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_AskPrice3_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->AskPrice3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_AskVolume3_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->AskVolume3 = arg2;
  
}


intgo _wrap_CThostFtdcDepthMarketDataField_AskVolume3_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_BidPrice4_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->BidPrice4 = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_BidPrice4_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->BidPrice4);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_BidVolume4_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->BidVolume4 = arg2;
  
}


intgo _wrap_CThostFtdcDepthMarketDataField_BidVolume4_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume4);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_AskPrice4_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->AskPrice4 = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_AskPrice4_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->AskPrice4);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_AskVolume4_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->AskVolume4 = arg2;
  
}


intgo _wrap_CThostFtdcDepthMarketDataField_AskVolume4_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume4);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_BidPrice5_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->BidPrice5 = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_BidPrice5_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->BidPrice5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_BidVolume5_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->BidVolume5 = arg2;
  
}


intgo _wrap_CThostFtdcDepthMarketDataField_BidVolume5_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_AskPrice5_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->AskPrice5 = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_AskPrice5_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->AskPrice5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_AskVolume5_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->AskVolume5 = arg2;
  
}


intgo _wrap_CThostFtdcDepthMarketDataField_AskVolume5_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_AveragePrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->AveragePrice = arg2;
  
}


double _wrap_CThostFtdcDepthMarketDataField_AveragePrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->AveragePrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepthMarketDataField_ActionDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDay, (const char *)arg2, 9-1);
      arg1->ActionDay[9-1] = 0;
    } else {
      arg1->ActionDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcDepthMarketDataField_ActionDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcDepthMarketDataField *_wrap_new_CThostFtdcDepthMarketDataField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcDepthMarketDataField *result = 0 ;
  CThostFtdcDepthMarketDataField *_swig_go_result;
  
  
  result = (CThostFtdcDepthMarketDataField *)new CThostFtdcDepthMarketDataField();
  *(CThostFtdcDepthMarketDataField **)&_swig_go_result = (CThostFtdcDepthMarketDataField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcDepthMarketDataField_goctp_ef6abdc493ff8ae2(CThostFtdcDepthMarketDataField *_swig_go_0) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  
  arg1 = *(CThostFtdcDepthMarketDataField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInstrumentTradingRightField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentTradingRightField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentTradingRightField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentTradingRightField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentTradingRightField *_swig_go_0) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentTradingRightField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentTradingRightField_InvestorRange_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentTradingRightField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentTradingRightField **)&_swig_go_0; 
  arg2 = (TThostFtdcInvestorRangeType)_swig_go_1; 
  
  if (arg1) (arg1)->InvestorRange = arg2;
  
}


char _wrap_CThostFtdcInstrumentTradingRightField_InvestorRange_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentTradingRightField *_swig_go_0) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  TThostFtdcInvestorRangeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentTradingRightField **)&_swig_go_0; 
  
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentTradingRightField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentTradingRightField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentTradingRightField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentTradingRightField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentTradingRightField *_swig_go_0) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentTradingRightField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentTradingRightField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentTradingRightField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentTradingRightField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentTradingRightField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentTradingRightField *_swig_go_0) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentTradingRightField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentTradingRightField_TradingRight_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentTradingRightField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  TThostFtdcTradingRightType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentTradingRightField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradingRightType)_swig_go_1; 
  
  if (arg1) (arg1)->TradingRight = arg2;
  
}


char _wrap_CThostFtdcInstrumentTradingRightField_TradingRight_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentTradingRightField *_swig_go_0) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  TThostFtdcTradingRightType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentTradingRightField **)&_swig_go_0; 
  
  result = (TThostFtdcTradingRightType) ((arg1)->TradingRight);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcInstrumentTradingRightField *_wrap_new_CThostFtdcInstrumentTradingRightField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInstrumentTradingRightField *result = 0 ;
  CThostFtdcInstrumentTradingRightField *_swig_go_result;
  
  
  result = (CThostFtdcInstrumentTradingRightField *)new CThostFtdcInstrumentTradingRightField();
  *(CThostFtdcInstrumentTradingRightField **)&_swig_go_result = (CThostFtdcInstrumentTradingRightField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInstrumentTradingRightField_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentTradingRightField *_swig_go_0) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  
  arg1 = *(CThostFtdcInstrumentTradingRightField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcBrokerUserField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerUserField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserField *_swig_go_0) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerUserField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserField *_swig_go_0) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserField_UserName_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserName, (const char *)arg2, 81-1);
      arg1->UserName[81-1] = 0;
    } else {
      arg1->UserName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerUserField_UserName_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserField *_swig_go_0) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserField_UserType_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserField *_swig_go_0, char _swig_go_1) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  TThostFtdcUserTypeType arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserField **)&_swig_go_0; 
  arg2 = (TThostFtdcUserTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->UserType = arg2;
  
}


char _wrap_CThostFtdcBrokerUserField_UserType_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserField *_swig_go_0) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  TThostFtdcUserTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserField **)&_swig_go_0; 
  
  result = (TThostFtdcUserTypeType) ((arg1)->UserType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserField_IsActive_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsActive = arg2;
  
}


intgo _wrap_CThostFtdcBrokerUserField_IsActive_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserField *_swig_go_0) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserField_IsUsingOTP_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsUsingOTP = arg2;
  
}


intgo _wrap_CThostFtdcBrokerUserField_IsUsingOTP_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserField *_swig_go_0) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsUsingOTP);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcBrokerUserField *_wrap_new_CThostFtdcBrokerUserField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcBrokerUserField *result = 0 ;
  CThostFtdcBrokerUserField *_swig_go_result;
  
  
  result = (CThostFtdcBrokerUserField *)new CThostFtdcBrokerUserField();
  *(CThostFtdcBrokerUserField **)&_swig_go_result = (CThostFtdcBrokerUserField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcBrokerUserField_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserField *_swig_go_0) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  
  arg1 = *(CThostFtdcBrokerUserField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcBrokerUserPasswordField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserPasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserPasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerUserPasswordField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserPasswordField *_swig_go_0) {
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserPasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserPasswordField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserPasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserPasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerUserPasswordField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserPasswordField *_swig_go_0) {
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserPasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserPasswordField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserPasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserPasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerUserPasswordField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserPasswordField *_swig_go_0) {
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserPasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcBrokerUserPasswordField *_wrap_new_CThostFtdcBrokerUserPasswordField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcBrokerUserPasswordField *result = 0 ;
  CThostFtdcBrokerUserPasswordField *_swig_go_result;
  
  
  result = (CThostFtdcBrokerUserPasswordField *)new CThostFtdcBrokerUserPasswordField();
  *(CThostFtdcBrokerUserPasswordField **)&_swig_go_result = (CThostFtdcBrokerUserPasswordField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcBrokerUserPasswordField_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserPasswordField *_swig_go_0) {
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  
  arg1 = *(CThostFtdcBrokerUserPasswordField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcBrokerUserFunctionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserFunctionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerUserFunctionField *arg1 = (CThostFtdcBrokerUserFunctionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserFunctionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerUserFunctionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserFunctionField *_swig_go_0) {
  CThostFtdcBrokerUserFunctionField *arg1 = (CThostFtdcBrokerUserFunctionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserFunctionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserFunctionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserFunctionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerUserFunctionField *arg1 = (CThostFtdcBrokerUserFunctionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserFunctionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerUserFunctionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserFunctionField *_swig_go_0) {
  CThostFtdcBrokerUserFunctionField *arg1 = (CThostFtdcBrokerUserFunctionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserFunctionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserFunctionField_BrokerFunctionCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserFunctionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcBrokerUserFunctionField *arg1 = (CThostFtdcBrokerUserFunctionField *) 0 ;
  TThostFtdcBrokerFunctionCodeType arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserFunctionField **)&_swig_go_0; 
  arg2 = (TThostFtdcBrokerFunctionCodeType)_swig_go_1; 
  
  if (arg1) (arg1)->BrokerFunctionCode = arg2;
  
}


char _wrap_CThostFtdcBrokerUserFunctionField_BrokerFunctionCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserFunctionField *_swig_go_0) {
  CThostFtdcBrokerUserFunctionField *arg1 = (CThostFtdcBrokerUserFunctionField *) 0 ;
  TThostFtdcBrokerFunctionCodeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserFunctionField **)&_swig_go_0; 
  
  result = (TThostFtdcBrokerFunctionCodeType) ((arg1)->BrokerFunctionCode);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcBrokerUserFunctionField *_wrap_new_CThostFtdcBrokerUserFunctionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcBrokerUserFunctionField *result = 0 ;
  CThostFtdcBrokerUserFunctionField *_swig_go_result;
  
  
  result = (CThostFtdcBrokerUserFunctionField *)new CThostFtdcBrokerUserFunctionField();
  *(CThostFtdcBrokerUserFunctionField **)&_swig_go_result = (CThostFtdcBrokerUserFunctionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcBrokerUserFunctionField_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserFunctionField *_swig_go_0) {
  CThostFtdcBrokerUserFunctionField *arg1 = (CThostFtdcBrokerUserFunctionField *) 0 ;
  
  arg1 = *(CThostFtdcBrokerUserFunctionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTraderOfferField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderOfferField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderOfferField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderOfferField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderOfferField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderOfferField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderOfferField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderOfferField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderOfferField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcTraderOfferField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderOfferField_OrderLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderOfferField_OrderLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderOfferField_TraderConnectStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  TThostFtdcTraderConnectStatusType arg2 ;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  arg2 = (TThostFtdcTraderConnectStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->TraderConnectStatus = arg2;
  
}


char _wrap_CThostFtdcTraderOfferField_TraderConnectStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  TThostFtdcTraderConnectStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  result = (TThostFtdcTraderConnectStatusType) ((arg1)->TraderConnectStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderOfferField_ConnectRequestDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectRequestDate, (const char *)arg2, 9-1);
      arg1->ConnectRequestDate[9-1] = 0;
    } else {
      arg1->ConnectRequestDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderOfferField_ConnectRequestDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ConnectRequestDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderOfferField_ConnectRequestTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectRequestTime, (const char *)arg2, 9-1);
      arg1->ConnectRequestTime[9-1] = 0;
    } else {
      arg1->ConnectRequestTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderOfferField_ConnectRequestTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ConnectRequestTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderOfferField_LastReportDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LastReportDate, (const char *)arg2, 9-1);
      arg1->LastReportDate[9-1] = 0;
    } else {
      arg1->LastReportDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderOfferField_LastReportDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LastReportDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderOfferField_LastReportTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LastReportTime, (const char *)arg2, 9-1);
      arg1->LastReportTime[9-1] = 0;
    } else {
      arg1->LastReportTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderOfferField_LastReportTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LastReportTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderOfferField_ConnectDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectDate, (const char *)arg2, 9-1);
      arg1->ConnectDate[9-1] = 0;
    } else {
      arg1->ConnectDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderOfferField_ConnectDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ConnectDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderOfferField_ConnectTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectTime, (const char *)arg2, 9-1);
      arg1->ConnectTime[9-1] = 0;
    } else {
      arg1->ConnectTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderOfferField_ConnectTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ConnectTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderOfferField_StartDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->StartDate, (const char *)arg2, 9-1);
      arg1->StartDate[9-1] = 0;
    } else {
      arg1->StartDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderOfferField_StartDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->StartDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderOfferField_StartTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->StartTime, (const char *)arg2, 9-1);
      arg1->StartTime[9-1] = 0;
    } else {
      arg1->StartTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderOfferField_StartTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->StartTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderOfferField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderOfferField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderOfferField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderOfferField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderOfferField_MaxTradeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MaxTradeID, (const char *)arg2, 21-1);
      arg1->MaxTradeID[21-1] = 0;
    } else {
      arg1->MaxTradeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderOfferField_MaxTradeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MaxTradeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderOfferField_MaxOrderMessageReference_set_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MaxOrderMessageReference, (const char *)arg2, 7-1);
      arg1->MaxOrderMessageReference[7-1] = 0;
    } else {
      arg1->MaxOrderMessageReference[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTraderOfferField_MaxOrderMessageReference_get_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MaxOrderMessageReference);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcTraderOfferField *_wrap_new_CThostFtdcTraderOfferField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTraderOfferField *result = 0 ;
  CThostFtdcTraderOfferField *_swig_go_result;
  
  
  result = (CThostFtdcTraderOfferField *)new CThostFtdcTraderOfferField();
  *(CThostFtdcTraderOfferField **)&_swig_go_result = (CThostFtdcTraderOfferField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTraderOfferField_goctp_ef6abdc493ff8ae2(CThostFtdcTraderOfferField *_swig_go_0) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  
  arg1 = *(CThostFtdcTraderOfferField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcSettlementInfoField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSettlementInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSettlementInfoField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoField *_swig_go_0) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSettlementInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSettlementInfoField_SettlementID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = *(CThostFtdcSettlementInfoField **)&_swig_go_0; 
  arg2 = (TThostFtdcSettlementIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementID = arg2;
  
}


intgo _wrap_CThostFtdcSettlementInfoField_SettlementID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoField *_swig_go_0) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  TThostFtdcSettlementIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSettlementInfoField **)&_swig_go_0; 
  
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSettlementInfoField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSettlementInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSettlementInfoField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoField *_swig_go_0) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSettlementInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSettlementInfoField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSettlementInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSettlementInfoField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoField *_swig_go_0) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSettlementInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSettlementInfoField_SequenceNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcSettlementInfoField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->SequenceNo = arg2;
  
}


intgo _wrap_CThostFtdcSettlementInfoField_SequenceNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoField *_swig_go_0) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSettlementInfoField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSettlementInfoField_Content_set_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSettlementInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Content, (const char *)arg2, 501-1);
      arg1->Content[501-1] = 0;
    } else {
      arg1->Content[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSettlementInfoField_Content_get_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoField *_swig_go_0) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSettlementInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Content);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcSettlementInfoField *_wrap_new_CThostFtdcSettlementInfoField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcSettlementInfoField *result = 0 ;
  CThostFtdcSettlementInfoField *_swig_go_result;
  
  
  result = (CThostFtdcSettlementInfoField *)new CThostFtdcSettlementInfoField();
  *(CThostFtdcSettlementInfoField **)&_swig_go_result = (CThostFtdcSettlementInfoField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcSettlementInfoField_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoField *_swig_go_0) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  
  arg1 = *(CThostFtdcSettlementInfoField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInstrumentMarginRateAdjustField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateAdjustField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentMarginRateAdjustField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateAdjustField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentMarginRateAdjustField_InvestorRange_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateAdjustField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcInvestorRangeType)_swig_go_1; 
  
  if (arg1) (arg1)->InvestorRange = arg2;
  
}


char _wrap_CThostFtdcInstrumentMarginRateAdjustField_InvestorRange_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateAdjustField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcInvestorRangeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentMarginRateAdjustField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateAdjustField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentMarginRateAdjustField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateAdjustField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentMarginRateAdjustField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateAdjustField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentMarginRateAdjustField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateAdjustField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentMarginRateAdjustField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateAdjustField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcInstrumentMarginRateAdjustField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateAdjustField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->LongMarginRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateAdjustField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->LongMarginRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->LongMarginRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateAdjustField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->LongMarginRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->ShortMarginRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateAdjustField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->ShortMarginRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ShortMarginRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateAdjustField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ShortMarginRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentMarginRateAdjustField_IsRelative_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateAdjustField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsRelative = arg2;
  
}


intgo _wrap_CThostFtdcInstrumentMarginRateAdjustField_IsRelative_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateAdjustField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsRelative);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcInstrumentMarginRateAdjustField *_wrap_new_CThostFtdcInstrumentMarginRateAdjustField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInstrumentMarginRateAdjustField *result = 0 ;
  CThostFtdcInstrumentMarginRateAdjustField *_swig_go_result;
  
  
  result = (CThostFtdcInstrumentMarginRateAdjustField *)new CThostFtdcInstrumentMarginRateAdjustField();
  *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_result = (CThostFtdcInstrumentMarginRateAdjustField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInstrumentMarginRateAdjustField_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentMarginRateAdjustField *_swig_go_0) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  
  arg1 = *(CThostFtdcInstrumentMarginRateAdjustField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcExchangeMarginRateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeMarginRateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateField *_swig_go_0) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeMarginRateField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeMarginRateField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateField *_swig_go_0) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeMarginRateField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcExchangeMarginRateField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateField *_swig_go_0) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeMarginRateField_LongMarginRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->LongMarginRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcExchangeMarginRateField_LongMarginRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateField *_swig_go_0) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->LongMarginRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeMarginRateField_LongMarginRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->LongMarginRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcExchangeMarginRateField_LongMarginRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateField *_swig_go_0) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->LongMarginRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeMarginRateField_ShortMarginRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->ShortMarginRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcExchangeMarginRateField_ShortMarginRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateField *_swig_go_0) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->ShortMarginRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeMarginRateField_ShortMarginRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ShortMarginRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcExchangeMarginRateField_ShortMarginRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateField *_swig_go_0) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ShortMarginRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcExchangeMarginRateField *_wrap_new_CThostFtdcExchangeMarginRateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcExchangeMarginRateField *result = 0 ;
  CThostFtdcExchangeMarginRateField *_swig_go_result;
  
  
  result = (CThostFtdcExchangeMarginRateField *)new CThostFtdcExchangeMarginRateField();
  *(CThostFtdcExchangeMarginRateField **)&_swig_go_result = (CThostFtdcExchangeMarginRateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcExchangeMarginRateField_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateField *_swig_go_0) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcExchangeMarginRateAdjustField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeMarginRateAdjustField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeMarginRateAdjustField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeMarginRateAdjustField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeMarginRateAdjustField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcExchangeMarginRateAdjustField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->LongMarginRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->LongMarginRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->LongMarginRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->LongMarginRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->ShortMarginRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->ShortMarginRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ShortMarginRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ShortMarginRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->ExchLongMarginRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->ExchLongMarginRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ExchLongMarginRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ExchLongMarginRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->ExchShortMarginRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->ExchShortMarginRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ExchShortMarginRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ExchShortMarginRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->NoLongMarginRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->NoLongMarginRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->NoLongMarginRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->NoLongMarginRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->NoShortMarginRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->NoShortMarginRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->NoShortMarginRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->NoShortMarginRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcExchangeMarginRateAdjustField *_wrap_new_CThostFtdcExchangeMarginRateAdjustField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcExchangeMarginRateAdjustField *result = 0 ;
  CThostFtdcExchangeMarginRateAdjustField *_swig_go_result;
  
  
  result = (CThostFtdcExchangeMarginRateAdjustField *)new CThostFtdcExchangeMarginRateAdjustField();
  *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_result = (CThostFtdcExchangeMarginRateAdjustField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcExchangeMarginRateAdjustField_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeMarginRateAdjustField *_swig_go_0) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  
  arg1 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcExchangeRateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeRateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeRateField *_swig_go_0) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeRateField_FromCurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FromCurrencyID, (const char *)arg2, 4-1);
      arg1->FromCurrencyID[4-1] = 0;
    } else {
      arg1->FromCurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeRateField_FromCurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeRateField *_swig_go_0) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->FromCurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeRateField_FromCurrencyUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  TThostFtdcCurrencyUnitType arg2 ;
  
  arg1 = *(CThostFtdcExchangeRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcCurrencyUnitType)_swig_go_1; 
  
  if (arg1) (arg1)->FromCurrencyUnit = arg2;
  
}


double _wrap_CThostFtdcExchangeRateField_FromCurrencyUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeRateField *_swig_go_0) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  TThostFtdcCurrencyUnitType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeRateField **)&_swig_go_0; 
  
  result = (TThostFtdcCurrencyUnitType) ((arg1)->FromCurrencyUnit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeRateField_ToCurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ToCurrencyID, (const char *)arg2, 4-1);
      arg1->ToCurrencyID[4-1] = 0;
    } else {
      arg1->ToCurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeRateField_ToCurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeRateField *_swig_go_0) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ToCurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeRateField_ExchangeRate_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  TThostFtdcExchangeRateType arg2 ;
  
  arg1 = *(CThostFtdcExchangeRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcExchangeRateType)_swig_go_1; 
  
  if (arg1) (arg1)->ExchangeRate = arg2;
  
}


double _wrap_CThostFtdcExchangeRateField_ExchangeRate_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeRateField *_swig_go_0) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  TThostFtdcExchangeRateType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeRateField **)&_swig_go_0; 
  
  result = (TThostFtdcExchangeRateType) ((arg1)->ExchangeRate);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcExchangeRateField *_wrap_new_CThostFtdcExchangeRateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcExchangeRateField *result = 0 ;
  CThostFtdcExchangeRateField *_swig_go_result;
  
  
  result = (CThostFtdcExchangeRateField *)new CThostFtdcExchangeRateField();
  *(CThostFtdcExchangeRateField **)&_swig_go_result = (CThostFtdcExchangeRateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcExchangeRateField_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeRateField *_swig_go_0) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  
  arg1 = *(CThostFtdcExchangeRateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcSettlementRefField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementRefField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSettlementRefField *arg1 = (CThostFtdcSettlementRefField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSettlementRefField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSettlementRefField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementRefField *_swig_go_0) {
  CThostFtdcSettlementRefField *arg1 = (CThostFtdcSettlementRefField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSettlementRefField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSettlementRefField_SettlementID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementRefField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSettlementRefField *arg1 = (CThostFtdcSettlementRefField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = *(CThostFtdcSettlementRefField **)&_swig_go_0; 
  arg2 = (TThostFtdcSettlementIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementID = arg2;
  
}


intgo _wrap_CThostFtdcSettlementRefField_SettlementID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementRefField *_swig_go_0) {
  CThostFtdcSettlementRefField *arg1 = (CThostFtdcSettlementRefField *) 0 ;
  TThostFtdcSettlementIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSettlementRefField **)&_swig_go_0; 
  
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcSettlementRefField *_wrap_new_CThostFtdcSettlementRefField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcSettlementRefField *result = 0 ;
  CThostFtdcSettlementRefField *_swig_go_result;
  
  
  result = (CThostFtdcSettlementRefField *)new CThostFtdcSettlementRefField();
  *(CThostFtdcSettlementRefField **)&_swig_go_result = (CThostFtdcSettlementRefField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcSettlementRefField_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementRefField *_swig_go_0) {
  CThostFtdcSettlementRefField *arg1 = (CThostFtdcSettlementRefField *) 0 ;
  
  arg1 = *(CThostFtdcSettlementRefField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcCurrentTimeField_CurrDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcCurrentTimeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCurrentTimeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrDate, (const char *)arg2, 9-1);
      arg1->CurrDate[9-1] = 0;
    } else {
      arg1->CurrDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCurrentTimeField_CurrDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcCurrentTimeField *_swig_go_0) {
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCurrentTimeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCurrentTimeField_CurrTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcCurrentTimeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCurrentTimeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrTime, (const char *)arg2, 9-1);
      arg1->CurrTime[9-1] = 0;
    } else {
      arg1->CurrTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCurrentTimeField_CurrTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcCurrentTimeField *_swig_go_0) {
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCurrentTimeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCurrentTimeField_CurrMillisec_set_goctp_ef6abdc493ff8ae2(CThostFtdcCurrentTimeField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  TThostFtdcMillisecType arg2 ;
  
  arg1 = *(CThostFtdcCurrentTimeField **)&_swig_go_0; 
  arg2 = (TThostFtdcMillisecType)_swig_go_1; 
  
  if (arg1) (arg1)->CurrMillisec = arg2;
  
}


intgo _wrap_CThostFtdcCurrentTimeField_CurrMillisec_get_goctp_ef6abdc493ff8ae2(CThostFtdcCurrentTimeField *_swig_go_0) {
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  TThostFtdcMillisecType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcCurrentTimeField **)&_swig_go_0; 
  
  result = (TThostFtdcMillisecType) ((arg1)->CurrMillisec);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCurrentTimeField_ActionDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcCurrentTimeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCurrentTimeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDay, (const char *)arg2, 9-1);
      arg1->ActionDay[9-1] = 0;
    } else {
      arg1->ActionDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCurrentTimeField_ActionDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcCurrentTimeField *_swig_go_0) {
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCurrentTimeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcCurrentTimeField *_wrap_new_CThostFtdcCurrentTimeField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcCurrentTimeField *result = 0 ;
  CThostFtdcCurrentTimeField *_swig_go_result;
  
  
  result = (CThostFtdcCurrentTimeField *)new CThostFtdcCurrentTimeField();
  *(CThostFtdcCurrentTimeField **)&_swig_go_result = (CThostFtdcCurrentTimeField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcCurrentTimeField_goctp_ef6abdc493ff8ae2(CThostFtdcCurrentTimeField *_swig_go_0) {
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  
  arg1 = *(CThostFtdcCurrentTimeField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcCommPhaseField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcCommPhaseField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCommPhaseField *arg1 = (CThostFtdcCommPhaseField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCommPhaseField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCommPhaseField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcCommPhaseField *_swig_go_0) {
  CThostFtdcCommPhaseField *arg1 = (CThostFtdcCommPhaseField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCommPhaseField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCommPhaseField_CommPhaseNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcCommPhaseField *_swig_go_0, short _swig_go_1) {
  CThostFtdcCommPhaseField *arg1 = (CThostFtdcCommPhaseField *) 0 ;
  TThostFtdcCommPhaseNoType arg2 ;
  
  arg1 = *(CThostFtdcCommPhaseField **)&_swig_go_0; 
  arg2 = (TThostFtdcCommPhaseNoType)_swig_go_1; 
  
  if (arg1) (arg1)->CommPhaseNo = arg2;
  
}


short _wrap_CThostFtdcCommPhaseField_CommPhaseNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcCommPhaseField *_swig_go_0) {
  CThostFtdcCommPhaseField *arg1 = (CThostFtdcCommPhaseField *) 0 ;
  TThostFtdcCommPhaseNoType result;
  short _swig_go_result;
  
  arg1 = *(CThostFtdcCommPhaseField **)&_swig_go_0; 
  
  result = (TThostFtdcCommPhaseNoType) ((arg1)->CommPhaseNo);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCommPhaseField_SystemID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCommPhaseField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCommPhaseField *arg1 = (CThostFtdcCommPhaseField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCommPhaseField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SystemID, (const char *)arg2, 21-1);
      arg1->SystemID[21-1] = 0;
    } else {
      arg1->SystemID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCommPhaseField_SystemID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCommPhaseField *_swig_go_0) {
  CThostFtdcCommPhaseField *arg1 = (CThostFtdcCommPhaseField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCommPhaseField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->SystemID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcCommPhaseField *_wrap_new_CThostFtdcCommPhaseField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcCommPhaseField *result = 0 ;
  CThostFtdcCommPhaseField *_swig_go_result;
  
  
  result = (CThostFtdcCommPhaseField *)new CThostFtdcCommPhaseField();
  *(CThostFtdcCommPhaseField **)&_swig_go_result = (CThostFtdcCommPhaseField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcCommPhaseField_goctp_ef6abdc493ff8ae2(CThostFtdcCommPhaseField *_swig_go_0) {
  CThostFtdcCommPhaseField *arg1 = (CThostFtdcCommPhaseField *) 0 ;
  
  arg1 = *(CThostFtdcCommPhaseField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcLoginInfoField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcLoginInfoField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginInfoField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcLoginInfoField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginInfoField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginInfoField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginInfoField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginInfoField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginInfoField_LoginDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LoginDate, (const char *)arg2, 9-1);
      arg1->LoginDate[9-1] = 0;
    } else {
      arg1->LoginDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginInfoField_LoginDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LoginDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginInfoField_LoginTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LoginTime, (const char *)arg2, 9-1);
      arg1->LoginTime[9-1] = 0;
    } else {
      arg1->LoginTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginInfoField_LoginTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LoginTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginInfoField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginInfoField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginInfoField_UserProductInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginInfoField_UserProductInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserProductInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginInfoField_InterfaceProductInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InterfaceProductInfo, (const char *)arg2, 11-1);
      arg1->InterfaceProductInfo[11-1] = 0;
    } else {
      arg1->InterfaceProductInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginInfoField_InterfaceProductInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InterfaceProductInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginInfoField_ProtocolInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ProtocolInfo, (const char *)arg2, 11-1);
      arg1->ProtocolInfo[11-1] = 0;
    } else {
      arg1->ProtocolInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginInfoField_ProtocolInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ProtocolInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginInfoField_SystemName_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SystemName, (const char *)arg2, 41-1);
      arg1->SystemName[41-1] = 0;
    } else {
      arg1->SystemName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginInfoField_SystemName_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->SystemName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginInfoField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginInfoField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginInfoField_MaxOrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MaxOrderRef, (const char *)arg2, 13-1);
      arg1->MaxOrderRef[13-1] = 0;
    } else {
      arg1->MaxOrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginInfoField_MaxOrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MaxOrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginInfoField_SHFETime_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SHFETime, (const char *)arg2, 9-1);
      arg1->SHFETime[9-1] = 0;
    } else {
      arg1->SHFETime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginInfoField_SHFETime_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->SHFETime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginInfoField_DCETime_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DCETime, (const char *)arg2, 9-1);
      arg1->DCETime[9-1] = 0;
    } else {
      arg1->DCETime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginInfoField_DCETime_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DCETime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginInfoField_CZCETime_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CZCETime, (const char *)arg2, 9-1);
      arg1->CZCETime[9-1] = 0;
    } else {
      arg1->CZCETime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginInfoField_CZCETime_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CZCETime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginInfoField_FFEXTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FFEXTime, (const char *)arg2, 9-1);
      arg1->FFEXTime[9-1] = 0;
    } else {
      arg1->FFEXTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginInfoField_FFEXTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->FFEXTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginInfoField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginInfoField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginInfoField_OneTimePassword_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OneTimePassword, (const char *)arg2, 41-1);
      arg1->OneTimePassword[41-1] = 0;
    } else {
      arg1->OneTimePassword[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginInfoField_OneTimePassword_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OneTimePassword);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginInfoField_INETime_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->INETime, (const char *)arg2, 9-1);
      arg1->INETime[9-1] = 0;
    } else {
      arg1->INETime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginInfoField_INETime_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->INETime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginInfoField_IsQryControl_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsQryControl = arg2;
  
}


intgo _wrap_CThostFtdcLoginInfoField_IsQryControl_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsQryControl);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginInfoField_LoginRemark_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LoginRemark, (const char *)arg2, 36-1);
      arg1->LoginRemark[36-1] = 0;
    } else {
      arg1->LoginRemark[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginInfoField_LoginRemark_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LoginRemark);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcLoginInfoField *_wrap_new_CThostFtdcLoginInfoField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcLoginInfoField *result = 0 ;
  CThostFtdcLoginInfoField *_swig_go_result;
  
  
  result = (CThostFtdcLoginInfoField *)new CThostFtdcLoginInfoField();
  *(CThostFtdcLoginInfoField **)&_swig_go_result = (CThostFtdcLoginInfoField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcLoginInfoField_goctp_ef6abdc493ff8ae2(CThostFtdcLoginInfoField *_swig_go_0) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  
  arg1 = *(CThostFtdcLoginInfoField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcLogoutAllField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcLogoutAllField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcLogoutAllField *arg1 = (CThostFtdcLogoutAllField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcLogoutAllField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcLogoutAllField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcLogoutAllField *_swig_go_0) {
  CThostFtdcLogoutAllField *arg1 = (CThostFtdcLogoutAllField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcLogoutAllField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcLogoutAllField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcLogoutAllField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcLogoutAllField *arg1 = (CThostFtdcLogoutAllField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcLogoutAllField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcLogoutAllField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcLogoutAllField *_swig_go_0) {
  CThostFtdcLogoutAllField *arg1 = (CThostFtdcLogoutAllField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcLogoutAllField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcLogoutAllField_SystemName_set_goctp_ef6abdc493ff8ae2(CThostFtdcLogoutAllField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLogoutAllField *arg1 = (CThostFtdcLogoutAllField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLogoutAllField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SystemName, (const char *)arg2, 41-1);
      arg1->SystemName[41-1] = 0;
    } else {
      arg1->SystemName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLogoutAllField_SystemName_get_goctp_ef6abdc493ff8ae2(CThostFtdcLogoutAllField *_swig_go_0) {
  CThostFtdcLogoutAllField *arg1 = (CThostFtdcLogoutAllField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLogoutAllField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->SystemName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcLogoutAllField *_wrap_new_CThostFtdcLogoutAllField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcLogoutAllField *result = 0 ;
  CThostFtdcLogoutAllField *_swig_go_result;
  
  
  result = (CThostFtdcLogoutAllField *)new CThostFtdcLogoutAllField();
  *(CThostFtdcLogoutAllField **)&_swig_go_result = (CThostFtdcLogoutAllField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcLogoutAllField_goctp_ef6abdc493ff8ae2(CThostFtdcLogoutAllField *_swig_go_0) {
  CThostFtdcLogoutAllField *arg1 = (CThostFtdcLogoutAllField *) 0 ;
  
  arg1 = *(CThostFtdcLogoutAllField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcFrontStatusField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcFrontStatusField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcFrontStatusField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcFrontStatusField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcFrontStatusField *_swig_go_0) {
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcFrontStatusField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcFrontStatusField_LastReportDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcFrontStatusField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcFrontStatusField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LastReportDate, (const char *)arg2, 9-1);
      arg1->LastReportDate[9-1] = 0;
    } else {
      arg1->LastReportDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcFrontStatusField_LastReportDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcFrontStatusField *_swig_go_0) {
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcFrontStatusField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LastReportDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcFrontStatusField_LastReportTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcFrontStatusField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcFrontStatusField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LastReportTime, (const char *)arg2, 9-1);
      arg1->LastReportTime[9-1] = 0;
    } else {
      arg1->LastReportTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcFrontStatusField_LastReportTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcFrontStatusField *_swig_go_0) {
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcFrontStatusField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LastReportTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcFrontStatusField_IsActive_set_goctp_ef6abdc493ff8ae2(CThostFtdcFrontStatusField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcFrontStatusField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsActive = arg2;
  
}


intgo _wrap_CThostFtdcFrontStatusField_IsActive_get_goctp_ef6abdc493ff8ae2(CThostFtdcFrontStatusField *_swig_go_0) {
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcFrontStatusField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcFrontStatusField *_wrap_new_CThostFtdcFrontStatusField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcFrontStatusField *result = 0 ;
  CThostFtdcFrontStatusField *_swig_go_result;
  
  
  result = (CThostFtdcFrontStatusField *)new CThostFtdcFrontStatusField();
  *(CThostFtdcFrontStatusField **)&_swig_go_result = (CThostFtdcFrontStatusField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcFrontStatusField_goctp_ef6abdc493ff8ae2(CThostFtdcFrontStatusField *_swig_go_0) {
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  
  arg1 = *(CThostFtdcFrontStatusField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcUserPasswordUpdateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserPasswordUpdateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserPasswordUpdateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserPasswordUpdateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserPasswordUpdateField *_swig_go_0) {
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserPasswordUpdateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserPasswordUpdateField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserPasswordUpdateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserPasswordUpdateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserPasswordUpdateField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserPasswordUpdateField *_swig_go_0) {
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserPasswordUpdateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserPasswordUpdateField_OldPassword_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserPasswordUpdateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserPasswordUpdateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OldPassword, (const char *)arg2, 41-1);
      arg1->OldPassword[41-1] = 0;
    } else {
      arg1->OldPassword[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserPasswordUpdateField_OldPassword_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserPasswordUpdateField *_swig_go_0) {
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserPasswordUpdateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OldPassword);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserPasswordUpdateField_NewPassword_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserPasswordUpdateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserPasswordUpdateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->NewPassword, (const char *)arg2, 41-1);
      arg1->NewPassword[41-1] = 0;
    } else {
      arg1->NewPassword[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserPasswordUpdateField_NewPassword_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserPasswordUpdateField *_swig_go_0) {
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserPasswordUpdateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->NewPassword);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcUserPasswordUpdateField *_wrap_new_CThostFtdcUserPasswordUpdateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcUserPasswordUpdateField *result = 0 ;
  CThostFtdcUserPasswordUpdateField *_swig_go_result;
  
  
  result = (CThostFtdcUserPasswordUpdateField *)new CThostFtdcUserPasswordUpdateField();
  *(CThostFtdcUserPasswordUpdateField **)&_swig_go_result = (CThostFtdcUserPasswordUpdateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcUserPasswordUpdateField_goctp_ef6abdc493ff8ae2(CThostFtdcUserPasswordUpdateField *_swig_go_0) {
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  
  arg1 = *(CThostFtdcUserPasswordUpdateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInputOrderField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_OrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderField_OrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_OrderPriceType_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderPriceTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderPriceType = arg2;
  
}


char _wrap_CThostFtdcInputOrderField_OrderPriceType_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderPriceTypeType) ((arg1)->OrderPriceType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_Direction_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->Direction = arg2;
  
}


char _wrap_CThostFtdcInputOrderField_Direction_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_CombOffsetFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CombOffsetFlag, (const char *)arg2, 5-1);
      arg1->CombOffsetFlag[5-1] = 0;
    } else {
      arg1->CombOffsetFlag[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderField_CombOffsetFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CombOffsetFlag);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_CombHedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CombHedgeFlag, (const char *)arg2, 5-1);
      arg1->CombHedgeFlag[5-1] = 0;
    } else {
      arg1->CombHedgeFlag[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderField_CombHedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CombHedgeFlag);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_LimitPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LimitPrice = arg2;
  
}


double _wrap_CThostFtdcInputOrderField_LimitPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_VolumeTotalOriginal_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeTotalOriginal = arg2;
  
}


intgo _wrap_CThostFtdcInputOrderField_VolumeTotalOriginal_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotalOriginal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_TimeCondition_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcTimeConditionType arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcTimeConditionType)_swig_go_1; 
  
  if (arg1) (arg1)->TimeCondition = arg2;
  
}


char _wrap_CThostFtdcInputOrderField_TimeCondition_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcTimeConditionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcTimeConditionType) ((arg1)->TimeCondition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_GTDDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->GTDDate, (const char *)arg2, 9-1);
      arg1->GTDDate[9-1] = 0;
    } else {
      arg1->GTDDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderField_GTDDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->GTDDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_VolumeCondition_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcVolumeConditionType arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeConditionType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeCondition = arg2;
  
}


char _wrap_CThostFtdcInputOrderField_VolumeCondition_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcVolumeConditionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeConditionType) ((arg1)->VolumeCondition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_MinVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->MinVolume = arg2;
  
}


intgo _wrap_CThostFtdcInputOrderField_MinVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->MinVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_ContingentCondition_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcContingentConditionType arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcContingentConditionType)_swig_go_1; 
  
  if (arg1) (arg1)->ContingentCondition = arg2;
  
}


char _wrap_CThostFtdcInputOrderField_ContingentCondition_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcContingentConditionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcContingentConditionType) ((arg1)->ContingentCondition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_StopPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->StopPrice = arg2;
  
}


double _wrap_CThostFtdcInputOrderField_StopPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->StopPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_ForceCloseReason_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcForceCloseReasonType arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcForceCloseReasonType)_swig_go_1; 
  
  if (arg1) (arg1)->ForceCloseReason = arg2;
  
}


char _wrap_CThostFtdcInputOrderField_ForceCloseReason_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcForceCloseReasonType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcForceCloseReasonType) ((arg1)->ForceCloseReason);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_IsAutoSuspend_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsAutoSuspend = arg2;
  
}


intgo _wrap_CThostFtdcInputOrderField_IsAutoSuspend_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsAutoSuspend);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcInputOrderField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_UserForceClose_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->UserForceClose = arg2;
  
}


intgo _wrap_CThostFtdcInputOrderField_UserForceClose_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->UserForceClose);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_IsSwapOrder_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsSwapOrder = arg2;
  
}


intgo _wrap_CThostFtdcInputOrderField_IsSwapOrder_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsSwapOrder);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcInputOrderField *_wrap_new_CThostFtdcInputOrderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInputOrderField *result = 0 ;
  CThostFtdcInputOrderField *_swig_go_result;
  
  
  result = (CThostFtdcInputOrderField *)new CThostFtdcInputOrderField();
  *(CThostFtdcInputOrderField **)&_swig_go_result = (CThostFtdcInputOrderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInputOrderField_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderField *_swig_go_0) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  
  arg1 = *(CThostFtdcInputOrderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcOrderField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_OrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_OrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_OrderPriceType_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderPriceTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderPriceType = arg2;
  
}


char _wrap_CThostFtdcOrderField_OrderPriceType_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderPriceTypeType) ((arg1)->OrderPriceType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_Direction_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->Direction = arg2;
  
}


char _wrap_CThostFtdcOrderField_Direction_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_CombOffsetFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CombOffsetFlag, (const char *)arg2, 5-1);
      arg1->CombOffsetFlag[5-1] = 0;
    } else {
      arg1->CombOffsetFlag[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_CombOffsetFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CombOffsetFlag);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_CombHedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CombHedgeFlag, (const char *)arg2, 5-1);
      arg1->CombHedgeFlag[5-1] = 0;
    } else {
      arg1->CombHedgeFlag[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_CombHedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CombHedgeFlag);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_LimitPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LimitPrice = arg2;
  
}


double _wrap_CThostFtdcOrderField_LimitPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_VolumeTotalOriginal_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeTotalOriginal = arg2;
  
}


intgo _wrap_CThostFtdcOrderField_VolumeTotalOriginal_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotalOriginal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_TimeCondition_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcTimeConditionType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcTimeConditionType)_swig_go_1; 
  
  if (arg1) (arg1)->TimeCondition = arg2;
  
}


char _wrap_CThostFtdcOrderField_TimeCondition_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcTimeConditionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcTimeConditionType) ((arg1)->TimeCondition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_GTDDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->GTDDate, (const char *)arg2, 9-1);
      arg1->GTDDate[9-1] = 0;
    } else {
      arg1->GTDDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_GTDDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->GTDDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_VolumeCondition_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeConditionType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeConditionType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeCondition = arg2;
  
}


char _wrap_CThostFtdcOrderField_VolumeCondition_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeConditionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeConditionType) ((arg1)->VolumeCondition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_MinVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->MinVolume = arg2;
  
}


intgo _wrap_CThostFtdcOrderField_MinVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->MinVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_ContingentCondition_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcContingentConditionType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcContingentConditionType)_swig_go_1; 
  
  if (arg1) (arg1)->ContingentCondition = arg2;
  
}


char _wrap_CThostFtdcOrderField_ContingentCondition_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcContingentConditionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcContingentConditionType) ((arg1)->ContingentCondition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_StopPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->StopPrice = arg2;
  
}


double _wrap_CThostFtdcOrderField_StopPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->StopPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_ForceCloseReason_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcForceCloseReasonType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcForceCloseReasonType)_swig_go_1; 
  
  if (arg1) (arg1)->ForceCloseReason = arg2;
  
}


char _wrap_CThostFtdcOrderField_ForceCloseReason_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcForceCloseReasonType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcForceCloseReasonType) ((arg1)->ForceCloseReason);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_IsAutoSuspend_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsAutoSuspend = arg2;
  
}


intgo _wrap_CThostFtdcOrderField_IsAutoSuspend_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsAutoSuspend);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcOrderField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_OrderLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_OrderLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcOrderField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_OrderSubmitStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderSubmitStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
  
}


char _wrap_CThostFtdcOrderField_OrderSubmitStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_NotifySequence_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->NotifySequence = arg2;
  
}


intgo _wrap_CThostFtdcOrderField_NotifySequence_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_SettlementID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSettlementIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementID = arg2;
  
}


intgo _wrap_CThostFtdcOrderField_SettlementID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSettlementIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_OrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_OrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_OrderSource_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderSourceType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderSourceType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderSource = arg2;
  
}


char _wrap_CThostFtdcOrderField_OrderSource_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderSourceType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderSourceType) ((arg1)->OrderSource);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_OrderStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderStatusType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderStatus = arg2;
  
}


char _wrap_CThostFtdcOrderField_OrderStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderStatusType) ((arg1)->OrderStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_OrderType_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderTypeType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderType = arg2;
  
}


char _wrap_CThostFtdcOrderField_OrderType_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderTypeType) ((arg1)->OrderType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_VolumeTraded_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeTraded = arg2;
  
}


intgo _wrap_CThostFtdcOrderField_VolumeTraded_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTraded);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_VolumeTotal_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeTotal = arg2;
  
}


intgo _wrap_CThostFtdcOrderField_VolumeTotal_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_InsertDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_InsertDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_InsertTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_InsertTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_ActiveTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveTime, (const char *)arg2, 9-1);
      arg1->ActiveTime[9-1] = 0;
    } else {
      arg1->ActiveTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_ActiveTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActiveTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_SuspendTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SuspendTime, (const char *)arg2, 9-1);
      arg1->SuspendTime[9-1] = 0;
    } else {
      arg1->SuspendTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_SuspendTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->SuspendTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_UpdateTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UpdateTime, (const char *)arg2, 9-1);
      arg1->UpdateTime[9-1] = 0;
    } else {
      arg1->UpdateTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_UpdateTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UpdateTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_CancelTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_CancelTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CancelTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_ActiveTraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveTraderID, (const char *)arg2, 21-1);
      arg1->ActiveTraderID[21-1] = 0;
    } else {
      arg1->ActiveTraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_ActiveTraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActiveTraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_ClearingPartID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_ClearingPartID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClearingPartID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_SequenceNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->SequenceNo = arg2;
  
}


intgo _wrap_CThostFtdcOrderField_SequenceNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcOrderField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcOrderField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_UserProductInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_UserProductInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserProductInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_StatusMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_StatusMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->StatusMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_UserForceClose_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->UserForceClose = arg2;
  
}


intgo _wrap_CThostFtdcOrderField_UserForceClose_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->UserForceClose);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_ActiveUserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveUserID, (const char *)arg2, 16-1);
      arg1->ActiveUserID[16-1] = 0;
    } else {
      arg1->ActiveUserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_ActiveUserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActiveUserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_BrokerOrderSeq_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->BrokerOrderSeq = arg2;
  
}


intgo _wrap_CThostFtdcOrderField_BrokerOrderSeq_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->BrokerOrderSeq);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_RelativeOrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->RelativeOrderSysID, (const char *)arg2, 21-1);
      arg1->RelativeOrderSysID[21-1] = 0;
    } else {
      arg1->RelativeOrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_RelativeOrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->RelativeOrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_ZCETotalTradedVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->ZCETotalTradedVolume = arg2;
  
}


intgo _wrap_CThostFtdcOrderField_ZCETotalTradedVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->ZCETotalTradedVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_IsSwapOrder_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsSwapOrder = arg2;
  
}


intgo _wrap_CThostFtdcOrderField_IsSwapOrder_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsSwapOrder);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_BranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_BranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcOrderField *_wrap_new_CThostFtdcOrderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcOrderField *result = 0 ;
  CThostFtdcOrderField *_swig_go_result;
  
  
  result = (CThostFtdcOrderField *)new CThostFtdcOrderField();
  *(CThostFtdcOrderField **)&_swig_go_result = (CThostFtdcOrderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcOrderField_goctp_ef6abdc493ff8ae2(CThostFtdcOrderField *_swig_go_0) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  
  arg1 = *(CThostFtdcOrderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcExchangeOrderField_OrderPriceType_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderPriceTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderPriceType = arg2;
  
}


char _wrap_CThostFtdcExchangeOrderField_OrderPriceType_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderPriceTypeType) ((arg1)->OrderPriceType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_Direction_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->Direction = arg2;
  
}


char _wrap_CThostFtdcExchangeOrderField_Direction_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_CombOffsetFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CombOffsetFlag, (const char *)arg2, 5-1);
      arg1->CombOffsetFlag[5-1] = 0;
    } else {
      arg1->CombOffsetFlag[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_CombOffsetFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CombOffsetFlag);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_CombHedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CombHedgeFlag, (const char *)arg2, 5-1);
      arg1->CombHedgeFlag[5-1] = 0;
    } else {
      arg1->CombHedgeFlag[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_CombHedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CombHedgeFlag);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_LimitPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LimitPrice = arg2;
  
}


double _wrap_CThostFtdcExchangeOrderField_LimitPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_VolumeTotalOriginal_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeTotalOriginal = arg2;
  
}


intgo _wrap_CThostFtdcExchangeOrderField_VolumeTotalOriginal_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotalOriginal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_TimeCondition_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcTimeConditionType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcTimeConditionType)_swig_go_1; 
  
  if (arg1) (arg1)->TimeCondition = arg2;
  
}


char _wrap_CThostFtdcExchangeOrderField_TimeCondition_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcTimeConditionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcTimeConditionType) ((arg1)->TimeCondition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_GTDDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->GTDDate, (const char *)arg2, 9-1);
      arg1->GTDDate[9-1] = 0;
    } else {
      arg1->GTDDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_GTDDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->GTDDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_VolumeCondition_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeConditionType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeConditionType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeCondition = arg2;
  
}


char _wrap_CThostFtdcExchangeOrderField_VolumeCondition_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeConditionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeConditionType) ((arg1)->VolumeCondition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_MinVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->MinVolume = arg2;
  
}


intgo _wrap_CThostFtdcExchangeOrderField_MinVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->MinVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_ContingentCondition_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcContingentConditionType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcContingentConditionType)_swig_go_1; 
  
  if (arg1) (arg1)->ContingentCondition = arg2;
  
}


char _wrap_CThostFtdcExchangeOrderField_ContingentCondition_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcContingentConditionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcContingentConditionType) ((arg1)->ContingentCondition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_StopPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->StopPrice = arg2;
  
}


double _wrap_CThostFtdcExchangeOrderField_StopPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->StopPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_ForceCloseReason_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcForceCloseReasonType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcForceCloseReasonType)_swig_go_1; 
  
  if (arg1) (arg1)->ForceCloseReason = arg2;
  
}


char _wrap_CThostFtdcExchangeOrderField_ForceCloseReason_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcForceCloseReasonType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcForceCloseReasonType) ((arg1)->ForceCloseReason);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_IsAutoSuspend_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsAutoSuspend = arg2;
  
}


intgo _wrap_CThostFtdcExchangeOrderField_IsAutoSuspend_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsAutoSuspend);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcExchangeOrderField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_OrderLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_OrderLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcExchangeOrderField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_OrderSubmitStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderSubmitStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
  
}


char _wrap_CThostFtdcExchangeOrderField_OrderSubmitStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_NotifySequence_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->NotifySequence = arg2;
  
}


intgo _wrap_CThostFtdcExchangeOrderField_NotifySequence_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_SettlementID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSettlementIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementID = arg2;
  
}


intgo _wrap_CThostFtdcExchangeOrderField_SettlementID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcSettlementIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_OrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_OrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_OrderSource_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderSourceType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderSourceType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderSource = arg2;
  
}


char _wrap_CThostFtdcExchangeOrderField_OrderSource_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderSourceType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderSourceType) ((arg1)->OrderSource);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_OrderStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderStatusType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderStatus = arg2;
  
}


char _wrap_CThostFtdcExchangeOrderField_OrderStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderStatusType) ((arg1)->OrderStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_OrderType_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderTypeType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderType = arg2;
  
}


char _wrap_CThostFtdcExchangeOrderField_OrderType_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderTypeType) ((arg1)->OrderType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_VolumeTraded_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeTraded = arg2;
  
}


intgo _wrap_CThostFtdcExchangeOrderField_VolumeTraded_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTraded);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_VolumeTotal_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeTotal = arg2;
  
}


intgo _wrap_CThostFtdcExchangeOrderField_VolumeTotal_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_InsertDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_InsertDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_InsertTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_InsertTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_ActiveTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveTime, (const char *)arg2, 9-1);
      arg1->ActiveTime[9-1] = 0;
    } else {
      arg1->ActiveTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_ActiveTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActiveTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_SuspendTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SuspendTime, (const char *)arg2, 9-1);
      arg1->SuspendTime[9-1] = 0;
    } else {
      arg1->SuspendTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_SuspendTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->SuspendTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_UpdateTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UpdateTime, (const char *)arg2, 9-1);
      arg1->UpdateTime[9-1] = 0;
    } else {
      arg1->UpdateTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_UpdateTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UpdateTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_CancelTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_CancelTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CancelTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_ActiveTraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveTraderID, (const char *)arg2, 21-1);
      arg1->ActiveTraderID[21-1] = 0;
    } else {
      arg1->ActiveTraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_ActiveTraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActiveTraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_ClearingPartID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_ClearingPartID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClearingPartID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_SequenceNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->SequenceNo = arg2;
  
}


intgo _wrap_CThostFtdcExchangeOrderField_SequenceNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_BranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_BranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcExchangeOrderField *_wrap_new_CThostFtdcExchangeOrderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcExchangeOrderField *result = 0 ;
  CThostFtdcExchangeOrderField *_swig_go_result;
  
  
  result = (CThostFtdcExchangeOrderField *)new CThostFtdcExchangeOrderField();
  *(CThostFtdcExchangeOrderField **)&_swig_go_result = (CThostFtdcExchangeOrderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcExchangeOrderField_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderField *_swig_go_0) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  
  arg1 = *(CThostFtdcExchangeOrderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcExchangeOrderInsertErrorField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderInsertErrorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderInsertErrorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderInsertErrorField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderInsertErrorField *_swig_go_0) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderInsertErrorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderInsertErrorField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderInsertErrorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderInsertErrorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderInsertErrorField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderInsertErrorField *_swig_go_0) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderInsertErrorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderInsertErrorField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderInsertErrorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderInsertErrorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderInsertErrorField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderInsertErrorField *_swig_go_0) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderInsertErrorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderInsertErrorField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderInsertErrorField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderInsertErrorField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcExchangeOrderInsertErrorField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderInsertErrorField *_swig_go_0) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderInsertErrorField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderInsertErrorField_OrderLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderInsertErrorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderInsertErrorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderInsertErrorField_OrderLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderInsertErrorField *_swig_go_0) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderInsertErrorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderInsertErrorField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderInsertErrorField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderInsertErrorField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcExchangeOrderInsertErrorField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderInsertErrorField *_swig_go_0) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderInsertErrorField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderInsertErrorField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderInsertErrorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderInsertErrorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderInsertErrorField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderInsertErrorField *_swig_go_0) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderInsertErrorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcExchangeOrderInsertErrorField *_wrap_new_CThostFtdcExchangeOrderInsertErrorField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcExchangeOrderInsertErrorField *result = 0 ;
  CThostFtdcExchangeOrderInsertErrorField *_swig_go_result;
  
  
  result = (CThostFtdcExchangeOrderInsertErrorField *)new CThostFtdcExchangeOrderInsertErrorField();
  *(CThostFtdcExchangeOrderInsertErrorField **)&_swig_go_result = (CThostFtdcExchangeOrderInsertErrorField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcExchangeOrderInsertErrorField_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderInsertErrorField *_swig_go_0) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  
  arg1 = *(CThostFtdcExchangeOrderInsertErrorField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInputOrderActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderActionField_OrderActionRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionRefType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderActionRef = arg2;
  
}


intgo _wrap_CThostFtdcInputOrderActionField_OrderActionRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionRefType) ((arg1)->OrderActionRef);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderActionField_OrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderActionField_OrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderActionField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcInputOrderActionField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderActionField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcInputOrderActionField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderActionField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcInputOrderActionField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderActionField_OrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderActionField_OrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderActionField_ActionFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcActionFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->ActionFlag = arg2;
  
}


char _wrap_CThostFtdcInputOrderActionField_ActionFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderActionField_LimitPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LimitPrice = arg2;
  
}


double _wrap_CThostFtdcInputOrderActionField_LimitPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderActionField_VolumeChange_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeChange = arg2;
  
}


intgo _wrap_CThostFtdcInputOrderActionField_VolumeChange_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->VolumeChange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderActionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderActionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderActionField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderActionField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderActionField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderActionField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderActionField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderActionField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputOrderActionField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputOrderActionField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcInputOrderActionField *_wrap_new_CThostFtdcInputOrderActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInputOrderActionField *result = 0 ;
  CThostFtdcInputOrderActionField *_swig_go_result;
  
  
  result = (CThostFtdcInputOrderActionField *)new CThostFtdcInputOrderActionField();
  *(CThostFtdcInputOrderActionField **)&_swig_go_result = (CThostFtdcInputOrderActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInputOrderActionField_goctp_ef6abdc493ff8ae2(CThostFtdcInputOrderActionField *_swig_go_0) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  
  arg1 = *(CThostFtdcInputOrderActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcOrderActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_OrderActionRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionRefType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderActionRef = arg2;
  
}


intgo _wrap_CThostFtdcOrderActionField_OrderActionRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionRefType) ((arg1)->OrderActionRef);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_OrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderActionField_OrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcOrderActionField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcOrderActionField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcOrderActionField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_OrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderActionField_OrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_ActionFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcActionFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->ActionFlag = arg2;
  
}


char _wrap_CThostFtdcOrderActionField_ActionFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_LimitPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LimitPrice = arg2;
  
}


double _wrap_CThostFtdcOrderActionField_LimitPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_VolumeChange_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeChange = arg2;
  
}


intgo _wrap_CThostFtdcOrderActionField_VolumeChange_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->VolumeChange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_ActionDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderActionField_ActionDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_ActionTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderActionField_ActionTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderActionField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcOrderActionField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_OrderLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderActionField_OrderLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_ActionLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderActionField_ActionLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderActionField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderActionField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderActionField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_OrderActionStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderActionStatus = arg2;
  
}


char _wrap_CThostFtdcOrderActionField_OrderActionStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderActionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_StatusMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderActionField_StatusMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->StatusMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderActionField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_BranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderActionField_BranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderActionField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderActionField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOrderActionField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOrderActionField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcOrderActionField *_wrap_new_CThostFtdcOrderActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcOrderActionField *result = 0 ;
  CThostFtdcOrderActionField *_swig_go_result;
  
  
  result = (CThostFtdcOrderActionField *)new CThostFtdcOrderActionField();
  *(CThostFtdcOrderActionField **)&_swig_go_result = (CThostFtdcOrderActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcOrderActionField_goctp_ef6abdc493ff8ae2(CThostFtdcOrderActionField *_swig_go_0) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  
  arg1 = *(CThostFtdcOrderActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcExchangeOrderActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionField_OrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderActionField_OrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionField_ActionFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcActionFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->ActionFlag = arg2;
  
}


char _wrap_CThostFtdcExchangeOrderActionField_ActionFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionField_LimitPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LimitPrice = arg2;
  
}


double _wrap_CThostFtdcExchangeOrderActionField_LimitPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionField_VolumeChange_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeChange = arg2;
  
}


intgo _wrap_CThostFtdcExchangeOrderActionField_VolumeChange_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->VolumeChange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionField_ActionDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderActionField_ActionDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionField_ActionTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderActionField_ActionTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderActionField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcExchangeOrderActionField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionField_OrderLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderActionField_OrderLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionField_ActionLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderActionField_ActionLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderActionField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderActionField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderActionField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionField_OrderActionStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderActionStatus = arg2;
  
}


char _wrap_CThostFtdcExchangeOrderActionField_OrderActionStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderActionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionField_BranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderActionField_BranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderActionField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderActionField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcExchangeOrderActionField *_wrap_new_CThostFtdcExchangeOrderActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcExchangeOrderActionField *result = 0 ;
  CThostFtdcExchangeOrderActionField *_swig_go_result;
  
  
  result = (CThostFtdcExchangeOrderActionField *)new CThostFtdcExchangeOrderActionField();
  *(CThostFtdcExchangeOrderActionField **)&_swig_go_result = (CThostFtdcExchangeOrderActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcExchangeOrderActionField_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionField *_swig_go_0) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcExchangeOrderActionErrorField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionErrorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionErrorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderActionErrorField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionErrorField *_swig_go_0) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionErrorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionErrorField_OrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionErrorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionErrorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderActionErrorField_OrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionErrorField *_swig_go_0) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionErrorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionErrorField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionErrorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionErrorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderActionErrorField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionErrorField *_swig_go_0) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionErrorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionErrorField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionErrorField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionErrorField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcExchangeOrderActionErrorField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionErrorField *_swig_go_0) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionErrorField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionErrorField_OrderLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionErrorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionErrorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderActionErrorField_OrderLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionErrorField *_swig_go_0) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionErrorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionErrorField_ActionLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionErrorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionErrorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderActionErrorField_ActionLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionErrorField *_swig_go_0) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionErrorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionErrorField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionErrorField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionErrorField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcExchangeOrderActionErrorField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionErrorField *_swig_go_0) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionErrorField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeOrderActionErrorField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionErrorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionErrorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeOrderActionErrorField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionErrorField *_swig_go_0) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeOrderActionErrorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcExchangeOrderActionErrorField *_wrap_new_CThostFtdcExchangeOrderActionErrorField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcExchangeOrderActionErrorField *result = 0 ;
  CThostFtdcExchangeOrderActionErrorField *_swig_go_result;
  
  
  result = (CThostFtdcExchangeOrderActionErrorField *)new CThostFtdcExchangeOrderActionErrorField();
  *(CThostFtdcExchangeOrderActionErrorField **)&_swig_go_result = (CThostFtdcExchangeOrderActionErrorField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcExchangeOrderActionErrorField_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeOrderActionErrorField *_swig_go_0) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  
  arg1 = *(CThostFtdcExchangeOrderActionErrorField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcExchangeTradeField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeTradeField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeTradeField_TradeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeID, (const char *)arg2, 21-1);
      arg1->TradeID[21-1] = 0;
    } else {
      arg1->TradeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeTradeField_TradeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeTradeField_Direction_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->Direction = arg2;
  
}


char _wrap_CThostFtdcExchangeTradeField_Direction_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeTradeField_OrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeTradeField_OrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeTradeField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeTradeField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeTradeField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeTradeField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeTradeField_TradingRole_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcTradingRoleType arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradingRoleType)_swig_go_1; 
  
  if (arg1) (arg1)->TradingRole = arg2;
  
}


char _wrap_CThostFtdcExchangeTradeField_TradingRole_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcTradingRoleType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcTradingRoleType) ((arg1)->TradingRole);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeTradeField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeTradeField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeTradeField_OffsetFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcOffsetFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->OffsetFlag = arg2;
  
}


char _wrap_CThostFtdcExchangeTradeField_OffsetFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcOffsetFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeTradeField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcExchangeTradeField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeTradeField_Price_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->Price = arg2;
  
}


double _wrap_CThostFtdcExchangeTradeField_Price_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->Price);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeTradeField_Volume_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->Volume = arg2;
  
}


intgo _wrap_CThostFtdcExchangeTradeField_Volume_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeTradeField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeTradeField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeTradeField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeTradeField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeTradeField_TradeType_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcTradeTypeType arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->TradeType = arg2;
  
}


char _wrap_CThostFtdcExchangeTradeField_TradeType_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcTradeTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeTypeType) ((arg1)->TradeType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeTradeField_PriceSource_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcPriceSourceType arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceSourceType)_swig_go_1; 
  
  if (arg1) (arg1)->PriceSource = arg2;
  
}


char _wrap_CThostFtdcExchangeTradeField_PriceSource_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcPriceSourceType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceSourceType) ((arg1)->PriceSource);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeTradeField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeTradeField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeTradeField_OrderLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeTradeField_OrderLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeTradeField_ClearingPartID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeTradeField_ClearingPartID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClearingPartID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeTradeField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeTradeField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeTradeField_SequenceNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->SequenceNo = arg2;
  
}


intgo _wrap_CThostFtdcExchangeTradeField_SequenceNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeTradeField_TradeSource_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcTradeSourceType arg2 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeSourceType)_swig_go_1; 
  
  if (arg1) (arg1)->TradeSource = arg2;
  
}


char _wrap_CThostFtdcExchangeTradeField_TradeSource_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcTradeSourceType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeSourceType) ((arg1)->TradeSource);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcExchangeTradeField *_wrap_new_CThostFtdcExchangeTradeField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcExchangeTradeField *result = 0 ;
  CThostFtdcExchangeTradeField *_swig_go_result;
  
  
  result = (CThostFtdcExchangeTradeField *)new CThostFtdcExchangeTradeField();
  *(CThostFtdcExchangeTradeField **)&_swig_go_result = (CThostFtdcExchangeTradeField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcExchangeTradeField_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeTradeField *_swig_go_0) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  
  arg1 = *(CThostFtdcExchangeTradeField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTradeField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradeField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradeField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradeField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_OrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradeField_OrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradeField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradeField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_TradeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeID, (const char *)arg2, 21-1);
      arg1->TradeID[21-1] = 0;
    } else {
      arg1->TradeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradeField_TradeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_Direction_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->Direction = arg2;
  
}


char _wrap_CThostFtdcTradeField_Direction_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_OrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradeField_OrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradeField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradeField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_TradingRole_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcTradingRoleType arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradingRoleType)_swig_go_1; 
  
  if (arg1) (arg1)->TradingRole = arg2;
  
}


char _wrap_CThostFtdcTradeField_TradingRole_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcTradingRoleType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcTradingRoleType) ((arg1)->TradingRole);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradeField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_OffsetFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcOffsetFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->OffsetFlag = arg2;
  
}


char _wrap_CThostFtdcTradeField_OffsetFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcOffsetFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcTradeField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_Price_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->Price = arg2;
  
}


double _wrap_CThostFtdcTradeField_Price_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->Price);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_Volume_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->Volume = arg2;
  
}


intgo _wrap_CThostFtdcTradeField_Volume_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradeField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradeField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_TradeType_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcTradeTypeType arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->TradeType = arg2;
  
}


char _wrap_CThostFtdcTradeField_TradeType_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcTradeTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeTypeType) ((arg1)->TradeType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_PriceSource_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcPriceSourceType arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceSourceType)_swig_go_1; 
  
  if (arg1) (arg1)->PriceSource = arg2;
  
}


char _wrap_CThostFtdcTradeField_PriceSource_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcPriceSourceType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceSourceType) ((arg1)->PriceSource);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradeField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_OrderLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradeField_OrderLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_ClearingPartID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradeField_ClearingPartID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClearingPartID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradeField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_SequenceNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->SequenceNo = arg2;
  
}


intgo _wrap_CThostFtdcTradeField_SequenceNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradeField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_SettlementID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcSettlementIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementID = arg2;
  
}


intgo _wrap_CThostFtdcTradeField_SettlementID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcSettlementIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_BrokerOrderSeq_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->BrokerOrderSeq = arg2;
  
}


intgo _wrap_CThostFtdcTradeField_BrokerOrderSeq_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->BrokerOrderSeq);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradeField_TradeSource_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcTradeSourceType arg2 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeSourceType)_swig_go_1; 
  
  if (arg1) (arg1)->TradeSource = arg2;
  
}


char _wrap_CThostFtdcTradeField_TradeSource_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcTradeSourceType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeSourceType) ((arg1)->TradeSource);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcTradeField *_wrap_new_CThostFtdcTradeField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTradeField *result = 0 ;
  CThostFtdcTradeField *_swig_go_result;
  
  
  result = (CThostFtdcTradeField *)new CThostFtdcTradeField();
  *(CThostFtdcTradeField **)&_swig_go_result = (CThostFtdcTradeField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTradeField_goctp_ef6abdc493ff8ae2(CThostFtdcTradeField *_swig_go_0) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  
  arg1 = *(CThostFtdcTradeField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcUserSessionField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcUserSessionField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserSessionField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcUserSessionField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserSessionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserSessionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserSessionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserSessionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserSessionField_LoginDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LoginDate, (const char *)arg2, 9-1);
      arg1->LoginDate[9-1] = 0;
    } else {
      arg1->LoginDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserSessionField_LoginDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LoginDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserSessionField_LoginTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LoginTime, (const char *)arg2, 9-1);
      arg1->LoginTime[9-1] = 0;
    } else {
      arg1->LoginTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserSessionField_LoginTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LoginTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserSessionField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserSessionField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserSessionField_UserProductInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserSessionField_UserProductInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserProductInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserSessionField_InterfaceProductInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InterfaceProductInfo, (const char *)arg2, 11-1);
      arg1->InterfaceProductInfo[11-1] = 0;
    } else {
      arg1->InterfaceProductInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserSessionField_InterfaceProductInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InterfaceProductInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserSessionField_ProtocolInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ProtocolInfo, (const char *)arg2, 11-1);
      arg1->ProtocolInfo[11-1] = 0;
    } else {
      arg1->ProtocolInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserSessionField_ProtocolInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ProtocolInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserSessionField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserSessionField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserSessionField_LoginRemark_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LoginRemark, (const char *)arg2, 36-1);
      arg1->LoginRemark[36-1] = 0;
    } else {
      arg1->LoginRemark[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserSessionField_LoginRemark_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LoginRemark);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcUserSessionField *_wrap_new_CThostFtdcUserSessionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcUserSessionField *result = 0 ;
  CThostFtdcUserSessionField *_swig_go_result;
  
  
  result = (CThostFtdcUserSessionField *)new CThostFtdcUserSessionField();
  *(CThostFtdcUserSessionField **)&_swig_go_result = (CThostFtdcUserSessionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcUserSessionField_goctp_ef6abdc493ff8ae2(CThostFtdcUserSessionField *_swig_go_0) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  
  arg1 = *(CThostFtdcUserSessionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQueryMaxOrderVolumeField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQueryMaxOrderVolumeField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeField *_swig_go_0) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQueryMaxOrderVolumeField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQueryMaxOrderVolumeField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeField *_swig_go_0) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQueryMaxOrderVolumeField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQueryMaxOrderVolumeField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeField *_swig_go_0) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQueryMaxOrderVolumeField_Direction_set_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeField **)&_swig_go_0; 
  arg2 = (TThostFtdcDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->Direction = arg2;
  
}


char _wrap_CThostFtdcQueryMaxOrderVolumeField_Direction_get_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeField *_swig_go_0) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  TThostFtdcDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeField **)&_swig_go_0; 
  
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQueryMaxOrderVolumeField_OffsetFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeField **)&_swig_go_0; 
  arg2 = (TThostFtdcOffsetFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->OffsetFlag = arg2;
  
}


char _wrap_CThostFtdcQueryMaxOrderVolumeField_OffsetFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeField *_swig_go_0) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  TThostFtdcOffsetFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeField **)&_swig_go_0; 
  
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQueryMaxOrderVolumeField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcQueryMaxOrderVolumeField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeField *_swig_go_0) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQueryMaxOrderVolumeField_MaxVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->MaxVolume = arg2;
  
}


intgo _wrap_CThostFtdcQueryMaxOrderVolumeField_MaxVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeField *_swig_go_0) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->MaxVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcQueryMaxOrderVolumeField *_wrap_new_CThostFtdcQueryMaxOrderVolumeField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQueryMaxOrderVolumeField *result = 0 ;
  CThostFtdcQueryMaxOrderVolumeField *_swig_go_result;
  
  
  result = (CThostFtdcQueryMaxOrderVolumeField *)new CThostFtdcQueryMaxOrderVolumeField();
  *(CThostFtdcQueryMaxOrderVolumeField **)&_swig_go_result = (CThostFtdcQueryMaxOrderVolumeField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQueryMaxOrderVolumeField_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeField *_swig_go_0) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcSettlementInfoConfirmField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSettlementInfoConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSettlementInfoConfirmField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoConfirmField *_swig_go_0) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSettlementInfoConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSettlementInfoConfirmField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSettlementInfoConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSettlementInfoConfirmField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoConfirmField *_swig_go_0) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSettlementInfoConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSettlementInfoConfirmField_ConfirmDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSettlementInfoConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ConfirmDate, (const char *)arg2, 9-1);
      arg1->ConfirmDate[9-1] = 0;
    } else {
      arg1->ConfirmDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSettlementInfoConfirmField_ConfirmDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoConfirmField *_swig_go_0) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSettlementInfoConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ConfirmDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSettlementInfoConfirmField_ConfirmTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSettlementInfoConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ConfirmTime, (const char *)arg2, 9-1);
      arg1->ConfirmTime[9-1] = 0;
    } else {
      arg1->ConfirmTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSettlementInfoConfirmField_ConfirmTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoConfirmField *_swig_go_0) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSettlementInfoConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ConfirmTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcSettlementInfoConfirmField *_wrap_new_CThostFtdcSettlementInfoConfirmField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcSettlementInfoConfirmField *result = 0 ;
  CThostFtdcSettlementInfoConfirmField *_swig_go_result;
  
  
  result = (CThostFtdcSettlementInfoConfirmField *)new CThostFtdcSettlementInfoConfirmField();
  *(CThostFtdcSettlementInfoConfirmField **)&_swig_go_result = (CThostFtdcSettlementInfoConfirmField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcSettlementInfoConfirmField_goctp_ef6abdc493ff8ae2(CThostFtdcSettlementInfoConfirmField *_swig_go_0) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  
  arg1 = *(CThostFtdcSettlementInfoConfirmField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcSyncDepositField_DepositSeqNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncDepositField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncDepositField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DepositSeqNo, (const char *)arg2, 15-1);
      arg1->DepositSeqNo[15-1] = 0;
    } else {
      arg1->DepositSeqNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncDepositField_DepositSeqNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncDepositField *_swig_go_0) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncDepositField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DepositSeqNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncDepositField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncDepositField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncDepositField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncDepositField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncDepositField *_swig_go_0) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncDepositField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncDepositField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncDepositField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncDepositField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncDepositField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncDepositField *_swig_go_0) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncDepositField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncDepositField_Deposit_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncDepositField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncDepositField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Deposit = arg2;
  
}


double _wrap_CThostFtdcSyncDepositField_Deposit_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncDepositField *_swig_go_0) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncDepositField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Deposit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncDepositField_IsForce_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncDepositField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcSyncDepositField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsForce = arg2;
  
}


intgo _wrap_CThostFtdcSyncDepositField_IsForce_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncDepositField *_swig_go_0) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSyncDepositField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsForce);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncDepositField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncDepositField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncDepositField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncDepositField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncDepositField *_swig_go_0) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncDepositField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcSyncDepositField *_wrap_new_CThostFtdcSyncDepositField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcSyncDepositField *result = 0 ;
  CThostFtdcSyncDepositField *_swig_go_result;
  
  
  result = (CThostFtdcSyncDepositField *)new CThostFtdcSyncDepositField();
  *(CThostFtdcSyncDepositField **)&_swig_go_result = (CThostFtdcSyncDepositField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcSyncDepositField_goctp_ef6abdc493ff8ae2(CThostFtdcSyncDepositField *_swig_go_0) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  
  arg1 = *(CThostFtdcSyncDepositField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcSyncFundMortgageField_MortgageSeqNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncFundMortgageField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncFundMortgageField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MortgageSeqNo, (const char *)arg2, 15-1);
      arg1->MortgageSeqNo[15-1] = 0;
    } else {
      arg1->MortgageSeqNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncFundMortgageField_MortgageSeqNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncFundMortgageField *_swig_go_0) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncFundMortgageField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MortgageSeqNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncFundMortgageField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncFundMortgageField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncFundMortgageField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncFundMortgageField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncFundMortgageField *_swig_go_0) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncFundMortgageField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncFundMortgageField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncFundMortgageField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncFundMortgageField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncFundMortgageField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncFundMortgageField *_swig_go_0) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncFundMortgageField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncFundMortgageField_FromCurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncFundMortgageField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncFundMortgageField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FromCurrencyID, (const char *)arg2, 4-1);
      arg1->FromCurrencyID[4-1] = 0;
    } else {
      arg1->FromCurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncFundMortgageField_FromCurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncFundMortgageField *_swig_go_0) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncFundMortgageField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->FromCurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncFundMortgageField_MortgageAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncFundMortgageField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncFundMortgageField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->MortgageAmount = arg2;
  
}


double _wrap_CThostFtdcSyncFundMortgageField_MortgageAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncFundMortgageField *_swig_go_0) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncFundMortgageField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->MortgageAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncFundMortgageField_ToCurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncFundMortgageField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncFundMortgageField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ToCurrencyID, (const char *)arg2, 4-1);
      arg1->ToCurrencyID[4-1] = 0;
    } else {
      arg1->ToCurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncFundMortgageField_ToCurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncFundMortgageField *_swig_go_0) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncFundMortgageField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ToCurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcSyncFundMortgageField *_wrap_new_CThostFtdcSyncFundMortgageField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcSyncFundMortgageField *result = 0 ;
  CThostFtdcSyncFundMortgageField *_swig_go_result;
  
  
  result = (CThostFtdcSyncFundMortgageField *)new CThostFtdcSyncFundMortgageField();
  *(CThostFtdcSyncFundMortgageField **)&_swig_go_result = (CThostFtdcSyncFundMortgageField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcSyncFundMortgageField_goctp_ef6abdc493ff8ae2(CThostFtdcSyncFundMortgageField *_swig_go_0) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  
  arg1 = *(CThostFtdcSyncFundMortgageField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcBrokerSyncField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerSyncField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerSyncField *arg1 = (CThostFtdcBrokerSyncField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerSyncField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerSyncField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerSyncField *_swig_go_0) {
  CThostFtdcBrokerSyncField *arg1 = (CThostFtdcBrokerSyncField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerSyncField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcBrokerSyncField *_wrap_new_CThostFtdcBrokerSyncField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcBrokerSyncField *result = 0 ;
  CThostFtdcBrokerSyncField *_swig_go_result;
  
  
  result = (CThostFtdcBrokerSyncField *)new CThostFtdcBrokerSyncField();
  *(CThostFtdcBrokerSyncField **)&_swig_go_result = (CThostFtdcBrokerSyncField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcBrokerSyncField_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerSyncField *_swig_go_0) {
  CThostFtdcBrokerSyncField *arg1 = (CThostFtdcBrokerSyncField *) 0 ;
  
  arg1 = *(CThostFtdcBrokerSyncField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcSyncingInvestorField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInvestorField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInvestorField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorField_InvestorGroupID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorGroupID, (const char *)arg2, 13-1);
      arg1->InvestorGroupID[13-1] = 0;
    } else {
      arg1->InvestorGroupID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInvestorField_InvestorGroupID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorGroupID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorField_InvestorName_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorName, (const char *)arg2, 81-1);
      arg1->InvestorName[81-1] = 0;
    } else {
      arg1->InvestorName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInvestorField_InvestorName_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorField_IdentifiedCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0, char _swig_go_1) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdentifiedCardType = arg2;
  
}


char _wrap_CThostFtdcSyncingInvestorField_IdentifiedCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdentifiedCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInvestorField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorField_IsActive_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsActive = arg2;
  
}


intgo _wrap_CThostFtdcSyncingInvestorField_IsActive_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorField_Telephone_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInvestorField_Telephone_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Telephone);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorField_Address_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInvestorField_Address_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Address);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorField_OpenDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OpenDate, (const char *)arg2, 9-1);
      arg1->OpenDate[9-1] = 0;
    } else {
      arg1->OpenDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInvestorField_OpenDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OpenDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorField_Mobile_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Mobile, (const char *)arg2, 41-1);
      arg1->Mobile[41-1] = 0;
    } else {
      arg1->Mobile[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInvestorField_Mobile_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Mobile);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorField_CommModelID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CommModelID, (const char *)arg2, 13-1);
      arg1->CommModelID[13-1] = 0;
    } else {
      arg1->CommModelID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInvestorField_CommModelID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CommModelID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorField_MarginModelID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MarginModelID, (const char *)arg2, 13-1);
      arg1->MarginModelID[13-1] = 0;
    } else {
      arg1->MarginModelID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInvestorField_MarginModelID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MarginModelID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcSyncingInvestorField *_wrap_new_CThostFtdcSyncingInvestorField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcSyncingInvestorField *result = 0 ;
  CThostFtdcSyncingInvestorField *_swig_go_result;
  
  
  result = (CThostFtdcSyncingInvestorField *)new CThostFtdcSyncingInvestorField();
  *(CThostFtdcSyncingInvestorField **)&_swig_go_result = (CThostFtdcSyncingInvestorField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcSyncingInvestorField_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorField *_swig_go_0) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  
  arg1 = *(CThostFtdcSyncingInvestorField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcSyncingTradingCodeField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingCodeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingCodeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingTradingCodeField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingCodeField *_swig_go_0) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingCodeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingCodeField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingCodeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingCodeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingTradingCodeField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingCodeField *_swig_go_0) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingCodeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingCodeField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingCodeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingCodeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingTradingCodeField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingCodeField *_swig_go_0) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingCodeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingCodeField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingCodeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingCodeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingTradingCodeField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingCodeField *_swig_go_0) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingCodeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingCodeField_IsActive_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingCodeField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingCodeField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsActive = arg2;
  
}


intgo _wrap_CThostFtdcSyncingTradingCodeField_IsActive_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingCodeField *_swig_go_0) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingCodeField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingCodeField_ClientIDType_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingCodeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  TThostFtdcClientIDTypeType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingCodeField **)&_swig_go_0; 
  arg2 = (TThostFtdcClientIDTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->ClientIDType = arg2;
  
}


char _wrap_CThostFtdcSyncingTradingCodeField_ClientIDType_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingCodeField *_swig_go_0) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  TThostFtdcClientIDTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingCodeField **)&_swig_go_0; 
  
  result = (TThostFtdcClientIDTypeType) ((arg1)->ClientIDType);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcSyncingTradingCodeField *_wrap_new_CThostFtdcSyncingTradingCodeField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcSyncingTradingCodeField *result = 0 ;
  CThostFtdcSyncingTradingCodeField *_swig_go_result;
  
  
  result = (CThostFtdcSyncingTradingCodeField *)new CThostFtdcSyncingTradingCodeField();
  *(CThostFtdcSyncingTradingCodeField **)&_swig_go_result = (CThostFtdcSyncingTradingCodeField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcSyncingTradingCodeField_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingCodeField *_swig_go_0) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  
  arg1 = *(CThostFtdcSyncingTradingCodeField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcSyncingInvestorGroupField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorGroupField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInvestorGroupField *arg1 = (CThostFtdcSyncingInvestorGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorGroupField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInvestorGroupField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorGroupField *_swig_go_0) {
  CThostFtdcSyncingInvestorGroupField *arg1 = (CThostFtdcSyncingInvestorGroupField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorGroupField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorGroupField_InvestorGroupID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorGroupField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInvestorGroupField *arg1 = (CThostFtdcSyncingInvestorGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorGroupField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorGroupID, (const char *)arg2, 13-1);
      arg1->InvestorGroupID[13-1] = 0;
    } else {
      arg1->InvestorGroupID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInvestorGroupField_InvestorGroupID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorGroupField *_swig_go_0) {
  CThostFtdcSyncingInvestorGroupField *arg1 = (CThostFtdcSyncingInvestorGroupField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorGroupField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorGroupID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorGroupField_InvestorGroupName_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorGroupField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInvestorGroupField *arg1 = (CThostFtdcSyncingInvestorGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorGroupField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorGroupName, (const char *)arg2, 41-1);
      arg1->InvestorGroupName[41-1] = 0;
    } else {
      arg1->InvestorGroupName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInvestorGroupField_InvestorGroupName_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorGroupField *_swig_go_0) {
  CThostFtdcSyncingInvestorGroupField *arg1 = (CThostFtdcSyncingInvestorGroupField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorGroupField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorGroupName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcSyncingInvestorGroupField *_wrap_new_CThostFtdcSyncingInvestorGroupField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcSyncingInvestorGroupField *result = 0 ;
  CThostFtdcSyncingInvestorGroupField *_swig_go_result;
  
  
  result = (CThostFtdcSyncingInvestorGroupField *)new CThostFtdcSyncingInvestorGroupField();
  *(CThostFtdcSyncingInvestorGroupField **)&_swig_go_result = (CThostFtdcSyncingInvestorGroupField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcSyncingInvestorGroupField_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorGroupField *_swig_go_0) {
  CThostFtdcSyncingInvestorGroupField *arg1 = (CThostFtdcSyncingInvestorGroupField *) 0 ;
  
  arg1 = *(CThostFtdcSyncingInvestorGroupField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcSyncingTradingAccountField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingTradingAccountField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingTradingAccountField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_PreMortgage_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PreMortgage = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_PreMortgage_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PreMortgage);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_PreCredit_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PreCredit = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_PreCredit_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PreCredit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_PreDeposit_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PreDeposit = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_PreDeposit_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PreDeposit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_PreBalance_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PreBalance = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_PreBalance_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PreBalance);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_PreMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PreMargin = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_PreMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PreMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_InterestBase_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->InterestBase = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_InterestBase_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->InterestBase);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_Interest_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Interest = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_Interest_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Interest);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_Deposit_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Deposit = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_Deposit_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Deposit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_Withdraw_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Withdraw = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_Withdraw_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Withdraw);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_FrozenMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FrozenMargin = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_FrozenMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FrozenMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_FrozenCash_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FrozenCash = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_FrozenCash_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCash);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_FrozenCommission_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FrozenCommission = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_FrozenCommission_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCommission);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_CurrMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CurrMargin = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_CurrMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CurrMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_CashIn_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CashIn = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_CashIn_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CashIn);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_Commission_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Commission = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_Commission_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Commission);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_CloseProfit_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseProfit = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_CloseProfit_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_PositionProfit_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PositionProfit = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_PositionProfit_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PositionProfit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_Balance_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Balance = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_Balance_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Balance);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_Available_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Available = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_Available_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Available);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_WithdrawQuota_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->WithdrawQuota = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_WithdrawQuota_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->WithdrawQuota);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_Reserve_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Reserve = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_Reserve_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Reserve);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingTradingAccountField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_SettlementID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSettlementIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementID = arg2;
  
}


intgo _wrap_CThostFtdcSyncingTradingAccountField_SettlementID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcSettlementIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_Credit_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Credit = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_Credit_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Credit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_Mortgage_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Mortgage = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_Mortgage_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Mortgage);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_ExchangeMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ExchangeMargin = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_ExchangeMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ExchangeMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_DeliveryMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->DeliveryMargin = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_DeliveryMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->DeliveryMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_ExchangeDeliveryMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ExchangeDeliveryMargin = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_ExchangeDeliveryMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ExchangeDeliveryMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_ReserveBalance_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ReserveBalance = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_ReserveBalance_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ReserveBalance);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingTradingAccountField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_PreFundMortgageIn_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PreFundMortgageIn = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_PreFundMortgageIn_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PreFundMortgageIn);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_PreFundMortgageOut_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PreFundMortgageOut = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_PreFundMortgageOut_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PreFundMortgageOut);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_FundMortgageIn_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FundMortgageIn = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_FundMortgageIn_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FundMortgageIn);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_FundMortgageOut_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FundMortgageOut = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_FundMortgageOut_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FundMortgageOut);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_FundMortgageAvailable_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FundMortgageAvailable = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_FundMortgageAvailable_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FundMortgageAvailable);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_MortgageableFund_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->MortgageableFund = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_MortgageableFund_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->MortgageableFund);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_SpecProductMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->SpecProductMargin = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_SpecProductMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_SpecProductFrozenMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->SpecProductFrozenMargin = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_SpecProductFrozenMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductFrozenMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_SpecProductCommission_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->SpecProductCommission = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_SpecProductCommission_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductCommission);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_SpecProductFrozenCommission_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->SpecProductFrozenCommission = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_SpecProductFrozenCommission_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductFrozenCommission);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_SpecProductPositionProfit_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->SpecProductPositionProfit = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_SpecProductPositionProfit_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductPositionProfit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_SpecProductCloseProfit_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->SpecProductCloseProfit = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_SpecProductCloseProfit_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductCloseProfit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_SpecProductPositionProfitByAlg_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->SpecProductPositionProfitByAlg = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_SpecProductPositionProfitByAlg_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductPositionProfitByAlg);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingTradingAccountField_SpecProductExchangeMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->SpecProductExchangeMargin = arg2;
  
}


double _wrap_CThostFtdcSyncingTradingAccountField_SpecProductExchangeMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductExchangeMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcSyncingTradingAccountField *_wrap_new_CThostFtdcSyncingTradingAccountField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcSyncingTradingAccountField *result = 0 ;
  CThostFtdcSyncingTradingAccountField *_swig_go_result;
  
  
  result = (CThostFtdcSyncingTradingAccountField *)new CThostFtdcSyncingTradingAccountField();
  *(CThostFtdcSyncingTradingAccountField **)&_swig_go_result = (CThostFtdcSyncingTradingAccountField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcSyncingTradingAccountField_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingTradingAccountField *_swig_go_0) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  
  arg1 = *(CThostFtdcSyncingTradingAccountField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcSyncingInvestorPositionField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInvestorPositionField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInvestorPositionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInvestorPositionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_PosiDirection_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPosiDirectionType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcPosiDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->PosiDirection = arg2;
  
}


char _wrap_CThostFtdcSyncingInvestorPositionField_PosiDirection_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPosiDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcPosiDirectionType) ((arg1)->PosiDirection);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcSyncingInvestorPositionField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_PositionDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPositionDateType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcPositionDateType)_swig_go_1; 
  
  if (arg1) (arg1)->PositionDate = arg2;
  
}


char _wrap_CThostFtdcSyncingInvestorPositionField_PositionDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPositionDateType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcPositionDateType) ((arg1)->PositionDate);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_YdPosition_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->YdPosition = arg2;
  
}


intgo _wrap_CThostFtdcSyncingInvestorPositionField_YdPosition_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->YdPosition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_Position_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->Position = arg2;
  
}


intgo _wrap_CThostFtdcSyncingInvestorPositionField_Position_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->Position);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_LongFrozen_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->LongFrozen = arg2;
  
}


intgo _wrap_CThostFtdcSyncingInvestorPositionField_LongFrozen_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->LongFrozen);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_ShortFrozen_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->ShortFrozen = arg2;
  
}


intgo _wrap_CThostFtdcSyncingInvestorPositionField_ShortFrozen_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->ShortFrozen);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_LongFrozenAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->LongFrozenAmount = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_LongFrozenAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->LongFrozenAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_ShortFrozenAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ShortFrozenAmount = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_ShortFrozenAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ShortFrozenAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_OpenVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenVolume = arg2;
  
}


intgo _wrap_CThostFtdcSyncingInvestorPositionField_OpenVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->OpenVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_CloseVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseVolume = arg2;
  
}


intgo _wrap_CThostFtdcSyncingInvestorPositionField_CloseVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->CloseVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_OpenAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenAmount = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_OpenAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->OpenAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_CloseAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseAmount = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_CloseAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CloseAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_PositionCost_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PositionCost = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_PositionCost_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PositionCost);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_PreMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PreMargin = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_PreMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PreMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_UseMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->UseMargin = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_UseMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->UseMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_FrozenMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FrozenMargin = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_FrozenMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FrozenMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_FrozenCash_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FrozenCash = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_FrozenCash_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCash);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_FrozenCommission_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FrozenCommission = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_FrozenCommission_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCommission);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_CashIn_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CashIn = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_CashIn_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CashIn);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_Commission_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Commission = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_Commission_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Commission);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_CloseProfit_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseProfit = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_CloseProfit_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_PositionProfit_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PositionProfit = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_PositionProfit_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PositionProfit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_PreSettlementPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->PreSettlementPrice = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_PreSettlementPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->PreSettlementPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_SettlementPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementPrice = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_SettlementPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->SettlementPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInvestorPositionField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_SettlementID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSettlementIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementID = arg2;
  
}


intgo _wrap_CThostFtdcSyncingInvestorPositionField_SettlementID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcSettlementIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_OpenCost_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenCost = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_OpenCost_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->OpenCost);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_ExchangeMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ExchangeMargin = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_ExchangeMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ExchangeMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_CombPosition_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->CombPosition = arg2;
  
}


intgo _wrap_CThostFtdcSyncingInvestorPositionField_CombPosition_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->CombPosition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_CombLongFrozen_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->CombLongFrozen = arg2;
  
}


intgo _wrap_CThostFtdcSyncingInvestorPositionField_CombLongFrozen_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->CombLongFrozen);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_CombShortFrozen_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->CombShortFrozen = arg2;
  
}


intgo _wrap_CThostFtdcSyncingInvestorPositionField_CombShortFrozen_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->CombShortFrozen);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_CloseProfitByDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseProfitByDate = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_CloseProfitByDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfitByDate);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_CloseProfitByTrade_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseProfitByTrade = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_CloseProfitByTrade_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfitByTrade);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_TodayPosition_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->TodayPosition = arg2;
  
}


intgo _wrap_CThostFtdcSyncingInvestorPositionField_TodayPosition_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->TodayPosition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_MarginRateByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->MarginRateByMoney = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_MarginRateByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_MarginRateByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->MarginRateByVolume = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_MarginRateByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_StrikeFrozen_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->StrikeFrozen = arg2;
  
}


intgo _wrap_CThostFtdcSyncingInvestorPositionField_StrikeFrozen_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->StrikeFrozen);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_StrikeFrozenAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->StrikeFrozenAmount = arg2;
  
}


double _wrap_CThostFtdcSyncingInvestorPositionField_StrikeFrozenAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->StrikeFrozenAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInvestorPositionField_AbandonFrozen_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->AbandonFrozen = arg2;
  
}


intgo _wrap_CThostFtdcSyncingInvestorPositionField_AbandonFrozen_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->AbandonFrozen);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcSyncingInvestorPositionField *_wrap_new_CThostFtdcSyncingInvestorPositionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcSyncingInvestorPositionField *result = 0 ;
  CThostFtdcSyncingInvestorPositionField *_swig_go_result;
  
  
  result = (CThostFtdcSyncingInvestorPositionField *)new CThostFtdcSyncingInvestorPositionField();
  *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_result = (CThostFtdcSyncingInvestorPositionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcSyncingInvestorPositionField_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInvestorPositionField *_swig_go_0) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  
  arg1 = *(CThostFtdcSyncingInvestorPositionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcSyncingInstrumentMarginRateField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentMarginRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInstrumentMarginRateField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentMarginRateField_InvestorRange_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentMarginRateField *_swig_go_0, char _swig_go_1) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcInvestorRangeType)_swig_go_1; 
  
  if (arg1) (arg1)->InvestorRange = arg2;
  
}


char _wrap_CThostFtdcSyncingInstrumentMarginRateField_InvestorRange_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcInvestorRangeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentMarginRateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentMarginRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInstrumentMarginRateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentMarginRateField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentMarginRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInstrumentMarginRateField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentMarginRateField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentMarginRateField *_swig_go_0, char _swig_go_1) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcSyncingInstrumentMarginRateField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentMarginRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->LongMarginRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->LongMarginRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentMarginRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->LongMarginRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->LongMarginRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentMarginRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->ShortMarginRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->ShortMarginRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentMarginRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ShortMarginRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ShortMarginRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentMarginRateField_IsRelative_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentMarginRateField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsRelative = arg2;
  
}


intgo _wrap_CThostFtdcSyncingInstrumentMarginRateField_IsRelative_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsRelative);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcSyncingInstrumentMarginRateField *_wrap_new_CThostFtdcSyncingInstrumentMarginRateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcSyncingInstrumentMarginRateField *result = 0 ;
  CThostFtdcSyncingInstrumentMarginRateField *_swig_go_result;
  
  
  result = (CThostFtdcSyncingInstrumentMarginRateField *)new CThostFtdcSyncingInstrumentMarginRateField();
  *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_result = (CThostFtdcSyncingInstrumentMarginRateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcSyncingInstrumentMarginRateField_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentMarginRateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcSyncingInstrumentCommissionRateField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInstrumentCommissionRateField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentCommissionRateField_InvestorRange_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_0, char _swig_go_1) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcInvestorRangeType)_swig_go_1; 
  
  if (arg1) (arg1)->InvestorRange = arg2;
  
}


char _wrap_CThostFtdcSyncingInstrumentCommissionRateField_InvestorRange_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcInvestorRangeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentCommissionRateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInstrumentCommissionRateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentCommissionRateField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInstrumentCommissionRateField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseTodayRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseTodayRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcSyncingInstrumentCommissionRateField *_wrap_new_CThostFtdcSyncingInstrumentCommissionRateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcSyncingInstrumentCommissionRateField *result = 0 ;
  CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_result;
  
  
  result = (CThostFtdcSyncingInstrumentCommissionRateField *)new CThostFtdcSyncingInstrumentCommissionRateField();
  *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_result = (CThostFtdcSyncingInstrumentCommissionRateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcSyncingInstrumentCommissionRateField_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentCommissionRateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcSyncingInstrumentTradingRightField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentTradingRightField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentTradingRightField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInstrumentTradingRightField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentTradingRightField *_swig_go_0) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentTradingRightField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentTradingRightField_InvestorRange_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentTradingRightField *_swig_go_0, char _swig_go_1) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentTradingRightField **)&_swig_go_0; 
  arg2 = (TThostFtdcInvestorRangeType)_swig_go_1; 
  
  if (arg1) (arg1)->InvestorRange = arg2;
  
}


char _wrap_CThostFtdcSyncingInstrumentTradingRightField_InvestorRange_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentTradingRightField *_swig_go_0) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  TThostFtdcInvestorRangeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentTradingRightField **)&_swig_go_0; 
  
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentTradingRightField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentTradingRightField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentTradingRightField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInstrumentTradingRightField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentTradingRightField *_swig_go_0) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentTradingRightField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentTradingRightField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentTradingRightField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentTradingRightField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncingInstrumentTradingRightField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentTradingRightField *_swig_go_0) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentTradingRightField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncingInstrumentTradingRightField_TradingRight_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentTradingRightField *_swig_go_0, char _swig_go_1) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  TThostFtdcTradingRightType arg2 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentTradingRightField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradingRightType)_swig_go_1; 
  
  if (arg1) (arg1)->TradingRight = arg2;
  
}


char _wrap_CThostFtdcSyncingInstrumentTradingRightField_TradingRight_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentTradingRightField *_swig_go_0) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  TThostFtdcTradingRightType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcSyncingInstrumentTradingRightField **)&_swig_go_0; 
  
  result = (TThostFtdcTradingRightType) ((arg1)->TradingRight);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcSyncingInstrumentTradingRightField *_wrap_new_CThostFtdcSyncingInstrumentTradingRightField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcSyncingInstrumentTradingRightField *result = 0 ;
  CThostFtdcSyncingInstrumentTradingRightField *_swig_go_result;
  
  
  result = (CThostFtdcSyncingInstrumentTradingRightField *)new CThostFtdcSyncingInstrumentTradingRightField();
  *(CThostFtdcSyncingInstrumentTradingRightField **)&_swig_go_result = (CThostFtdcSyncingInstrumentTradingRightField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcSyncingInstrumentTradingRightField_goctp_ef6abdc493ff8ae2(CThostFtdcSyncingInstrumentTradingRightField *_swig_go_0) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  
  arg1 = *(CThostFtdcSyncingInstrumentTradingRightField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryOrderField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryOrderField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderField *_swig_go_0) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryOrderField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryOrderField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderField *_swig_go_0) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryOrderField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryOrderField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderField *_swig_go_0) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryOrderField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryOrderField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderField *_swig_go_0) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryOrderField_OrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryOrderField_OrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderField *_swig_go_0) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryOrderField_InsertTimeStart_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeStart, (const char *)arg2, 9-1);
      arg1->InsertTimeStart[9-1] = 0;
    } else {
      arg1->InsertTimeStart[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryOrderField_InsertTimeStart_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderField *_swig_go_0) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertTimeStart);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryOrderField_InsertTimeEnd_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeEnd, (const char *)arg2, 9-1);
      arg1->InsertTimeEnd[9-1] = 0;
    } else {
      arg1->InsertTimeEnd[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryOrderField_InsertTimeEnd_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderField *_swig_go_0) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertTimeEnd);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryOrderField *_wrap_new_CThostFtdcQryOrderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryOrderField *result = 0 ;
  CThostFtdcQryOrderField *_swig_go_result;
  
  
  result = (CThostFtdcQryOrderField *)new CThostFtdcQryOrderField();
  *(CThostFtdcQryOrderField **)&_swig_go_result = (CThostFtdcQryOrderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryOrderField_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderField *_swig_go_0) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  
  arg1 = *(CThostFtdcQryOrderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryTradeField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTradeField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradeField *_swig_go_0) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryTradeField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTradeField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradeField *_swig_go_0) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryTradeField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTradeField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradeField *_swig_go_0) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryTradeField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTradeField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradeField *_swig_go_0) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryTradeField_TradeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeID, (const char *)arg2, 21-1);
      arg1->TradeID[21-1] = 0;
    } else {
      arg1->TradeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTradeField_TradeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradeField *_swig_go_0) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryTradeField_TradeTimeStart_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTimeStart, (const char *)arg2, 9-1);
      arg1->TradeTimeStart[9-1] = 0;
    } else {
      arg1->TradeTimeStart[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTradeField_TradeTimeStart_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradeField *_swig_go_0) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTimeStart);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryTradeField_TradeTimeEnd_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTradeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTimeEnd, (const char *)arg2, 9-1);
      arg1->TradeTimeEnd[9-1] = 0;
    } else {
      arg1->TradeTimeEnd[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTradeField_TradeTimeEnd_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradeField *_swig_go_0) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTradeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTimeEnd);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryTradeField *_wrap_new_CThostFtdcQryTradeField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryTradeField *result = 0 ;
  CThostFtdcQryTradeField *_swig_go_result;
  
  
  result = (CThostFtdcQryTradeField *)new CThostFtdcQryTradeField();
  *(CThostFtdcQryTradeField **)&_swig_go_result = (CThostFtdcQryTradeField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryTradeField_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradeField *_swig_go_0) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  
  arg1 = *(CThostFtdcQryTradeField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryInvestorPositionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorPositionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInvestorPositionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInvestorPositionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorPositionField *_swig_go_0) {
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInvestorPositionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInvestorPositionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorPositionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInvestorPositionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInvestorPositionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorPositionField *_swig_go_0) {
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInvestorPositionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInvestorPositionField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorPositionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInvestorPositionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInvestorPositionField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorPositionField *_swig_go_0) {
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInvestorPositionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryInvestorPositionField *_wrap_new_CThostFtdcQryInvestorPositionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryInvestorPositionField *result = 0 ;
  CThostFtdcQryInvestorPositionField *_swig_go_result;
  
  
  result = (CThostFtdcQryInvestorPositionField *)new CThostFtdcQryInvestorPositionField();
  *(CThostFtdcQryInvestorPositionField **)&_swig_go_result = (CThostFtdcQryInvestorPositionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryInvestorPositionField_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorPositionField *_swig_go_0) {
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  
  arg1 = *(CThostFtdcQryInvestorPositionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryTradingAccountField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTradingAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTradingAccountField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingAccountField *_swig_go_0) {
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTradingAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryTradingAccountField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTradingAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTradingAccountField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingAccountField *_swig_go_0) {
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTradingAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryTradingAccountField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTradingAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTradingAccountField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingAccountField *_swig_go_0) {
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTradingAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryTradingAccountField *_wrap_new_CThostFtdcQryTradingAccountField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryTradingAccountField *result = 0 ;
  CThostFtdcQryTradingAccountField *_swig_go_result;
  
  
  result = (CThostFtdcQryTradingAccountField *)new CThostFtdcQryTradingAccountField();
  *(CThostFtdcQryTradingAccountField **)&_swig_go_result = (CThostFtdcQryTradingAccountField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryTradingAccountField_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingAccountField *_swig_go_0) {
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  
  arg1 = *(CThostFtdcQryTradingAccountField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryInvestorField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInvestorField *arg1 = (CThostFtdcQryInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInvestorField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorField *_swig_go_0) {
  CThostFtdcQryInvestorField *arg1 = (CThostFtdcQryInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInvestorField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInvestorField *arg1 = (CThostFtdcQryInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInvestorField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInvestorField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorField *_swig_go_0) {
  CThostFtdcQryInvestorField *arg1 = (CThostFtdcQryInvestorField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInvestorField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryInvestorField *_wrap_new_CThostFtdcQryInvestorField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryInvestorField *result = 0 ;
  CThostFtdcQryInvestorField *_swig_go_result;
  
  
  result = (CThostFtdcQryInvestorField *)new CThostFtdcQryInvestorField();
  *(CThostFtdcQryInvestorField **)&_swig_go_result = (CThostFtdcQryInvestorField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryInvestorField_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorField *_swig_go_0) {
  CThostFtdcQryInvestorField *arg1 = (CThostFtdcQryInvestorField *) 0 ;
  
  arg1 = *(CThostFtdcQryInvestorField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryTradingCodeField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingCodeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTradingCodeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTradingCodeField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingCodeField *_swig_go_0) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTradingCodeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryTradingCodeField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingCodeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTradingCodeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTradingCodeField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingCodeField *_swig_go_0) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTradingCodeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryTradingCodeField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingCodeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTradingCodeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTradingCodeField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingCodeField *_swig_go_0) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTradingCodeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryTradingCodeField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingCodeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTradingCodeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTradingCodeField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingCodeField *_swig_go_0) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTradingCodeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryTradingCodeField_ClientIDType_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingCodeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  TThostFtdcClientIDTypeType arg2 ;
  
  arg1 = *(CThostFtdcQryTradingCodeField **)&_swig_go_0; 
  arg2 = (TThostFtdcClientIDTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->ClientIDType = arg2;
  
}


char _wrap_CThostFtdcQryTradingCodeField_ClientIDType_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingCodeField *_swig_go_0) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  TThostFtdcClientIDTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQryTradingCodeField **)&_swig_go_0; 
  
  result = (TThostFtdcClientIDTypeType) ((arg1)->ClientIDType);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcQryTradingCodeField *_wrap_new_CThostFtdcQryTradingCodeField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryTradingCodeField *result = 0 ;
  CThostFtdcQryTradingCodeField *_swig_go_result;
  
  
  result = (CThostFtdcQryTradingCodeField *)new CThostFtdcQryTradingCodeField();
  *(CThostFtdcQryTradingCodeField **)&_swig_go_result = (CThostFtdcQryTradingCodeField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryTradingCodeField_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingCodeField *_swig_go_0) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  
  arg1 = *(CThostFtdcQryTradingCodeField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryInvestorGroupField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorGroupField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInvestorGroupField *arg1 = (CThostFtdcQryInvestorGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInvestorGroupField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInvestorGroupField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorGroupField *_swig_go_0) {
  CThostFtdcQryInvestorGroupField *arg1 = (CThostFtdcQryInvestorGroupField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInvestorGroupField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryInvestorGroupField *_wrap_new_CThostFtdcQryInvestorGroupField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryInvestorGroupField *result = 0 ;
  CThostFtdcQryInvestorGroupField *_swig_go_result;
  
  
  result = (CThostFtdcQryInvestorGroupField *)new CThostFtdcQryInvestorGroupField();
  *(CThostFtdcQryInvestorGroupField **)&_swig_go_result = (CThostFtdcQryInvestorGroupField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryInvestorGroupField_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorGroupField *_swig_go_0) {
  CThostFtdcQryInvestorGroupField *arg1 = (CThostFtdcQryInvestorGroupField *) 0 ;
  
  arg1 = *(CThostFtdcQryInvestorGroupField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryInstrumentMarginRateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentMarginRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInstrumentMarginRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInstrumentMarginRateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInstrumentMarginRateField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentMarginRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInstrumentMarginRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInstrumentMarginRateField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInstrumentMarginRateField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentMarginRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInstrumentMarginRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInstrumentMarginRateField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInstrumentMarginRateField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentMarginRateField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcQryInstrumentMarginRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcQryInstrumentMarginRateField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQryInstrumentMarginRateField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcQryInstrumentMarginRateField *_wrap_new_CThostFtdcQryInstrumentMarginRateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryInstrumentMarginRateField *result = 0 ;
  CThostFtdcQryInstrumentMarginRateField *_swig_go_result;
  
  
  result = (CThostFtdcQryInstrumentMarginRateField *)new CThostFtdcQryInstrumentMarginRateField();
  *(CThostFtdcQryInstrumentMarginRateField **)&_swig_go_result = (CThostFtdcQryInstrumentMarginRateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryInstrumentMarginRateField_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentMarginRateField *_swig_go_0) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  
  arg1 = *(CThostFtdcQryInstrumentMarginRateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryInstrumentCommissionRateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentCommissionRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInstrumentCommissionRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInstrumentCommissionRateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInstrumentCommissionRateField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentCommissionRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInstrumentCommissionRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInstrumentCommissionRateField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInstrumentCommissionRateField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentCommissionRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInstrumentCommissionRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInstrumentCommissionRateField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryInstrumentCommissionRateField *_wrap_new_CThostFtdcQryInstrumentCommissionRateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryInstrumentCommissionRateField *result = 0 ;
  CThostFtdcQryInstrumentCommissionRateField *_swig_go_result;
  
  
  result = (CThostFtdcQryInstrumentCommissionRateField *)new CThostFtdcQryInstrumentCommissionRateField();
  *(CThostFtdcQryInstrumentCommissionRateField **)&_swig_go_result = (CThostFtdcQryInstrumentCommissionRateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryInstrumentCommissionRateField_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  
  arg1 = *(CThostFtdcQryInstrumentCommissionRateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryInstrumentTradingRightField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentTradingRightField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInstrumentTradingRightField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInstrumentTradingRightField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentTradingRightField *_swig_go_0) {
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInstrumentTradingRightField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInstrumentTradingRightField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentTradingRightField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInstrumentTradingRightField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInstrumentTradingRightField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentTradingRightField *_swig_go_0) {
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInstrumentTradingRightField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInstrumentTradingRightField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentTradingRightField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInstrumentTradingRightField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInstrumentTradingRightField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentTradingRightField *_swig_go_0) {
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInstrumentTradingRightField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryInstrumentTradingRightField *_wrap_new_CThostFtdcQryInstrumentTradingRightField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryInstrumentTradingRightField *result = 0 ;
  CThostFtdcQryInstrumentTradingRightField *_swig_go_result;
  
  
  result = (CThostFtdcQryInstrumentTradingRightField *)new CThostFtdcQryInstrumentTradingRightField();
  *(CThostFtdcQryInstrumentTradingRightField **)&_swig_go_result = (CThostFtdcQryInstrumentTradingRightField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryInstrumentTradingRightField_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentTradingRightField *_swig_go_0) {
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  
  arg1 = *(CThostFtdcQryInstrumentTradingRightField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryBrokerField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryBrokerField *arg1 = (CThostFtdcQryBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryBrokerField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryBrokerField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerField *_swig_go_0) {
  CThostFtdcQryBrokerField *arg1 = (CThostFtdcQryBrokerField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryBrokerField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryBrokerField *_wrap_new_CThostFtdcQryBrokerField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryBrokerField *result = 0 ;
  CThostFtdcQryBrokerField *_swig_go_result;
  
  
  result = (CThostFtdcQryBrokerField *)new CThostFtdcQryBrokerField();
  *(CThostFtdcQryBrokerField **)&_swig_go_result = (CThostFtdcQryBrokerField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryBrokerField_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerField *_swig_go_0) {
  CThostFtdcQryBrokerField *arg1 = (CThostFtdcQryBrokerField *) 0 ;
  
  arg1 = *(CThostFtdcQryBrokerField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryTraderField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTraderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTraderField *arg1 = (CThostFtdcQryTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTraderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTraderField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTraderField *_swig_go_0) {
  CThostFtdcQryTraderField *arg1 = (CThostFtdcQryTraderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTraderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryTraderField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTraderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTraderField *arg1 = (CThostFtdcQryTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTraderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTraderField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTraderField *_swig_go_0) {
  CThostFtdcQryTraderField *arg1 = (CThostFtdcQryTraderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTraderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryTraderField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTraderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTraderField *arg1 = (CThostFtdcQryTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTraderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTraderField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTraderField *_swig_go_0) {
  CThostFtdcQryTraderField *arg1 = (CThostFtdcQryTraderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTraderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryTraderField *_wrap_new_CThostFtdcQryTraderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryTraderField *result = 0 ;
  CThostFtdcQryTraderField *_swig_go_result;
  
  
  result = (CThostFtdcQryTraderField *)new CThostFtdcQryTraderField();
  *(CThostFtdcQryTraderField **)&_swig_go_result = (CThostFtdcQryTraderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryTraderField_goctp_ef6abdc493ff8ae2(CThostFtdcQryTraderField *_swig_go_0) {
  CThostFtdcQryTraderField *arg1 = (CThostFtdcQryTraderField *) 0 ;
  
  arg1 = *(CThostFtdcQryTraderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQrySuperUserFunctionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQrySuperUserFunctionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQrySuperUserFunctionField *arg1 = (CThostFtdcQrySuperUserFunctionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQrySuperUserFunctionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQrySuperUserFunctionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQrySuperUserFunctionField *_swig_go_0) {
  CThostFtdcQrySuperUserFunctionField *arg1 = (CThostFtdcQrySuperUserFunctionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQrySuperUserFunctionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQrySuperUserFunctionField *_wrap_new_CThostFtdcQrySuperUserFunctionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQrySuperUserFunctionField *result = 0 ;
  CThostFtdcQrySuperUserFunctionField *_swig_go_result;
  
  
  result = (CThostFtdcQrySuperUserFunctionField *)new CThostFtdcQrySuperUserFunctionField();
  *(CThostFtdcQrySuperUserFunctionField **)&_swig_go_result = (CThostFtdcQrySuperUserFunctionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQrySuperUserFunctionField_goctp_ef6abdc493ff8ae2(CThostFtdcQrySuperUserFunctionField *_swig_go_0) {
  CThostFtdcQrySuperUserFunctionField *arg1 = (CThostFtdcQrySuperUserFunctionField *) 0 ;
  
  arg1 = *(CThostFtdcQrySuperUserFunctionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryUserSessionField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryUserSessionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcQryUserSessionField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcQryUserSessionField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryUserSessionField *_swig_go_0) {
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQryUserSessionField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryUserSessionField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryUserSessionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcQryUserSessionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcQryUserSessionField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryUserSessionField *_swig_go_0) {
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQryUserSessionField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryUserSessionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryUserSessionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryUserSessionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryUserSessionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryUserSessionField *_swig_go_0) {
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryUserSessionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryUserSessionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryUserSessionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryUserSessionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryUserSessionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryUserSessionField *_swig_go_0) {
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryUserSessionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryUserSessionField *_wrap_new_CThostFtdcQryUserSessionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryUserSessionField *result = 0 ;
  CThostFtdcQryUserSessionField *_swig_go_result;
  
  
  result = (CThostFtdcQryUserSessionField *)new CThostFtdcQryUserSessionField();
  *(CThostFtdcQryUserSessionField **)&_swig_go_result = (CThostFtdcQryUserSessionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryUserSessionField_goctp_ef6abdc493ff8ae2(CThostFtdcQryUserSessionField *_swig_go_0) {
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  
  arg1 = *(CThostFtdcQryUserSessionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryPartBrokerField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryPartBrokerField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryPartBrokerField *arg1 = (CThostFtdcQryPartBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryPartBrokerField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryPartBrokerField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryPartBrokerField *_swig_go_0) {
  CThostFtdcQryPartBrokerField *arg1 = (CThostFtdcQryPartBrokerField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryPartBrokerField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryPartBrokerField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryPartBrokerField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryPartBrokerField *arg1 = (CThostFtdcQryPartBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryPartBrokerField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryPartBrokerField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryPartBrokerField *_swig_go_0) {
  CThostFtdcQryPartBrokerField *arg1 = (CThostFtdcQryPartBrokerField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryPartBrokerField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryPartBrokerField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryPartBrokerField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryPartBrokerField *arg1 = (CThostFtdcQryPartBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryPartBrokerField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryPartBrokerField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryPartBrokerField *_swig_go_0) {
  CThostFtdcQryPartBrokerField *arg1 = (CThostFtdcQryPartBrokerField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryPartBrokerField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryPartBrokerField *_wrap_new_CThostFtdcQryPartBrokerField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryPartBrokerField *result = 0 ;
  CThostFtdcQryPartBrokerField *_swig_go_result;
  
  
  result = (CThostFtdcQryPartBrokerField *)new CThostFtdcQryPartBrokerField();
  *(CThostFtdcQryPartBrokerField **)&_swig_go_result = (CThostFtdcQryPartBrokerField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryPartBrokerField_goctp_ef6abdc493ff8ae2(CThostFtdcQryPartBrokerField *_swig_go_0) {
  CThostFtdcQryPartBrokerField *arg1 = (CThostFtdcQryPartBrokerField *) 0 ;
  
  arg1 = *(CThostFtdcQryPartBrokerField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryFrontStatusField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryFrontStatusField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQryFrontStatusField *arg1 = (CThostFtdcQryFrontStatusField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcQryFrontStatusField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcQryFrontStatusField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryFrontStatusField *_swig_go_0) {
  CThostFtdcQryFrontStatusField *arg1 = (CThostFtdcQryFrontStatusField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQryFrontStatusField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcQryFrontStatusField *_wrap_new_CThostFtdcQryFrontStatusField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryFrontStatusField *result = 0 ;
  CThostFtdcQryFrontStatusField *_swig_go_result;
  
  
  result = (CThostFtdcQryFrontStatusField *)new CThostFtdcQryFrontStatusField();
  *(CThostFtdcQryFrontStatusField **)&_swig_go_result = (CThostFtdcQryFrontStatusField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryFrontStatusField_goctp_ef6abdc493ff8ae2(CThostFtdcQryFrontStatusField *_swig_go_0) {
  CThostFtdcQryFrontStatusField *arg1 = (CThostFtdcQryFrontStatusField *) 0 ;
  
  arg1 = *(CThostFtdcQryFrontStatusField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryExchangeOrderField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeOrderField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeOrderField *_swig_go_0) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeOrderField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeOrderField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeOrderField *_swig_go_0) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeOrderField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeOrderField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeOrderField *_swig_go_0) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeOrderField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeOrderField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeOrderField *_swig_go_0) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeOrderField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeOrderField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeOrderField *_swig_go_0) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryExchangeOrderField *_wrap_new_CThostFtdcQryExchangeOrderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryExchangeOrderField *result = 0 ;
  CThostFtdcQryExchangeOrderField *_swig_go_result;
  
  
  result = (CThostFtdcQryExchangeOrderField *)new CThostFtdcQryExchangeOrderField();
  *(CThostFtdcQryExchangeOrderField **)&_swig_go_result = (CThostFtdcQryExchangeOrderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryExchangeOrderField_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeOrderField *_swig_go_0) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  
  arg1 = *(CThostFtdcQryExchangeOrderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryOrderActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryOrderActionField *arg1 = (CThostFtdcQryOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryOrderActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderActionField *_swig_go_0) {
  CThostFtdcQryOrderActionField *arg1 = (CThostFtdcQryOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryOrderActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryOrderActionField *arg1 = (CThostFtdcQryOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryOrderActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderActionField *_swig_go_0) {
  CThostFtdcQryOrderActionField *arg1 = (CThostFtdcQryOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryOrderActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryOrderActionField *arg1 = (CThostFtdcQryOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryOrderActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderActionField *_swig_go_0) {
  CThostFtdcQryOrderActionField *arg1 = (CThostFtdcQryOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryOrderActionField *_wrap_new_CThostFtdcQryOrderActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryOrderActionField *result = 0 ;
  CThostFtdcQryOrderActionField *_swig_go_result;
  
  
  result = (CThostFtdcQryOrderActionField *)new CThostFtdcQryOrderActionField();
  *(CThostFtdcQryOrderActionField **)&_swig_go_result = (CThostFtdcQryOrderActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryOrderActionField_goctp_ef6abdc493ff8ae2(CThostFtdcQryOrderActionField *_swig_go_0) {
  CThostFtdcQryOrderActionField *arg1 = (CThostFtdcQryOrderActionField *) 0 ;
  
  arg1 = *(CThostFtdcQryOrderActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryExchangeOrderActionField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeOrderActionField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeOrderActionField *_swig_go_0) {
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeOrderActionField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeOrderActionField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeOrderActionField *_swig_go_0) {
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeOrderActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeOrderActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeOrderActionField *_swig_go_0) {
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeOrderActionField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeOrderActionField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeOrderActionField *_swig_go_0) {
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryExchangeOrderActionField *_wrap_new_CThostFtdcQryExchangeOrderActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryExchangeOrderActionField *result = 0 ;
  CThostFtdcQryExchangeOrderActionField *_swig_go_result;
  
  
  result = (CThostFtdcQryExchangeOrderActionField *)new CThostFtdcQryExchangeOrderActionField();
  *(CThostFtdcQryExchangeOrderActionField **)&_swig_go_result = (CThostFtdcQryExchangeOrderActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryExchangeOrderActionField_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeOrderActionField *_swig_go_0) {
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  
  arg1 = *(CThostFtdcQryExchangeOrderActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQrySuperUserField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQrySuperUserField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQrySuperUserField *arg1 = (CThostFtdcQrySuperUserField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQrySuperUserField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQrySuperUserField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQrySuperUserField *_swig_go_0) {
  CThostFtdcQrySuperUserField *arg1 = (CThostFtdcQrySuperUserField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQrySuperUserField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQrySuperUserField *_wrap_new_CThostFtdcQrySuperUserField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQrySuperUserField *result = 0 ;
  CThostFtdcQrySuperUserField *_swig_go_result;
  
  
  result = (CThostFtdcQrySuperUserField *)new CThostFtdcQrySuperUserField();
  *(CThostFtdcQrySuperUserField **)&_swig_go_result = (CThostFtdcQrySuperUserField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQrySuperUserField_goctp_ef6abdc493ff8ae2(CThostFtdcQrySuperUserField *_swig_go_0) {
  CThostFtdcQrySuperUserField *arg1 = (CThostFtdcQrySuperUserField *) 0 ;
  
  arg1 = *(CThostFtdcQrySuperUserField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryExchangeField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeField *arg1 = (CThostFtdcQryExchangeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeField *_swig_go_0) {
  CThostFtdcQryExchangeField *arg1 = (CThostFtdcQryExchangeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryExchangeField *_wrap_new_CThostFtdcQryExchangeField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryExchangeField *result = 0 ;
  CThostFtdcQryExchangeField *_swig_go_result;
  
  
  result = (CThostFtdcQryExchangeField *)new CThostFtdcQryExchangeField();
  *(CThostFtdcQryExchangeField **)&_swig_go_result = (CThostFtdcQryExchangeField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryExchangeField_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeField *_swig_go_0) {
  CThostFtdcQryExchangeField *arg1 = (CThostFtdcQryExchangeField *) 0 ;
  
  arg1 = *(CThostFtdcQryExchangeField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryProductField_ProductID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryProductField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryProductField *arg1 = (CThostFtdcQryProductField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryProductField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 31-1);
      arg1->ProductID[31-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryProductField_ProductID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryProductField *_swig_go_0) {
  CThostFtdcQryProductField *arg1 = (CThostFtdcQryProductField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryProductField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ProductID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryProductField_ProductClass_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryProductField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQryProductField *arg1 = (CThostFtdcQryProductField *) 0 ;
  TThostFtdcProductClassType arg2 ;
  
  arg1 = *(CThostFtdcQryProductField **)&_swig_go_0; 
  arg2 = (TThostFtdcProductClassType)_swig_go_1; 
  
  if (arg1) (arg1)->ProductClass = arg2;
  
}


char _wrap_CThostFtdcQryProductField_ProductClass_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryProductField *_swig_go_0) {
  CThostFtdcQryProductField *arg1 = (CThostFtdcQryProductField *) 0 ;
  TThostFtdcProductClassType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQryProductField **)&_swig_go_0; 
  
  result = (TThostFtdcProductClassType) ((arg1)->ProductClass);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcQryProductField *_wrap_new_CThostFtdcQryProductField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryProductField *result = 0 ;
  CThostFtdcQryProductField *_swig_go_result;
  
  
  result = (CThostFtdcQryProductField *)new CThostFtdcQryProductField();
  *(CThostFtdcQryProductField **)&_swig_go_result = (CThostFtdcQryProductField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryProductField_goctp_ef6abdc493ff8ae2(CThostFtdcQryProductField *_swig_go_0) {
  CThostFtdcQryProductField *arg1 = (CThostFtdcQryProductField *) 0 ;
  
  arg1 = *(CThostFtdcQryProductField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryInstrumentField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInstrumentField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInstrumentField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentField *_swig_go_0) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInstrumentField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInstrumentField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInstrumentField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInstrumentField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentField *_swig_go_0) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInstrumentField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInstrumentField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInstrumentField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInstrumentField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentField *_swig_go_0) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInstrumentField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInstrumentField_ProductID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInstrumentField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 31-1);
      arg1->ProductID[31-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInstrumentField_ProductID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentField *_swig_go_0) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInstrumentField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ProductID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryInstrumentField *_wrap_new_CThostFtdcQryInstrumentField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryInstrumentField *result = 0 ;
  CThostFtdcQryInstrumentField *_swig_go_result;
  
  
  result = (CThostFtdcQryInstrumentField *)new CThostFtdcQryInstrumentField();
  *(CThostFtdcQryInstrumentField **)&_swig_go_result = (CThostFtdcQryInstrumentField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryInstrumentField_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentField *_swig_go_0) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  
  arg1 = *(CThostFtdcQryInstrumentField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryDepthMarketDataField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryDepthMarketDataField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryDepthMarketDataField *arg1 = (CThostFtdcQryDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryDepthMarketDataField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryDepthMarketDataField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryDepthMarketDataField *_swig_go_0) {
  CThostFtdcQryDepthMarketDataField *arg1 = (CThostFtdcQryDepthMarketDataField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryDepthMarketDataField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryDepthMarketDataField *_wrap_new_CThostFtdcQryDepthMarketDataField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryDepthMarketDataField *result = 0 ;
  CThostFtdcQryDepthMarketDataField *_swig_go_result;
  
  
  result = (CThostFtdcQryDepthMarketDataField *)new CThostFtdcQryDepthMarketDataField();
  *(CThostFtdcQryDepthMarketDataField **)&_swig_go_result = (CThostFtdcQryDepthMarketDataField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryDepthMarketDataField_goctp_ef6abdc493ff8ae2(CThostFtdcQryDepthMarketDataField *_swig_go_0) {
  CThostFtdcQryDepthMarketDataField *arg1 = (CThostFtdcQryDepthMarketDataField *) 0 ;
  
  arg1 = *(CThostFtdcQryDepthMarketDataField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryBrokerUserField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerUserField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryBrokerUserField *arg1 = (CThostFtdcQryBrokerUserField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryBrokerUserField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryBrokerUserField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerUserField *_swig_go_0) {
  CThostFtdcQryBrokerUserField *arg1 = (CThostFtdcQryBrokerUserField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryBrokerUserField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryBrokerUserField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerUserField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryBrokerUserField *arg1 = (CThostFtdcQryBrokerUserField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryBrokerUserField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryBrokerUserField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerUserField *_swig_go_0) {
  CThostFtdcQryBrokerUserField *arg1 = (CThostFtdcQryBrokerUserField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryBrokerUserField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryBrokerUserField *_wrap_new_CThostFtdcQryBrokerUserField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryBrokerUserField *result = 0 ;
  CThostFtdcQryBrokerUserField *_swig_go_result;
  
  
  result = (CThostFtdcQryBrokerUserField *)new CThostFtdcQryBrokerUserField();
  *(CThostFtdcQryBrokerUserField **)&_swig_go_result = (CThostFtdcQryBrokerUserField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryBrokerUserField_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerUserField *_swig_go_0) {
  CThostFtdcQryBrokerUserField *arg1 = (CThostFtdcQryBrokerUserField *) 0 ;
  
  arg1 = *(CThostFtdcQryBrokerUserField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryBrokerUserFunctionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerUserFunctionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryBrokerUserFunctionField *arg1 = (CThostFtdcQryBrokerUserFunctionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryBrokerUserFunctionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryBrokerUserFunctionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerUserFunctionField *_swig_go_0) {
  CThostFtdcQryBrokerUserFunctionField *arg1 = (CThostFtdcQryBrokerUserFunctionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryBrokerUserFunctionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryBrokerUserFunctionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerUserFunctionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryBrokerUserFunctionField *arg1 = (CThostFtdcQryBrokerUserFunctionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryBrokerUserFunctionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryBrokerUserFunctionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerUserFunctionField *_swig_go_0) {
  CThostFtdcQryBrokerUserFunctionField *arg1 = (CThostFtdcQryBrokerUserFunctionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryBrokerUserFunctionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryBrokerUserFunctionField *_wrap_new_CThostFtdcQryBrokerUserFunctionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryBrokerUserFunctionField *result = 0 ;
  CThostFtdcQryBrokerUserFunctionField *_swig_go_result;
  
  
  result = (CThostFtdcQryBrokerUserFunctionField *)new CThostFtdcQryBrokerUserFunctionField();
  *(CThostFtdcQryBrokerUserFunctionField **)&_swig_go_result = (CThostFtdcQryBrokerUserFunctionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryBrokerUserFunctionField_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerUserFunctionField *_swig_go_0) {
  CThostFtdcQryBrokerUserFunctionField *arg1 = (CThostFtdcQryBrokerUserFunctionField *) 0 ;
  
  arg1 = *(CThostFtdcQryBrokerUserFunctionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryTraderOfferField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTraderOfferField *arg1 = (CThostFtdcQryTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTraderOfferField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTraderOfferField *_swig_go_0) {
  CThostFtdcQryTraderOfferField *arg1 = (CThostFtdcQryTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryTraderOfferField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTraderOfferField *arg1 = (CThostFtdcQryTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTraderOfferField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTraderOfferField *_swig_go_0) {
  CThostFtdcQryTraderOfferField *arg1 = (CThostFtdcQryTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryTraderOfferField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTraderOfferField *arg1 = (CThostFtdcQryTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTraderOfferField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTraderOfferField *_swig_go_0) {
  CThostFtdcQryTraderOfferField *arg1 = (CThostFtdcQryTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryTraderOfferField *_wrap_new_CThostFtdcQryTraderOfferField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryTraderOfferField *result = 0 ;
  CThostFtdcQryTraderOfferField *_swig_go_result;
  
  
  result = (CThostFtdcQryTraderOfferField *)new CThostFtdcQryTraderOfferField();
  *(CThostFtdcQryTraderOfferField **)&_swig_go_result = (CThostFtdcQryTraderOfferField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryTraderOfferField_goctp_ef6abdc493ff8ae2(CThostFtdcQryTraderOfferField *_swig_go_0) {
  CThostFtdcQryTraderOfferField *arg1 = (CThostFtdcQryTraderOfferField *) 0 ;
  
  arg1 = *(CThostFtdcQryTraderOfferField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQrySyncDepositField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQrySyncDepositField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQrySyncDepositField *arg1 = (CThostFtdcQrySyncDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQrySyncDepositField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQrySyncDepositField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQrySyncDepositField *_swig_go_0) {
  CThostFtdcQrySyncDepositField *arg1 = (CThostFtdcQrySyncDepositField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQrySyncDepositField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQrySyncDepositField_DepositSeqNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcQrySyncDepositField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQrySyncDepositField *arg1 = (CThostFtdcQrySyncDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQrySyncDepositField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DepositSeqNo, (const char *)arg2, 15-1);
      arg1->DepositSeqNo[15-1] = 0;
    } else {
      arg1->DepositSeqNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQrySyncDepositField_DepositSeqNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcQrySyncDepositField *_swig_go_0) {
  CThostFtdcQrySyncDepositField *arg1 = (CThostFtdcQrySyncDepositField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQrySyncDepositField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DepositSeqNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQrySyncDepositField *_wrap_new_CThostFtdcQrySyncDepositField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQrySyncDepositField *result = 0 ;
  CThostFtdcQrySyncDepositField *_swig_go_result;
  
  
  result = (CThostFtdcQrySyncDepositField *)new CThostFtdcQrySyncDepositField();
  *(CThostFtdcQrySyncDepositField **)&_swig_go_result = (CThostFtdcQrySyncDepositField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQrySyncDepositField_goctp_ef6abdc493ff8ae2(CThostFtdcQrySyncDepositField *_swig_go_0) {
  CThostFtdcQrySyncDepositField *arg1 = (CThostFtdcQrySyncDepositField *) 0 ;
  
  arg1 = *(CThostFtdcQrySyncDepositField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQrySettlementInfoField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQrySettlementInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQrySettlementInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQrySettlementInfoField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQrySettlementInfoField *_swig_go_0) {
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQrySettlementInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQrySettlementInfoField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQrySettlementInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQrySettlementInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQrySettlementInfoField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQrySettlementInfoField *_swig_go_0) {
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQrySettlementInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQrySettlementInfoField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcQrySettlementInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQrySettlementInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQrySettlementInfoField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcQrySettlementInfoField *_swig_go_0) {
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQrySettlementInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQrySettlementInfoField *_wrap_new_CThostFtdcQrySettlementInfoField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQrySettlementInfoField *result = 0 ;
  CThostFtdcQrySettlementInfoField *_swig_go_result;
  
  
  result = (CThostFtdcQrySettlementInfoField *)new CThostFtdcQrySettlementInfoField();
  *(CThostFtdcQrySettlementInfoField **)&_swig_go_result = (CThostFtdcQrySettlementInfoField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQrySettlementInfoField_goctp_ef6abdc493ff8ae2(CThostFtdcQrySettlementInfoField *_swig_go_0) {
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  
  arg1 = *(CThostFtdcQrySettlementInfoField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryExchangeMarginRateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeMarginRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeMarginRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeMarginRateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeMarginRateField *_swig_go_0) {
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeMarginRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeMarginRateField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeMarginRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeMarginRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeMarginRateField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeMarginRateField *_swig_go_0) {
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeMarginRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeMarginRateField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeMarginRateField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeMarginRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcQryExchangeMarginRateField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeMarginRateField *_swig_go_0) {
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeMarginRateField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcQryExchangeMarginRateField *_wrap_new_CThostFtdcQryExchangeMarginRateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryExchangeMarginRateField *result = 0 ;
  CThostFtdcQryExchangeMarginRateField *_swig_go_result;
  
  
  result = (CThostFtdcQryExchangeMarginRateField *)new CThostFtdcQryExchangeMarginRateField();
  *(CThostFtdcQryExchangeMarginRateField **)&_swig_go_result = (CThostFtdcQryExchangeMarginRateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryExchangeMarginRateField_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeMarginRateField *_swig_go_0) {
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  
  arg1 = *(CThostFtdcQryExchangeMarginRateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryExchangeMarginRateAdjustField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeMarginRateAdjustField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeMarginRateAdjustField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeMarginRateAdjustField *_swig_go_0) {
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeMarginRateAdjustField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeMarginRateAdjustField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeMarginRateAdjustField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeMarginRateAdjustField *_swig_go_0) {
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeMarginRateAdjustField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeMarginRateAdjustField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeMarginRateAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcQryExchangeMarginRateAdjustField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeMarginRateAdjustField *_swig_go_0) {
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcQryExchangeMarginRateAdjustField *_wrap_new_CThostFtdcQryExchangeMarginRateAdjustField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryExchangeMarginRateAdjustField *result = 0 ;
  CThostFtdcQryExchangeMarginRateAdjustField *_swig_go_result;
  
  
  result = (CThostFtdcQryExchangeMarginRateAdjustField *)new CThostFtdcQryExchangeMarginRateAdjustField();
  *(CThostFtdcQryExchangeMarginRateAdjustField **)&_swig_go_result = (CThostFtdcQryExchangeMarginRateAdjustField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryExchangeMarginRateAdjustField_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeMarginRateAdjustField *_swig_go_0) {
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  
  arg1 = *(CThostFtdcQryExchangeMarginRateAdjustField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryExchangeRateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeRateField *arg1 = (CThostFtdcQryExchangeRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeRateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeRateField *_swig_go_0) {
  CThostFtdcQryExchangeRateField *arg1 = (CThostFtdcQryExchangeRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeRateField_FromCurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeRateField *arg1 = (CThostFtdcQryExchangeRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FromCurrencyID, (const char *)arg2, 4-1);
      arg1->FromCurrencyID[4-1] = 0;
    } else {
      arg1->FromCurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeRateField_FromCurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeRateField *_swig_go_0) {
  CThostFtdcQryExchangeRateField *arg1 = (CThostFtdcQryExchangeRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->FromCurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeRateField_ToCurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeRateField *arg1 = (CThostFtdcQryExchangeRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ToCurrencyID, (const char *)arg2, 4-1);
      arg1->ToCurrencyID[4-1] = 0;
    } else {
      arg1->ToCurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeRateField_ToCurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeRateField *_swig_go_0) {
  CThostFtdcQryExchangeRateField *arg1 = (CThostFtdcQryExchangeRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ToCurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryExchangeRateField *_wrap_new_CThostFtdcQryExchangeRateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryExchangeRateField *result = 0 ;
  CThostFtdcQryExchangeRateField *_swig_go_result;
  
  
  result = (CThostFtdcQryExchangeRateField *)new CThostFtdcQryExchangeRateField();
  *(CThostFtdcQryExchangeRateField **)&_swig_go_result = (CThostFtdcQryExchangeRateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryExchangeRateField_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeRateField *_swig_go_0) {
  CThostFtdcQryExchangeRateField *arg1 = (CThostFtdcQryExchangeRateField *) 0 ;
  
  arg1 = *(CThostFtdcQryExchangeRateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQrySyncFundMortgageField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQrySyncFundMortgageField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQrySyncFundMortgageField *arg1 = (CThostFtdcQrySyncFundMortgageField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQrySyncFundMortgageField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQrySyncFundMortgageField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQrySyncFundMortgageField *_swig_go_0) {
  CThostFtdcQrySyncFundMortgageField *arg1 = (CThostFtdcQrySyncFundMortgageField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQrySyncFundMortgageField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQrySyncFundMortgageField_MortgageSeqNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcQrySyncFundMortgageField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQrySyncFundMortgageField *arg1 = (CThostFtdcQrySyncFundMortgageField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQrySyncFundMortgageField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MortgageSeqNo, (const char *)arg2, 15-1);
      arg1->MortgageSeqNo[15-1] = 0;
    } else {
      arg1->MortgageSeqNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQrySyncFundMortgageField_MortgageSeqNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcQrySyncFundMortgageField *_swig_go_0) {
  CThostFtdcQrySyncFundMortgageField *arg1 = (CThostFtdcQrySyncFundMortgageField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQrySyncFundMortgageField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MortgageSeqNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQrySyncFundMortgageField *_wrap_new_CThostFtdcQrySyncFundMortgageField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQrySyncFundMortgageField *result = 0 ;
  CThostFtdcQrySyncFundMortgageField *_swig_go_result;
  
  
  result = (CThostFtdcQrySyncFundMortgageField *)new CThostFtdcQrySyncFundMortgageField();
  *(CThostFtdcQrySyncFundMortgageField **)&_swig_go_result = (CThostFtdcQrySyncFundMortgageField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQrySyncFundMortgageField_goctp_ef6abdc493ff8ae2(CThostFtdcQrySyncFundMortgageField *_swig_go_0) {
  CThostFtdcQrySyncFundMortgageField *arg1 = (CThostFtdcQrySyncFundMortgageField *) 0 ;
  
  arg1 = *(CThostFtdcQrySyncFundMortgageField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryHisOrderField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryHisOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryHisOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryHisOrderField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryHisOrderField *_swig_go_0) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryHisOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryHisOrderField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryHisOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryHisOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryHisOrderField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryHisOrderField *_swig_go_0) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryHisOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryHisOrderField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryHisOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryHisOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryHisOrderField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryHisOrderField *_swig_go_0) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryHisOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryHisOrderField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryHisOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryHisOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryHisOrderField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryHisOrderField *_swig_go_0) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryHisOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryHisOrderField_OrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryHisOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryHisOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryHisOrderField_OrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryHisOrderField *_swig_go_0) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryHisOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryHisOrderField_InsertTimeStart_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryHisOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryHisOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeStart, (const char *)arg2, 9-1);
      arg1->InsertTimeStart[9-1] = 0;
    } else {
      arg1->InsertTimeStart[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryHisOrderField_InsertTimeStart_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryHisOrderField *_swig_go_0) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryHisOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertTimeStart);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryHisOrderField_InsertTimeEnd_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryHisOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryHisOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeEnd, (const char *)arg2, 9-1);
      arg1->InsertTimeEnd[9-1] = 0;
    } else {
      arg1->InsertTimeEnd[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryHisOrderField_InsertTimeEnd_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryHisOrderField *_swig_go_0) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryHisOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertTimeEnd);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryHisOrderField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryHisOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryHisOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryHisOrderField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryHisOrderField *_swig_go_0) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryHisOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryHisOrderField_SettlementID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryHisOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = *(CThostFtdcQryHisOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSettlementIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementID = arg2;
  
}


intgo _wrap_CThostFtdcQryHisOrderField_SettlementID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryHisOrderField *_swig_go_0) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  TThostFtdcSettlementIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQryHisOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcQryHisOrderField *_wrap_new_CThostFtdcQryHisOrderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryHisOrderField *result = 0 ;
  CThostFtdcQryHisOrderField *_swig_go_result;
  
  
  result = (CThostFtdcQryHisOrderField *)new CThostFtdcQryHisOrderField();
  *(CThostFtdcQryHisOrderField **)&_swig_go_result = (CThostFtdcQryHisOrderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryHisOrderField_goctp_ef6abdc493ff8ae2(CThostFtdcQryHisOrderField *_swig_go_0) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  
  arg1 = *(CThostFtdcQryHisOrderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcOptionInstrMiniMarginField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMiniMarginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrMiniMarginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOptionInstrMiniMarginField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMiniMarginField *_swig_go_0) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrMiniMarginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrMiniMarginField_InvestorRange_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMiniMarginField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrMiniMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcInvestorRangeType)_swig_go_1; 
  
  if (arg1) (arg1)->InvestorRange = arg2;
  
}


char _wrap_CThostFtdcOptionInstrMiniMarginField_InvestorRange_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMiniMarginField *_swig_go_0) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcInvestorRangeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrMiniMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrMiniMarginField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMiniMarginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrMiniMarginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOptionInstrMiniMarginField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMiniMarginField *_swig_go_0) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrMiniMarginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrMiniMarginField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMiniMarginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrMiniMarginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOptionInstrMiniMarginField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMiniMarginField *_swig_go_0) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrMiniMarginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrMiniMarginField_MinMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMiniMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrMiniMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->MinMargin = arg2;
  
}


double _wrap_CThostFtdcOptionInstrMiniMarginField_MinMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMiniMarginField *_swig_go_0) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrMiniMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->MinMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrMiniMarginField_ValueMethod_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMiniMarginField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcValueMethodType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrMiniMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcValueMethodType)_swig_go_1; 
  
  if (arg1) (arg1)->ValueMethod = arg2;
  
}


char _wrap_CThostFtdcOptionInstrMiniMarginField_ValueMethod_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMiniMarginField *_swig_go_0) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcValueMethodType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrMiniMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcValueMethodType) ((arg1)->ValueMethod);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrMiniMarginField_IsRelative_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMiniMarginField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrMiniMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsRelative = arg2;
  
}


intgo _wrap_CThostFtdcOptionInstrMiniMarginField_IsRelative_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMiniMarginField *_swig_go_0) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrMiniMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsRelative);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcOptionInstrMiniMarginField *_wrap_new_CThostFtdcOptionInstrMiniMarginField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcOptionInstrMiniMarginField *result = 0 ;
  CThostFtdcOptionInstrMiniMarginField *_swig_go_result;
  
  
  result = (CThostFtdcOptionInstrMiniMarginField *)new CThostFtdcOptionInstrMiniMarginField();
  *(CThostFtdcOptionInstrMiniMarginField **)&_swig_go_result = (CThostFtdcOptionInstrMiniMarginField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcOptionInstrMiniMarginField_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMiniMarginField *_swig_go_0) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  
  arg1 = *(CThostFtdcOptionInstrMiniMarginField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcOptionInstrMarginAdjustField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOptionInstrMarginAdjustField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrMarginAdjustField_InvestorRange_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcInvestorRangeType)_swig_go_1; 
  
  if (arg1) (arg1)->InvestorRange = arg2;
  
}


char _wrap_CThostFtdcOptionInstrMarginAdjustField_InvestorRange_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcInvestorRangeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrMarginAdjustField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOptionInstrMarginAdjustField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrMarginAdjustField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOptionInstrMarginAdjustField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->SShortMarginRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->SShortMarginRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->SShortMarginRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->SShortMarginRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->HShortMarginRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->HShortMarginRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->HShortMarginRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->HShortMarginRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->AShortMarginRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->AShortMarginRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->AShortMarginRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->AShortMarginRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrMarginAdjustField_IsRelative_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsRelative = arg2;
  
}


intgo _wrap_CThostFtdcOptionInstrMarginAdjustField_IsRelative_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsRelative);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->MShortMarginRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->MShortMarginRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->MShortMarginRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->MShortMarginRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcOptionInstrMarginAdjustField *_wrap_new_CThostFtdcOptionInstrMarginAdjustField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcOptionInstrMarginAdjustField *result = 0 ;
  CThostFtdcOptionInstrMarginAdjustField *_swig_go_result;
  
  
  result = (CThostFtdcOptionInstrMarginAdjustField *)new CThostFtdcOptionInstrMarginAdjustField();
  *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_result = (CThostFtdcOptionInstrMarginAdjustField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcOptionInstrMarginAdjustField_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrMarginAdjustField *_swig_go_0) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  
  arg1 = *(CThostFtdcOptionInstrMarginAdjustField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcOptionInstrCommRateField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOptionInstrCommRateField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrCommRateField_InvestorRange_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcInvestorRangeType)_swig_go_1; 
  
  if (arg1) (arg1)->InvestorRange = arg2;
  
}


char _wrap_CThostFtdcOptionInstrCommRateField_InvestorRange_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcInvestorRangeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrCommRateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOptionInstrCommRateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrCommRateField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOptionInstrCommRateField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrCommRateField_OpenRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcOptionInstrCommRateField_OpenRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrCommRateField_OpenRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcOptionInstrCommRateField_OpenRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrCommRateField_CloseRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcOptionInstrCommRateField_CloseRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrCommRateField_CloseRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcOptionInstrCommRateField_CloseRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrCommRateField_CloseTodayRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseTodayRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcOptionInstrCommRateField_CloseTodayRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrCommRateField_CloseTodayRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseTodayRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcOptionInstrCommRateField_CloseTodayRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrCommRateField_StrikeRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->StrikeRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcOptionInstrCommRateField_StrikeRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->StrikeRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrCommRateField_StrikeRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->StrikeRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcOptionInstrCommRateField_StrikeRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->StrikeRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcOptionInstrCommRateField *_wrap_new_CThostFtdcOptionInstrCommRateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcOptionInstrCommRateField *result = 0 ;
  CThostFtdcOptionInstrCommRateField *_swig_go_result;
  
  
  result = (CThostFtdcOptionInstrCommRateField *)new CThostFtdcOptionInstrCommRateField();
  *(CThostFtdcOptionInstrCommRateField **)&_swig_go_result = (CThostFtdcOptionInstrCommRateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcOptionInstrCommRateField_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  
  arg1 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcOptionInstrTradeCostField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradeCostField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOptionInstrTradeCostField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradeCostField *_swig_go_0) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrTradeCostField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradeCostField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOptionInstrTradeCostField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradeCostField *_swig_go_0) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrTradeCostField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradeCostField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOptionInstrTradeCostField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradeCostField *_swig_go_0) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrTradeCostField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradeCostField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcOptionInstrTradeCostField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradeCostField *_swig_go_0) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrTradeCostField_FixedMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradeCostField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FixedMargin = arg2;
  
}


double _wrap_CThostFtdcOptionInstrTradeCostField_FixedMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradeCostField *_swig_go_0) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FixedMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrTradeCostField_MiniMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradeCostField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->MiniMargin = arg2;
  
}


double _wrap_CThostFtdcOptionInstrTradeCostField_MiniMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradeCostField *_swig_go_0) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->MiniMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrTradeCostField_Royalty_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradeCostField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Royalty = arg2;
  
}


double _wrap_CThostFtdcOptionInstrTradeCostField_Royalty_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradeCostField *_swig_go_0) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Royalty);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrTradeCostField_ExchFixedMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradeCostField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ExchFixedMargin = arg2;
  
}


double _wrap_CThostFtdcOptionInstrTradeCostField_ExchFixedMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradeCostField *_swig_go_0) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ExchFixedMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrTradeCostField_ExchMiniMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradeCostField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ExchMiniMargin = arg2;
  
}


double _wrap_CThostFtdcOptionInstrTradeCostField_ExchMiniMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradeCostField *_swig_go_0) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ExchMiniMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcOptionInstrTradeCostField *_wrap_new_CThostFtdcOptionInstrTradeCostField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcOptionInstrTradeCostField *result = 0 ;
  CThostFtdcOptionInstrTradeCostField *_swig_go_result;
  
  
  result = (CThostFtdcOptionInstrTradeCostField *)new CThostFtdcOptionInstrTradeCostField();
  *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_result = (CThostFtdcOptionInstrTradeCostField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcOptionInstrTradeCostField_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradeCostField *_swig_go_0) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  
  arg1 = *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryOptionInstrTradeCostField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradeCostField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryOptionInstrTradeCostField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryOptionInstrTradeCostField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradeCostField *_swig_go_0) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryOptionInstrTradeCostField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryOptionInstrTradeCostField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradeCostField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryOptionInstrTradeCostField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryOptionInstrTradeCostField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradeCostField *_swig_go_0) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryOptionInstrTradeCostField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryOptionInstrTradeCostField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradeCostField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryOptionInstrTradeCostField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryOptionInstrTradeCostField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradeCostField *_swig_go_0) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryOptionInstrTradeCostField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryOptionInstrTradeCostField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradeCostField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcQryOptionInstrTradeCostField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcQryOptionInstrTradeCostField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradeCostField *_swig_go_0) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQryOptionInstrTradeCostField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryOptionInstrTradeCostField_InputPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradeCostField *_swig_go_0, double _swig_go_1) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcQryOptionInstrTradeCostField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->InputPrice = arg2;
  
}


double _wrap_CThostFtdcQryOptionInstrTradeCostField_InputPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradeCostField *_swig_go_0) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcQryOptionInstrTradeCostField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->InputPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryOptionInstrTradeCostField_UnderlyingPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradeCostField *_swig_go_0, double _swig_go_1) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcQryOptionInstrTradeCostField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->UnderlyingPrice = arg2;
  
}


double _wrap_CThostFtdcQryOptionInstrTradeCostField_UnderlyingPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradeCostField *_swig_go_0) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcQryOptionInstrTradeCostField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->UnderlyingPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcQryOptionInstrTradeCostField *_wrap_new_CThostFtdcQryOptionInstrTradeCostField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryOptionInstrTradeCostField *result = 0 ;
  CThostFtdcQryOptionInstrTradeCostField *_swig_go_result;
  
  
  result = (CThostFtdcQryOptionInstrTradeCostField *)new CThostFtdcQryOptionInstrTradeCostField();
  *(CThostFtdcQryOptionInstrTradeCostField **)&_swig_go_result = (CThostFtdcQryOptionInstrTradeCostField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryOptionInstrTradeCostField_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradeCostField *_swig_go_0) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  
  arg1 = *(CThostFtdcQryOptionInstrTradeCostField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryOptionInstrCommRateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrCommRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryOptionInstrCommRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryOptionInstrCommRateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryOptionInstrCommRateField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrCommRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryOptionInstrCommRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryOptionInstrCommRateField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryOptionInstrCommRateField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrCommRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryOptionInstrCommRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryOptionInstrCommRateField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryOptionInstrCommRateField *_wrap_new_CThostFtdcQryOptionInstrCommRateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryOptionInstrCommRateField *result = 0 ;
  CThostFtdcQryOptionInstrCommRateField *_swig_go_result;
  
  
  result = (CThostFtdcQryOptionInstrCommRateField *)new CThostFtdcQryOptionInstrCommRateField();
  *(CThostFtdcQryOptionInstrCommRateField **)&_swig_go_result = (CThostFtdcQryOptionInstrCommRateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryOptionInstrCommRateField_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  
  arg1 = *(CThostFtdcQryOptionInstrCommRateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcIndexPriceField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcIndexPriceField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcIndexPriceField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcIndexPriceField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcIndexPriceField *_swig_go_0) {
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcIndexPriceField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcIndexPriceField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcIndexPriceField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcIndexPriceField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcIndexPriceField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcIndexPriceField *_swig_go_0) {
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcIndexPriceField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcIndexPriceField_ClosePrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcIndexPriceField *_swig_go_0, double _swig_go_1) {
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcIndexPriceField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->ClosePrice = arg2;
  
}


double _wrap_CThostFtdcIndexPriceField_ClosePrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcIndexPriceField *_swig_go_0) {
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcIndexPriceField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->ClosePrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcIndexPriceField *_wrap_new_CThostFtdcIndexPriceField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcIndexPriceField *result = 0 ;
  CThostFtdcIndexPriceField *_swig_go_result;
  
  
  result = (CThostFtdcIndexPriceField *)new CThostFtdcIndexPriceField();
  *(CThostFtdcIndexPriceField **)&_swig_go_result = (CThostFtdcIndexPriceField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcIndexPriceField_goctp_ef6abdc493ff8ae2(CThostFtdcIndexPriceField *_swig_go_0) {
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  
  arg1 = *(CThostFtdcIndexPriceField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInputExecOrderField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderField_ExecOrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderRef, (const char *)arg2, 13-1);
      arg1->ExecOrderRef[13-1] = 0;
    } else {
      arg1->ExecOrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderField_ExecOrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExecOrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderField_Volume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->Volume = arg2;
  
}


intgo _wrap_CThostFtdcInputExecOrderField_Volume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcInputExecOrderField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderField_OffsetFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOffsetFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->OffsetFlag = arg2;
  
}


char _wrap_CThostFtdcInputExecOrderField_OffsetFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcInputExecOrderField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderField_ActionType_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcActionTypeType arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcActionTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->ActionType = arg2;
  
}


char _wrap_CThostFtdcInputExecOrderField_ActionType_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcActionTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcActionTypeType) ((arg1)->ActionType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderField_PosiDirection_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcPosiDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->PosiDirection = arg2;
  
}


char _wrap_CThostFtdcInputExecOrderField_PosiDirection_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcPosiDirectionType) ((arg1)->PosiDirection);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderField_ReservePositionFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcExecOrderPositionFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->ReservePositionFlag = arg2;
  
}


char _wrap_CThostFtdcInputExecOrderField_ReservePositionFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcExecOrderPositionFlagType) ((arg1)->ReservePositionFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderField_CloseFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcExecOrderCloseFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseFlag = arg2;
  
}


char _wrap_CThostFtdcInputExecOrderField_CloseFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcExecOrderCloseFlagType) ((arg1)->CloseFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcInputExecOrderField *_wrap_new_CThostFtdcInputExecOrderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInputExecOrderField *result = 0 ;
  CThostFtdcInputExecOrderField *_swig_go_result;
  
  
  result = (CThostFtdcInputExecOrderField *)new CThostFtdcInputExecOrderField();
  *(CThostFtdcInputExecOrderField **)&_swig_go_result = (CThostFtdcInputExecOrderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInputExecOrderField_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderField *_swig_go_0) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  
  arg1 = *(CThostFtdcInputExecOrderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInputExecOrderActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderActionField_ExecOrderActionRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionRefType)_swig_go_1; 
  
  if (arg1) (arg1)->ExecOrderActionRef = arg2;
  
}


intgo _wrap_CThostFtdcInputExecOrderActionField_ExecOrderActionRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionRefType) ((arg1)->ExecOrderActionRef);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderActionField_ExecOrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderRef, (const char *)arg2, 13-1);
      arg1->ExecOrderRef[13-1] = 0;
    } else {
      arg1->ExecOrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderActionField_ExecOrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExecOrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderActionField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcInputExecOrderActionField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderActionField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcInputExecOrderActionField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderActionField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcInputExecOrderActionField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderActionField_ExecOrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderSysID, (const char *)arg2, 21-1);
      arg1->ExecOrderSysID[21-1] = 0;
    } else {
      arg1->ExecOrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderActionField_ExecOrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExecOrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderActionField_ActionFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcActionFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->ActionFlag = arg2;
  
}


char _wrap_CThostFtdcInputExecOrderActionField_ActionFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderActionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderActionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderActionField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderActionField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderActionField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderActionField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderActionField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderActionField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputExecOrderActionField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputExecOrderActionField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcInputExecOrderActionField *_wrap_new_CThostFtdcInputExecOrderActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInputExecOrderActionField *result = 0 ;
  CThostFtdcInputExecOrderActionField *_swig_go_result;
  
  
  result = (CThostFtdcInputExecOrderActionField *)new CThostFtdcInputExecOrderActionField();
  *(CThostFtdcInputExecOrderActionField **)&_swig_go_result = (CThostFtdcInputExecOrderActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInputExecOrderActionField_goctp_ef6abdc493ff8ae2(CThostFtdcInputExecOrderActionField *_swig_go_0) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  
  arg1 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcExecOrderField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_ExecOrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderRef, (const char *)arg2, 13-1);
      arg1->ExecOrderRef[13-1] = 0;
    } else {
      arg1->ExecOrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_ExecOrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExecOrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_Volume_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->Volume = arg2;
  
}


intgo _wrap_CThostFtdcExecOrderField_Volume_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcExecOrderField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_OffsetFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOffsetFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->OffsetFlag = arg2;
  
}


char _wrap_CThostFtdcExecOrderField_OffsetFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcExecOrderField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_ActionType_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcActionTypeType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcActionTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->ActionType = arg2;
  
}


char _wrap_CThostFtdcExecOrderField_ActionType_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcActionTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcActionTypeType) ((arg1)->ActionType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_PosiDirection_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcPosiDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->PosiDirection = arg2;
  
}


char _wrap_CThostFtdcExecOrderField_PosiDirection_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcPosiDirectionType) ((arg1)->PosiDirection);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_ReservePositionFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcExecOrderPositionFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->ReservePositionFlag = arg2;
  
}


char _wrap_CThostFtdcExecOrderField_ReservePositionFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcExecOrderPositionFlagType) ((arg1)->ReservePositionFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_CloseFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcExecOrderCloseFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseFlag = arg2;
  
}


char _wrap_CThostFtdcExecOrderField_CloseFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcExecOrderCloseFlagType) ((arg1)->CloseFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_ExecOrderLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderLocalID, (const char *)arg2, 13-1);
      arg1->ExecOrderLocalID[13-1] = 0;
    } else {
      arg1->ExecOrderLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_ExecOrderLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExecOrderLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcExecOrderField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_OrderSubmitStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderSubmitStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
  
}


char _wrap_CThostFtdcExecOrderField_OrderSubmitStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_NotifySequence_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->NotifySequence = arg2;
  
}


intgo _wrap_CThostFtdcExecOrderField_NotifySequence_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_SettlementID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSettlementIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementID = arg2;
  
}


intgo _wrap_CThostFtdcExecOrderField_SettlementID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSettlementIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_ExecOrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderSysID, (const char *)arg2, 21-1);
      arg1->ExecOrderSysID[21-1] = 0;
    } else {
      arg1->ExecOrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_ExecOrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExecOrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_InsertDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_InsertDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_InsertTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_InsertTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_CancelTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_CancelTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CancelTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_ExecResult_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcExecResultType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcExecResultType)_swig_go_1; 
  
  if (arg1) (arg1)->ExecResult = arg2;
  
}


char _wrap_CThostFtdcExecOrderField_ExecResult_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcExecResultType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcExecResultType) ((arg1)->ExecResult);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_ClearingPartID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_ClearingPartID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClearingPartID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_SequenceNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->SequenceNo = arg2;
  
}


intgo _wrap_CThostFtdcExecOrderField_SequenceNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcExecOrderField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcExecOrderField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_UserProductInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_UserProductInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserProductInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_StatusMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_StatusMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->StatusMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_ActiveUserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveUserID, (const char *)arg2, 16-1);
      arg1->ActiveUserID[16-1] = 0;
    } else {
      arg1->ActiveUserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_ActiveUserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActiveUserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_BrokerExecOrderSeq_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->BrokerExecOrderSeq = arg2;
  
}


intgo _wrap_CThostFtdcExecOrderField_BrokerExecOrderSeq_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->BrokerExecOrderSeq);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_BranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_BranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcExecOrderField *_wrap_new_CThostFtdcExecOrderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcExecOrderField *result = 0 ;
  CThostFtdcExecOrderField *_swig_go_result;
  
  
  result = (CThostFtdcExecOrderField *)new CThostFtdcExecOrderField();
  *(CThostFtdcExecOrderField **)&_swig_go_result = (CThostFtdcExecOrderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcExecOrderField_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderField *_swig_go_0) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  
  arg1 = *(CThostFtdcExecOrderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcExecOrderActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_ExecOrderActionRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionRefType)_swig_go_1; 
  
  if (arg1) (arg1)->ExecOrderActionRef = arg2;
  
}


intgo _wrap_CThostFtdcExecOrderActionField_ExecOrderActionRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionRefType) ((arg1)->ExecOrderActionRef);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_ExecOrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderRef, (const char *)arg2, 13-1);
      arg1->ExecOrderRef[13-1] = 0;
    } else {
      arg1->ExecOrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderActionField_ExecOrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExecOrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcExecOrderActionField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcExecOrderActionField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcExecOrderActionField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_ExecOrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderSysID, (const char *)arg2, 21-1);
      arg1->ExecOrderSysID[21-1] = 0;
    } else {
      arg1->ExecOrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderActionField_ExecOrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExecOrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_ActionFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcActionFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->ActionFlag = arg2;
  
}


char _wrap_CThostFtdcExecOrderActionField_ActionFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_ActionDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderActionField_ActionDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_ActionTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderActionField_ActionTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderActionField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcExecOrderActionField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_ExecOrderLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderLocalID, (const char *)arg2, 13-1);
      arg1->ExecOrderLocalID[13-1] = 0;
    } else {
      arg1->ExecOrderLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderActionField_ExecOrderLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExecOrderLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_ActionLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderActionField_ActionLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderActionField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderActionField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderActionField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_OrderActionStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderActionStatus = arg2;
  
}


char _wrap_CThostFtdcExecOrderActionField_OrderActionStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderActionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_ActionType_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcActionTypeType arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcActionTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->ActionType = arg2;
  
}


char _wrap_CThostFtdcExecOrderActionField_ActionType_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcActionTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcActionTypeType) ((arg1)->ActionType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_StatusMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderActionField_StatusMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->StatusMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderActionField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_BranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderActionField_BranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderActionField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderActionField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExecOrderActionField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExecOrderActionField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcExecOrderActionField *_wrap_new_CThostFtdcExecOrderActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcExecOrderActionField *result = 0 ;
  CThostFtdcExecOrderActionField *_swig_go_result;
  
  
  result = (CThostFtdcExecOrderActionField *)new CThostFtdcExecOrderActionField();
  *(CThostFtdcExecOrderActionField **)&_swig_go_result = (CThostFtdcExecOrderActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcExecOrderActionField_goctp_ef6abdc493ff8ae2(CThostFtdcExecOrderActionField *_swig_go_0) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  
  arg1 = *(CThostFtdcExecOrderActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryExecOrderField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExecOrderField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderField *_swig_go_0) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExecOrderField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExecOrderField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderField *_swig_go_0) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExecOrderField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExecOrderField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderField *_swig_go_0) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExecOrderField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExecOrderField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderField *_swig_go_0) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExecOrderField_ExecOrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderSysID, (const char *)arg2, 21-1);
      arg1->ExecOrderSysID[21-1] = 0;
    } else {
      arg1->ExecOrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExecOrderField_ExecOrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderField *_swig_go_0) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExecOrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExecOrderField_InsertTimeStart_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeStart, (const char *)arg2, 9-1);
      arg1->InsertTimeStart[9-1] = 0;
    } else {
      arg1->InsertTimeStart[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExecOrderField_InsertTimeStart_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderField *_swig_go_0) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertTimeStart);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExecOrderField_InsertTimeEnd_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeEnd, (const char *)arg2, 9-1);
      arg1->InsertTimeEnd[9-1] = 0;
    } else {
      arg1->InsertTimeEnd[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExecOrderField_InsertTimeEnd_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderField *_swig_go_0) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertTimeEnd);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryExecOrderField *_wrap_new_CThostFtdcQryExecOrderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryExecOrderField *result = 0 ;
  CThostFtdcQryExecOrderField *_swig_go_result;
  
  
  result = (CThostFtdcQryExecOrderField *)new CThostFtdcQryExecOrderField();
  *(CThostFtdcQryExecOrderField **)&_swig_go_result = (CThostFtdcQryExecOrderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryExecOrderField_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderField *_swig_go_0) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  
  arg1 = *(CThostFtdcQryExecOrderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcExchangeExecOrderField_Volume_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->Volume = arg2;
  
}


intgo _wrap_CThostFtdcExchangeExecOrderField_Volume_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcExchangeExecOrderField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_OffsetFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOffsetFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->OffsetFlag = arg2;
  
}


char _wrap_CThostFtdcExchangeExecOrderField_OffsetFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcExchangeExecOrderField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_ActionType_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcActionTypeType arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcActionTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->ActionType = arg2;
  
}


char _wrap_CThostFtdcExchangeExecOrderField_ActionType_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcActionTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcActionTypeType) ((arg1)->ActionType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_PosiDirection_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcPosiDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->PosiDirection = arg2;
  
}


char _wrap_CThostFtdcExchangeExecOrderField_PosiDirection_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcPosiDirectionType) ((arg1)->PosiDirection);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_ReservePositionFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcExecOrderPositionFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->ReservePositionFlag = arg2;
  
}


char _wrap_CThostFtdcExchangeExecOrderField_ReservePositionFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcExecOrderPositionFlagType) ((arg1)->ReservePositionFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_CloseFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcExecOrderCloseFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseFlag = arg2;
  
}


char _wrap_CThostFtdcExchangeExecOrderField_CloseFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcExecOrderCloseFlagType) ((arg1)->CloseFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_ExecOrderLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderLocalID, (const char *)arg2, 13-1);
      arg1->ExecOrderLocalID[13-1] = 0;
    } else {
      arg1->ExecOrderLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderField_ExecOrderLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExecOrderLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcExchangeExecOrderField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_OrderSubmitStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderSubmitStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
  
}


char _wrap_CThostFtdcExchangeExecOrderField_OrderSubmitStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_NotifySequence_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->NotifySequence = arg2;
  
}


intgo _wrap_CThostFtdcExchangeExecOrderField_NotifySequence_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_SettlementID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSettlementIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementID = arg2;
  
}


intgo _wrap_CThostFtdcExchangeExecOrderField_SettlementID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcSettlementIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_ExecOrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderSysID, (const char *)arg2, 21-1);
      arg1->ExecOrderSysID[21-1] = 0;
    } else {
      arg1->ExecOrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderField_ExecOrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExecOrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_InsertDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderField_InsertDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_InsertTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderField_InsertTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_CancelTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderField_CancelTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CancelTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_ExecResult_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcExecResultType arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcExecResultType)_swig_go_1; 
  
  if (arg1) (arg1)->ExecResult = arg2;
  
}


char _wrap_CThostFtdcExchangeExecOrderField_ExecResult_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcExecResultType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcExecResultType) ((arg1)->ExecResult);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_ClearingPartID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderField_ClearingPartID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClearingPartID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_SequenceNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->SequenceNo = arg2;
  
}


intgo _wrap_CThostFtdcExchangeExecOrderField_SequenceNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_BranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderField_BranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcExchangeExecOrderField *_wrap_new_CThostFtdcExchangeExecOrderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcExchangeExecOrderField *result = 0 ;
  CThostFtdcExchangeExecOrderField *_swig_go_result;
  
  
  result = (CThostFtdcExchangeExecOrderField *)new CThostFtdcExchangeExecOrderField();
  *(CThostFtdcExchangeExecOrderField **)&_swig_go_result = (CThostFtdcExchangeExecOrderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcExchangeExecOrderField_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderField *_swig_go_0) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryExchangeExecOrderField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeExecOrderField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeExecOrderField *_swig_go_0) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeExecOrderField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeExecOrderField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeExecOrderField *_swig_go_0) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeExecOrderField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeExecOrderField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeExecOrderField *_swig_go_0) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeExecOrderField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeExecOrderField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeExecOrderField *_swig_go_0) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeExecOrderField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeExecOrderField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeExecOrderField *_swig_go_0) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryExchangeExecOrderField *_wrap_new_CThostFtdcQryExchangeExecOrderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryExchangeExecOrderField *result = 0 ;
  CThostFtdcQryExchangeExecOrderField *_swig_go_result;
  
  
  result = (CThostFtdcQryExchangeExecOrderField *)new CThostFtdcQryExchangeExecOrderField();
  *(CThostFtdcQryExchangeExecOrderField **)&_swig_go_result = (CThostFtdcQryExchangeExecOrderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryExchangeExecOrderField_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeExecOrderField *_swig_go_0) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  
  arg1 = *(CThostFtdcQryExchangeExecOrderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryExecOrderActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExecOrderActionField *arg1 = (CThostFtdcQryExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExecOrderActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderActionField *_swig_go_0) {
  CThostFtdcQryExecOrderActionField *arg1 = (CThostFtdcQryExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExecOrderActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExecOrderActionField *arg1 = (CThostFtdcQryExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExecOrderActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderActionField *_swig_go_0) {
  CThostFtdcQryExecOrderActionField *arg1 = (CThostFtdcQryExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExecOrderActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExecOrderActionField *arg1 = (CThostFtdcQryExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExecOrderActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderActionField *_swig_go_0) {
  CThostFtdcQryExecOrderActionField *arg1 = (CThostFtdcQryExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryExecOrderActionField *_wrap_new_CThostFtdcQryExecOrderActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryExecOrderActionField *result = 0 ;
  CThostFtdcQryExecOrderActionField *_swig_go_result;
  
  
  result = (CThostFtdcQryExecOrderActionField *)new CThostFtdcQryExecOrderActionField();
  *(CThostFtdcQryExecOrderActionField **)&_swig_go_result = (CThostFtdcQryExecOrderActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryExecOrderActionField_goctp_ef6abdc493ff8ae2(CThostFtdcQryExecOrderActionField *_swig_go_0) {
  CThostFtdcQryExecOrderActionField *arg1 = (CThostFtdcQryExecOrderActionField *) 0 ;
  
  arg1 = *(CThostFtdcQryExecOrderActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcExchangeExecOrderActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderActionField_ExecOrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderSysID, (const char *)arg2, 21-1);
      arg1->ExecOrderSysID[21-1] = 0;
    } else {
      arg1->ExecOrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderActionField_ExecOrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExecOrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderActionField_ActionFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcActionFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->ActionFlag = arg2;
  
}


char _wrap_CThostFtdcExchangeExecOrderActionField_ActionFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderActionField_ActionDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderActionField_ActionDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderActionField_ActionTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderActionField_ActionTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderActionField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderActionField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderActionField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcExchangeExecOrderActionField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderActionField_ExecOrderLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderLocalID, (const char *)arg2, 13-1);
      arg1->ExecOrderLocalID[13-1] = 0;
    } else {
      arg1->ExecOrderLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderActionField_ExecOrderLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExecOrderLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderActionField_ActionLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderActionField_ActionLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderActionField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderActionField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderActionField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderActionField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderActionField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderActionField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderActionField_OrderActionStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderActionStatus = arg2;
  
}


char _wrap_CThostFtdcExchangeExecOrderActionField_OrderActionStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderActionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderActionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderActionField_ActionType_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcActionTypeType arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcActionTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->ActionType = arg2;
  
}


char _wrap_CThostFtdcExchangeExecOrderActionField_ActionType_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcActionTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcActionTypeType) ((arg1)->ActionType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderActionField_BranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderActionField_BranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderActionField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderActionField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeExecOrderActionField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeExecOrderActionField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcExchangeExecOrderActionField *_wrap_new_CThostFtdcExchangeExecOrderActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcExchangeExecOrderActionField *result = 0 ;
  CThostFtdcExchangeExecOrderActionField *_swig_go_result;
  
  
  result = (CThostFtdcExchangeExecOrderActionField *)new CThostFtdcExchangeExecOrderActionField();
  *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_result = (CThostFtdcExchangeExecOrderActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcExchangeExecOrderActionField_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  
  arg1 = *(CThostFtdcExchangeExecOrderActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryExchangeExecOrderActionField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeExecOrderActionField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeExecOrderActionField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeExecOrderActionField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeExecOrderActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeExecOrderActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeExecOrderActionField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeExecOrderActionField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryExchangeExecOrderActionField *_wrap_new_CThostFtdcQryExchangeExecOrderActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryExchangeExecOrderActionField *result = 0 ;
  CThostFtdcQryExchangeExecOrderActionField *_swig_go_result;
  
  
  result = (CThostFtdcQryExchangeExecOrderActionField *)new CThostFtdcQryExchangeExecOrderActionField();
  *(CThostFtdcQryExchangeExecOrderActionField **)&_swig_go_result = (CThostFtdcQryExchangeExecOrderActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryExchangeExecOrderActionField_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeExecOrderActionField *_swig_go_0) {
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  
  arg1 = *(CThostFtdcQryExchangeExecOrderActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcErrExecOrderField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_ExecOrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderRef, (const char *)arg2, 13-1);
      arg1->ExecOrderRef[13-1] = 0;
    } else {
      arg1->ExecOrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderField_ExecOrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExecOrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_Volume_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->Volume = arg2;
  
}


intgo _wrap_CThostFtdcErrExecOrderField_Volume_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcErrExecOrderField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_OffsetFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOffsetFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->OffsetFlag = arg2;
  
}


char _wrap_CThostFtdcErrExecOrderField_OffsetFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcErrExecOrderField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_ActionType_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcActionTypeType arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcActionTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->ActionType = arg2;
  
}


char _wrap_CThostFtdcErrExecOrderField_ActionType_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcActionTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcActionTypeType) ((arg1)->ActionType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_PosiDirection_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcPosiDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->PosiDirection = arg2;
  
}


char _wrap_CThostFtdcErrExecOrderField_PosiDirection_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcPosiDirectionType) ((arg1)->PosiDirection);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_ReservePositionFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcExecOrderPositionFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->ReservePositionFlag = arg2;
  
}


char _wrap_CThostFtdcErrExecOrderField_ReservePositionFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcExecOrderPositionFlagType) ((arg1)->ReservePositionFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_CloseFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcExecOrderCloseFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseFlag = arg2;
  
}


char _wrap_CThostFtdcErrExecOrderField_CloseFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcExecOrderCloseFlagType) ((arg1)->CloseFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcErrExecOrderField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcErrExecOrderField *_wrap_new_CThostFtdcErrExecOrderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcErrExecOrderField *result = 0 ;
  CThostFtdcErrExecOrderField *_swig_go_result;
  
  
  result = (CThostFtdcErrExecOrderField *)new CThostFtdcErrExecOrderField();
  *(CThostFtdcErrExecOrderField **)&_swig_go_result = (CThostFtdcErrExecOrderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcErrExecOrderField_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderField *_swig_go_0) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  
  arg1 = *(CThostFtdcErrExecOrderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryErrExecOrderField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryErrExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryErrExecOrderField *arg1 = (CThostFtdcQryErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryErrExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryErrExecOrderField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryErrExecOrderField *_swig_go_0) {
  CThostFtdcQryErrExecOrderField *arg1 = (CThostFtdcQryErrExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryErrExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryErrExecOrderField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryErrExecOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryErrExecOrderField *arg1 = (CThostFtdcQryErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryErrExecOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryErrExecOrderField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryErrExecOrderField *_swig_go_0) {
  CThostFtdcQryErrExecOrderField *arg1 = (CThostFtdcQryErrExecOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryErrExecOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryErrExecOrderField *_wrap_new_CThostFtdcQryErrExecOrderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryErrExecOrderField *result = 0 ;
  CThostFtdcQryErrExecOrderField *_swig_go_result;
  
  
  result = (CThostFtdcQryErrExecOrderField *)new CThostFtdcQryErrExecOrderField();
  *(CThostFtdcQryErrExecOrderField **)&_swig_go_result = (CThostFtdcQryErrExecOrderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryErrExecOrderField_goctp_ef6abdc493ff8ae2(CThostFtdcQryErrExecOrderField *_swig_go_0) {
  CThostFtdcQryErrExecOrderField *arg1 = (CThostFtdcQryErrExecOrderField *) 0 ;
  
  arg1 = *(CThostFtdcQryErrExecOrderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcErrExecOrderActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderActionField_ExecOrderActionRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionRefType)_swig_go_1; 
  
  if (arg1) (arg1)->ExecOrderActionRef = arg2;
  
}


intgo _wrap_CThostFtdcErrExecOrderActionField_ExecOrderActionRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionRefType) ((arg1)->ExecOrderActionRef);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderActionField_ExecOrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderRef, (const char *)arg2, 13-1);
      arg1->ExecOrderRef[13-1] = 0;
    } else {
      arg1->ExecOrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderActionField_ExecOrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExecOrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderActionField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcErrExecOrderActionField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderActionField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcErrExecOrderActionField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderActionField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcErrExecOrderActionField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderActionField_ExecOrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderSysID, (const char *)arg2, 21-1);
      arg1->ExecOrderSysID[21-1] = 0;
    } else {
      arg1->ExecOrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderActionField_ExecOrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExecOrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderActionField_ActionFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcActionFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->ActionFlag = arg2;
  
}


char _wrap_CThostFtdcErrExecOrderActionField_ActionFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderActionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderActionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderActionField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderActionField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderActionField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderActionField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderActionField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderActionField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderActionField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderActionField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderActionField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcErrExecOrderActionField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrExecOrderActionField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrExecOrderActionField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcErrExecOrderActionField *_wrap_new_CThostFtdcErrExecOrderActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcErrExecOrderActionField *result = 0 ;
  CThostFtdcErrExecOrderActionField *_swig_go_result;
  
  
  result = (CThostFtdcErrExecOrderActionField *)new CThostFtdcErrExecOrderActionField();
  *(CThostFtdcErrExecOrderActionField **)&_swig_go_result = (CThostFtdcErrExecOrderActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcErrExecOrderActionField_goctp_ef6abdc493ff8ae2(CThostFtdcErrExecOrderActionField *_swig_go_0) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  
  arg1 = *(CThostFtdcErrExecOrderActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryErrExecOrderActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryErrExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryErrExecOrderActionField *arg1 = (CThostFtdcQryErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryErrExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryErrExecOrderActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryErrExecOrderActionField *_swig_go_0) {
  CThostFtdcQryErrExecOrderActionField *arg1 = (CThostFtdcQryErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryErrExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryErrExecOrderActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryErrExecOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryErrExecOrderActionField *arg1 = (CThostFtdcQryErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryErrExecOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryErrExecOrderActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryErrExecOrderActionField *_swig_go_0) {
  CThostFtdcQryErrExecOrderActionField *arg1 = (CThostFtdcQryErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryErrExecOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryErrExecOrderActionField *_wrap_new_CThostFtdcQryErrExecOrderActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryErrExecOrderActionField *result = 0 ;
  CThostFtdcQryErrExecOrderActionField *_swig_go_result;
  
  
  result = (CThostFtdcQryErrExecOrderActionField *)new CThostFtdcQryErrExecOrderActionField();
  *(CThostFtdcQryErrExecOrderActionField **)&_swig_go_result = (CThostFtdcQryErrExecOrderActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryErrExecOrderActionField_goctp_ef6abdc493ff8ae2(CThostFtdcQryErrExecOrderActionField *_swig_go_0) {
  CThostFtdcQryErrExecOrderActionField *arg1 = (CThostFtdcQryErrExecOrderActionField *) 0 ;
  
  arg1 = *(CThostFtdcQryErrExecOrderActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcOptionInstrTradingRightField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradingRightField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrTradingRightField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOptionInstrTradingRightField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradingRightField *_swig_go_0) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrTradingRightField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrTradingRightField_InvestorRange_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradingRightField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrTradingRightField **)&_swig_go_0; 
  arg2 = (TThostFtdcInvestorRangeType)_swig_go_1; 
  
  if (arg1) (arg1)->InvestorRange = arg2;
  
}


char _wrap_CThostFtdcOptionInstrTradingRightField_InvestorRange_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradingRightField *_swig_go_0) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  TThostFtdcInvestorRangeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrTradingRightField **)&_swig_go_0; 
  
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrTradingRightField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradingRightField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrTradingRightField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOptionInstrTradingRightField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradingRightField *_swig_go_0) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrTradingRightField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrTradingRightField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradingRightField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrTradingRightField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOptionInstrTradingRightField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradingRightField *_swig_go_0) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrTradingRightField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrTradingRightField_Direction_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradingRightField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrTradingRightField **)&_swig_go_0; 
  arg2 = (TThostFtdcDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->Direction = arg2;
  
}


char _wrap_CThostFtdcOptionInstrTradingRightField_Direction_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradingRightField *_swig_go_0) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  TThostFtdcDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrTradingRightField **)&_swig_go_0; 
  
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrTradingRightField_TradingRight_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradingRightField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  TThostFtdcTradingRightType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrTradingRightField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradingRightType)_swig_go_1; 
  
  if (arg1) (arg1)->TradingRight = arg2;
  
}


char _wrap_CThostFtdcOptionInstrTradingRightField_TradingRight_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradingRightField *_swig_go_0) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  TThostFtdcTradingRightType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrTradingRightField **)&_swig_go_0; 
  
  result = (TThostFtdcTradingRightType) ((arg1)->TradingRight);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcOptionInstrTradingRightField *_wrap_new_CThostFtdcOptionInstrTradingRightField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcOptionInstrTradingRightField *result = 0 ;
  CThostFtdcOptionInstrTradingRightField *_swig_go_result;
  
  
  result = (CThostFtdcOptionInstrTradingRightField *)new CThostFtdcOptionInstrTradingRightField();
  *(CThostFtdcOptionInstrTradingRightField **)&_swig_go_result = (CThostFtdcOptionInstrTradingRightField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcOptionInstrTradingRightField_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrTradingRightField *_swig_go_0) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  
  arg1 = *(CThostFtdcOptionInstrTradingRightField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryOptionInstrTradingRightField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradingRightField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryOptionInstrTradingRightField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryOptionInstrTradingRightField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradingRightField *_swig_go_0) {
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryOptionInstrTradingRightField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryOptionInstrTradingRightField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradingRightField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryOptionInstrTradingRightField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryOptionInstrTradingRightField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradingRightField *_swig_go_0) {
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryOptionInstrTradingRightField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryOptionInstrTradingRightField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradingRightField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryOptionInstrTradingRightField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryOptionInstrTradingRightField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradingRightField *_swig_go_0) {
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryOptionInstrTradingRightField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryOptionInstrTradingRightField_Direction_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradingRightField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = *(CThostFtdcQryOptionInstrTradingRightField **)&_swig_go_0; 
  arg2 = (TThostFtdcDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->Direction = arg2;
  
}


char _wrap_CThostFtdcQryOptionInstrTradingRightField_Direction_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradingRightField *_swig_go_0) {
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  TThostFtdcDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQryOptionInstrTradingRightField **)&_swig_go_0; 
  
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcQryOptionInstrTradingRightField *_wrap_new_CThostFtdcQryOptionInstrTradingRightField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryOptionInstrTradingRightField *result = 0 ;
  CThostFtdcQryOptionInstrTradingRightField *_swig_go_result;
  
  
  result = (CThostFtdcQryOptionInstrTradingRightField *)new CThostFtdcQryOptionInstrTradingRightField();
  *(CThostFtdcQryOptionInstrTradingRightField **)&_swig_go_result = (CThostFtdcQryOptionInstrTradingRightField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryOptionInstrTradingRightField_goctp_ef6abdc493ff8ae2(CThostFtdcQryOptionInstrTradingRightField *_swig_go_0) {
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  
  arg1 = *(CThostFtdcQryOptionInstrTradingRightField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInputForQuoteField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputForQuoteField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputForQuoteField *_swig_go_0) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputForQuoteField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputForQuoteField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputForQuoteField *_swig_go_0) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputForQuoteField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputForQuoteField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputForQuoteField *_swig_go_0) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputForQuoteField_ForQuoteRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteRef, (const char *)arg2, 13-1);
      arg1->ForQuoteRef[13-1] = 0;
    } else {
      arg1->ForQuoteRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputForQuoteField_ForQuoteRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputForQuoteField *_swig_go_0) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ForQuoteRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputForQuoteField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputForQuoteField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputForQuoteField *_swig_go_0) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputForQuoteField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputForQuoteField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputForQuoteField *_swig_go_0) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputForQuoteField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputForQuoteField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputForQuoteField *_swig_go_0) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputForQuoteField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputForQuoteField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputForQuoteField *_swig_go_0) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputForQuoteField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputForQuoteField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputForQuoteField *_swig_go_0) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcInputForQuoteField *_wrap_new_CThostFtdcInputForQuoteField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInputForQuoteField *result = 0 ;
  CThostFtdcInputForQuoteField *_swig_go_result;
  
  
  result = (CThostFtdcInputForQuoteField *)new CThostFtdcInputForQuoteField();
  *(CThostFtdcInputForQuoteField **)&_swig_go_result = (CThostFtdcInputForQuoteField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInputForQuoteField_goctp_ef6abdc493ff8ae2(CThostFtdcInputForQuoteField *_swig_go_0) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  
  arg1 = *(CThostFtdcInputForQuoteField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcForQuoteField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_ForQuoteRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteRef, (const char *)arg2, 13-1);
      arg1->ForQuoteRef[13-1] = 0;
    } else {
      arg1->ForQuoteRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteField_ForQuoteRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ForQuoteRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_ForQuoteLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteLocalID, (const char *)arg2, 13-1);
      arg1->ForQuoteLocalID[13-1] = 0;
    } else {
      arg1->ForQuoteLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteField_ForQuoteLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ForQuoteLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcForQuoteField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_InsertDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteField_InsertDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_InsertTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteField_InsertTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_ForQuoteStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, char _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcForQuoteStatusType arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcForQuoteStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->ForQuoteStatus = arg2;
  
}


char _wrap_CThostFtdcForQuoteField_ForQuoteStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcForQuoteStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcForQuoteStatusType) ((arg1)->ForQuoteStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcForQuoteField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcForQuoteField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_StatusMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteField_StatusMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->StatusMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_ActiveUserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveUserID, (const char *)arg2, 16-1);
      arg1->ActiveUserID[16-1] = 0;
    } else {
      arg1->ActiveUserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteField_ActiveUserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActiveUserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_BrokerForQutoSeq_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->BrokerForQutoSeq = arg2;
  
}


intgo _wrap_CThostFtdcForQuoteField_BrokerForQutoSeq_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->BrokerForQutoSeq);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcForQuoteField *_wrap_new_CThostFtdcForQuoteField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcForQuoteField *result = 0 ;
  CThostFtdcForQuoteField *_swig_go_result;
  
  
  result = (CThostFtdcForQuoteField *)new CThostFtdcForQuoteField();
  *(CThostFtdcForQuoteField **)&_swig_go_result = (CThostFtdcForQuoteField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcForQuoteField_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteField *_swig_go_0) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  
  arg1 = *(CThostFtdcForQuoteField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryForQuoteField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryForQuoteField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryForQuoteField *_swig_go_0) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryForQuoteField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryForQuoteField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryForQuoteField *_swig_go_0) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryForQuoteField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryForQuoteField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryForQuoteField *_swig_go_0) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryForQuoteField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryForQuoteField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryForQuoteField *_swig_go_0) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryForQuoteField_InsertTimeStart_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeStart, (const char *)arg2, 9-1);
      arg1->InsertTimeStart[9-1] = 0;
    } else {
      arg1->InsertTimeStart[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryForQuoteField_InsertTimeStart_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryForQuoteField *_swig_go_0) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertTimeStart);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryForQuoteField_InsertTimeEnd_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeEnd, (const char *)arg2, 9-1);
      arg1->InsertTimeEnd[9-1] = 0;
    } else {
      arg1->InsertTimeEnd[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryForQuoteField_InsertTimeEnd_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryForQuoteField *_swig_go_0) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertTimeEnd);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryForQuoteField *_wrap_new_CThostFtdcQryForQuoteField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryForQuoteField *result = 0 ;
  CThostFtdcQryForQuoteField *_swig_go_result;
  
  
  result = (CThostFtdcQryForQuoteField *)new CThostFtdcQryForQuoteField();
  *(CThostFtdcQryForQuoteField **)&_swig_go_result = (CThostFtdcQryForQuoteField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryForQuoteField_goctp_ef6abdc493ff8ae2(CThostFtdcQryForQuoteField *_swig_go_0) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  
  arg1 = *(CThostFtdcQryForQuoteField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcExchangeForQuoteField_ForQuoteLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteLocalID, (const char *)arg2, 13-1);
      arg1->ForQuoteLocalID[13-1] = 0;
    } else {
      arg1->ForQuoteLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeForQuoteField_ForQuoteLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ForQuoteLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeForQuoteField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeForQuoteField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeForQuoteField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeForQuoteField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeForQuoteField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeForQuoteField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeForQuoteField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeForQuoteField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeForQuoteField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeForQuoteField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeForQuoteField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcExchangeForQuoteField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeForQuoteField_InsertDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeForQuoteField_InsertDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeForQuoteField_InsertTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeForQuoteField_InsertTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeForQuoteField_ForQuoteStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  TThostFtdcForQuoteStatusType arg2 ;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcForQuoteStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->ForQuoteStatus = arg2;
  
}


char _wrap_CThostFtdcExchangeForQuoteField_ForQuoteStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  TThostFtdcForQuoteStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcForQuoteStatusType) ((arg1)->ForQuoteStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeForQuoteField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeForQuoteField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeForQuoteField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeForQuoteField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcExchangeForQuoteField *_wrap_new_CThostFtdcExchangeForQuoteField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcExchangeForQuoteField *result = 0 ;
  CThostFtdcExchangeForQuoteField *_swig_go_result;
  
  
  result = (CThostFtdcExchangeForQuoteField *)new CThostFtdcExchangeForQuoteField();
  *(CThostFtdcExchangeForQuoteField **)&_swig_go_result = (CThostFtdcExchangeForQuoteField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcExchangeForQuoteField_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeForQuoteField *_swig_go_0) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  
  arg1 = *(CThostFtdcExchangeForQuoteField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryExchangeForQuoteField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeForQuoteField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeForQuoteField *_swig_go_0) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeForQuoteField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeForQuoteField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeForQuoteField *_swig_go_0) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeForQuoteField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeForQuoteField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeForQuoteField *_swig_go_0) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeForQuoteField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeForQuoteField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeForQuoteField *_swig_go_0) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeForQuoteField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeForQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeForQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeForQuoteField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeForQuoteField *_swig_go_0) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeForQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryExchangeForQuoteField *_wrap_new_CThostFtdcQryExchangeForQuoteField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryExchangeForQuoteField *result = 0 ;
  CThostFtdcQryExchangeForQuoteField *_swig_go_result;
  
  
  result = (CThostFtdcQryExchangeForQuoteField *)new CThostFtdcQryExchangeForQuoteField();
  *(CThostFtdcQryExchangeForQuoteField **)&_swig_go_result = (CThostFtdcQryExchangeForQuoteField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryExchangeForQuoteField_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeForQuoteField *_swig_go_0) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  
  arg1 = *(CThostFtdcQryExchangeForQuoteField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInputQuoteField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_QuoteRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteRef, (const char *)arg2, 13-1);
      arg1->QuoteRef[13-1] = 0;
    } else {
      arg1->QuoteRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteField_QuoteRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->QuoteRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_AskPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->AskPrice = arg2;
  
}


double _wrap_CThostFtdcInputQuoteField_AskPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->AskPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_BidPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->BidPrice = arg2;
  
}


double _wrap_CThostFtdcInputQuoteField_BidPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->BidPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_AskVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->AskVolume = arg2;
  
}


intgo _wrap_CThostFtdcInputQuoteField_AskVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_BidVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->BidVolume = arg2;
  
}


intgo _wrap_CThostFtdcInputQuoteField_BidVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcInputQuoteField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_AskOffsetFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcOffsetFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->AskOffsetFlag = arg2;
  
}


char _wrap_CThostFtdcInputQuoteField_AskOffsetFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcOffsetFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcOffsetFlagType) ((arg1)->AskOffsetFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_BidOffsetFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcOffsetFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BidOffsetFlag = arg2;
  
}


char _wrap_CThostFtdcInputQuoteField_BidOffsetFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcOffsetFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcOffsetFlagType) ((arg1)->BidOffsetFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_AskHedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->AskHedgeFlag = arg2;
  
}


char _wrap_CThostFtdcInputQuoteField_AskHedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->AskHedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_BidHedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BidHedgeFlag = arg2;
  
}


char _wrap_CThostFtdcInputQuoteField_BidHedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->BidHedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_AskOrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AskOrderRef, (const char *)arg2, 13-1);
      arg1->AskOrderRef[13-1] = 0;
    } else {
      arg1->AskOrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteField_AskOrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AskOrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_BidOrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BidOrderRef, (const char *)arg2, 13-1);
      arg1->BidOrderRef[13-1] = 0;
    } else {
      arg1->BidOrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteField_BidOrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BidOrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_ForQuoteSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteSysID, (const char *)arg2, 21-1);
      arg1->ForQuoteSysID[21-1] = 0;
    } else {
      arg1->ForQuoteSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteField_ForQuoteSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ForQuoteSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcInputQuoteField *_wrap_new_CThostFtdcInputQuoteField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInputQuoteField *result = 0 ;
  CThostFtdcInputQuoteField *_swig_go_result;
  
  
  result = (CThostFtdcInputQuoteField *)new CThostFtdcInputQuoteField();
  *(CThostFtdcInputQuoteField **)&_swig_go_result = (CThostFtdcInputQuoteField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInputQuoteField_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteField *_swig_go_0) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  
  arg1 = *(CThostFtdcInputQuoteField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInputQuoteActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteActionField_QuoteActionRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionRefType)_swig_go_1; 
  
  if (arg1) (arg1)->QuoteActionRef = arg2;
  
}


intgo _wrap_CThostFtdcInputQuoteActionField_QuoteActionRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionRefType) ((arg1)->QuoteActionRef);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteActionField_QuoteRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteRef, (const char *)arg2, 13-1);
      arg1->QuoteRef[13-1] = 0;
    } else {
      arg1->QuoteRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteActionField_QuoteRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->QuoteRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteActionField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcInputQuoteActionField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteActionField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcInputQuoteActionField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteActionField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcInputQuoteActionField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteActionField_QuoteSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteSysID, (const char *)arg2, 21-1);
      arg1->QuoteSysID[21-1] = 0;
    } else {
      arg1->QuoteSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteActionField_QuoteSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->QuoteSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteActionField_ActionFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcActionFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->ActionFlag = arg2;
  
}


char _wrap_CThostFtdcInputQuoteActionField_ActionFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcActionFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteActionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteActionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteActionField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteActionField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteActionField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteActionField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteActionField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteActionField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteActionField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteActionField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputQuoteActionField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputQuoteActionField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcInputQuoteActionField *_wrap_new_CThostFtdcInputQuoteActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInputQuoteActionField *result = 0 ;
  CThostFtdcInputQuoteActionField *_swig_go_result;
  
  
  result = (CThostFtdcInputQuoteActionField *)new CThostFtdcInputQuoteActionField();
  *(CThostFtdcInputQuoteActionField **)&_swig_go_result = (CThostFtdcInputQuoteActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInputQuoteActionField_goctp_ef6abdc493ff8ae2(CThostFtdcInputQuoteActionField *_swig_go_0) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  
  arg1 = *(CThostFtdcInputQuoteActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQuoteField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_QuoteRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteRef, (const char *)arg2, 13-1);
      arg1->QuoteRef[13-1] = 0;
    } else {
      arg1->QuoteRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_QuoteRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->QuoteRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_AskPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, double _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->AskPrice = arg2;
  
}


double _wrap_CThostFtdcQuoteField_AskPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->AskPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_BidPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, double _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->BidPrice = arg2;
  
}


double _wrap_CThostFtdcQuoteField_BidPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->BidPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_AskVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->AskVolume = arg2;
  
}


intgo _wrap_CThostFtdcQuoteField_AskVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_BidVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->BidVolume = arg2;
  
}


intgo _wrap_CThostFtdcQuoteField_BidVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcQuoteField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_AskOffsetFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcOffsetFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->AskOffsetFlag = arg2;
  
}


char _wrap_CThostFtdcQuoteField_AskOffsetFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOffsetFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcOffsetFlagType) ((arg1)->AskOffsetFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_BidOffsetFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcOffsetFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BidOffsetFlag = arg2;
  
}


char _wrap_CThostFtdcQuoteField_BidOffsetFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOffsetFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcOffsetFlagType) ((arg1)->BidOffsetFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_AskHedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->AskHedgeFlag = arg2;
  
}


char _wrap_CThostFtdcQuoteField_AskHedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->AskHedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_BidHedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BidHedgeFlag = arg2;
  
}


char _wrap_CThostFtdcQuoteField_BidHedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->BidHedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_QuoteLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteLocalID, (const char *)arg2, 13-1);
      arg1->QuoteLocalID[13-1] = 0;
    } else {
      arg1->QuoteLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_QuoteLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->QuoteLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcQuoteField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_NotifySequence_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->NotifySequence = arg2;
  
}


intgo _wrap_CThostFtdcQuoteField_NotifySequence_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_OrderSubmitStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderSubmitStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
  
}


char _wrap_CThostFtdcQuoteField_OrderSubmitStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_SettlementID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcSettlementIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementID = arg2;
  
}


intgo _wrap_CThostFtdcQuoteField_SettlementID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSettlementIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_QuoteSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteSysID, (const char *)arg2, 21-1);
      arg1->QuoteSysID[21-1] = 0;
    } else {
      arg1->QuoteSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_QuoteSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->QuoteSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_InsertDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_InsertDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_InsertTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_InsertTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_CancelTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_CancelTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CancelTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_QuoteStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOrderStatusType arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->QuoteStatus = arg2;
  
}


char _wrap_CThostFtdcQuoteField_QuoteStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOrderStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderStatusType) ((arg1)->QuoteStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_ClearingPartID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_ClearingPartID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClearingPartID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_SequenceNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->SequenceNo = arg2;
  
}


intgo _wrap_CThostFtdcQuoteField_SequenceNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_AskOrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AskOrderSysID, (const char *)arg2, 21-1);
      arg1->AskOrderSysID[21-1] = 0;
    } else {
      arg1->AskOrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_AskOrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AskOrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_BidOrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BidOrderSysID, (const char *)arg2, 21-1);
      arg1->BidOrderSysID[21-1] = 0;
    } else {
      arg1->BidOrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_BidOrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BidOrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcQuoteField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcQuoteField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_UserProductInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_UserProductInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserProductInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_StatusMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_StatusMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->StatusMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_ActiveUserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveUserID, (const char *)arg2, 16-1);
      arg1->ActiveUserID[16-1] = 0;
    } else {
      arg1->ActiveUserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_ActiveUserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActiveUserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_BrokerQuoteSeq_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->BrokerQuoteSeq = arg2;
  
}


intgo _wrap_CThostFtdcQuoteField_BrokerQuoteSeq_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->BrokerQuoteSeq);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_AskOrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AskOrderRef, (const char *)arg2, 13-1);
      arg1->AskOrderRef[13-1] = 0;
    } else {
      arg1->AskOrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_AskOrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AskOrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_BidOrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BidOrderRef, (const char *)arg2, 13-1);
      arg1->BidOrderRef[13-1] = 0;
    } else {
      arg1->BidOrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_BidOrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BidOrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_ForQuoteSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteSysID, (const char *)arg2, 21-1);
      arg1->ForQuoteSysID[21-1] = 0;
    } else {
      arg1->ForQuoteSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_ForQuoteSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ForQuoteSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_BranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_BranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQuoteField *_wrap_new_CThostFtdcQuoteField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQuoteField *result = 0 ;
  CThostFtdcQuoteField *_swig_go_result;
  
  
  result = (CThostFtdcQuoteField *)new CThostFtdcQuoteField();
  *(CThostFtdcQuoteField **)&_swig_go_result = (CThostFtdcQuoteField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQuoteField_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteField *_swig_go_0) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  
  arg1 = *(CThostFtdcQuoteField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQuoteActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_QuoteActionRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionRefType)_swig_go_1; 
  
  if (arg1) (arg1)->QuoteActionRef = arg2;
  
}


intgo _wrap_CThostFtdcQuoteActionField_QuoteActionRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionRefType) ((arg1)->QuoteActionRef);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_QuoteRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteRef, (const char *)arg2, 13-1);
      arg1->QuoteRef[13-1] = 0;
    } else {
      arg1->QuoteRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteActionField_QuoteRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->QuoteRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcQuoteActionField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcQuoteActionField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcQuoteActionField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_QuoteSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteSysID, (const char *)arg2, 21-1);
      arg1->QuoteSysID[21-1] = 0;
    } else {
      arg1->QuoteSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteActionField_QuoteSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->QuoteSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_ActionFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcActionFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->ActionFlag = arg2;
  
}


char _wrap_CThostFtdcQuoteActionField_ActionFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcActionFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_ActionDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteActionField_ActionDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_ActionTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteActionField_ActionTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteActionField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcQuoteActionField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_QuoteLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteLocalID, (const char *)arg2, 13-1);
      arg1->QuoteLocalID[13-1] = 0;
    } else {
      arg1->QuoteLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteActionField_QuoteLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->QuoteLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_ActionLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteActionField_ActionLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteActionField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteActionField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteActionField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_OrderActionStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderActionStatus = arg2;
  
}


char _wrap_CThostFtdcQuoteActionField_OrderActionStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteActionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_StatusMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteActionField_StatusMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->StatusMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteActionField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_BranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteActionField_BranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteActionField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteActionField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQuoteActionField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQuoteActionField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQuoteActionField *_wrap_new_CThostFtdcQuoteActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQuoteActionField *result = 0 ;
  CThostFtdcQuoteActionField *_swig_go_result;
  
  
  result = (CThostFtdcQuoteActionField *)new CThostFtdcQuoteActionField();
  *(CThostFtdcQuoteActionField **)&_swig_go_result = (CThostFtdcQuoteActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQuoteActionField_goctp_ef6abdc493ff8ae2(CThostFtdcQuoteActionField *_swig_go_0) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  
  arg1 = *(CThostFtdcQuoteActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryQuoteField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryQuoteField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteField *_swig_go_0) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryQuoteField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryQuoteField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteField *_swig_go_0) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryQuoteField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryQuoteField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteField *_swig_go_0) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryQuoteField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryQuoteField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteField *_swig_go_0) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryQuoteField_QuoteSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteSysID, (const char *)arg2, 21-1);
      arg1->QuoteSysID[21-1] = 0;
    } else {
      arg1->QuoteSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryQuoteField_QuoteSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteField *_swig_go_0) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->QuoteSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryQuoteField_InsertTimeStart_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeStart, (const char *)arg2, 9-1);
      arg1->InsertTimeStart[9-1] = 0;
    } else {
      arg1->InsertTimeStart[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryQuoteField_InsertTimeStart_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteField *_swig_go_0) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertTimeStart);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryQuoteField_InsertTimeEnd_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeEnd, (const char *)arg2, 9-1);
      arg1->InsertTimeEnd[9-1] = 0;
    } else {
      arg1->InsertTimeEnd[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryQuoteField_InsertTimeEnd_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteField *_swig_go_0) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertTimeEnd);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryQuoteField *_wrap_new_CThostFtdcQryQuoteField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryQuoteField *result = 0 ;
  CThostFtdcQryQuoteField *_swig_go_result;
  
  
  result = (CThostFtdcQryQuoteField *)new CThostFtdcQryQuoteField();
  *(CThostFtdcQryQuoteField **)&_swig_go_result = (CThostFtdcQryQuoteField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryQuoteField_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteField *_swig_go_0) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  
  arg1 = *(CThostFtdcQryQuoteField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcExchangeQuoteField_AskPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->AskPrice = arg2;
  
}


double _wrap_CThostFtdcExchangeQuoteField_AskPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->AskPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_BidPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, double _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->BidPrice = arg2;
  
}


double _wrap_CThostFtdcExchangeQuoteField_BidPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->BidPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_AskVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->AskVolume = arg2;
  
}


intgo _wrap_CThostFtdcExchangeQuoteField_AskVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_BidVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->BidVolume = arg2;
  
}


intgo _wrap_CThostFtdcExchangeQuoteField_BidVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcExchangeQuoteField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_AskOffsetFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcOffsetFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->AskOffsetFlag = arg2;
  
}


char _wrap_CThostFtdcExchangeQuoteField_AskOffsetFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOffsetFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcOffsetFlagType) ((arg1)->AskOffsetFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_BidOffsetFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcOffsetFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BidOffsetFlag = arg2;
  
}


char _wrap_CThostFtdcExchangeQuoteField_BidOffsetFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOffsetFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcOffsetFlagType) ((arg1)->BidOffsetFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_AskHedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->AskHedgeFlag = arg2;
  
}


char _wrap_CThostFtdcExchangeQuoteField_AskHedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->AskHedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_BidHedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BidHedgeFlag = arg2;
  
}


char _wrap_CThostFtdcExchangeQuoteField_BidHedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->BidHedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_QuoteLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteLocalID, (const char *)arg2, 13-1);
      arg1->QuoteLocalID[13-1] = 0;
    } else {
      arg1->QuoteLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteField_QuoteLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->QuoteLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcExchangeQuoteField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_NotifySequence_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->NotifySequence = arg2;
  
}


intgo _wrap_CThostFtdcExchangeQuoteField_NotifySequence_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_OrderSubmitStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderSubmitStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
  
}


char _wrap_CThostFtdcExchangeQuoteField_OrderSubmitStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_SettlementID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcSettlementIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementID = arg2;
  
}


intgo _wrap_CThostFtdcExchangeQuoteField_SettlementID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcSettlementIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_QuoteSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteSysID, (const char *)arg2, 21-1);
      arg1->QuoteSysID[21-1] = 0;
    } else {
      arg1->QuoteSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteField_QuoteSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->QuoteSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_InsertDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteField_InsertDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_InsertTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteField_InsertTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_CancelTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteField_CancelTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CancelTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_QuoteStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOrderStatusType arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->QuoteStatus = arg2;
  
}


char _wrap_CThostFtdcExchangeQuoteField_QuoteStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOrderStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderStatusType) ((arg1)->QuoteStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_ClearingPartID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteField_ClearingPartID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClearingPartID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_SequenceNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->SequenceNo = arg2;
  
}


intgo _wrap_CThostFtdcExchangeQuoteField_SequenceNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_AskOrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AskOrderSysID, (const char *)arg2, 21-1);
      arg1->AskOrderSysID[21-1] = 0;
    } else {
      arg1->AskOrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteField_AskOrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AskOrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_BidOrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BidOrderSysID, (const char *)arg2, 21-1);
      arg1->BidOrderSysID[21-1] = 0;
    } else {
      arg1->BidOrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteField_BidOrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BidOrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_ForQuoteSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteSysID, (const char *)arg2, 21-1);
      arg1->ForQuoteSysID[21-1] = 0;
    } else {
      arg1->ForQuoteSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteField_ForQuoteSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ForQuoteSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_BranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteField_BranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcExchangeQuoteField *_wrap_new_CThostFtdcExchangeQuoteField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcExchangeQuoteField *result = 0 ;
  CThostFtdcExchangeQuoteField *_swig_go_result;
  
  
  result = (CThostFtdcExchangeQuoteField *)new CThostFtdcExchangeQuoteField();
  *(CThostFtdcExchangeQuoteField **)&_swig_go_result = (CThostFtdcExchangeQuoteField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcExchangeQuoteField_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteField *_swig_go_0) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  
  arg1 = *(CThostFtdcExchangeQuoteField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryExchangeQuoteField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeQuoteField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeQuoteField *_swig_go_0) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeQuoteField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeQuoteField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeQuoteField *_swig_go_0) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeQuoteField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeQuoteField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeQuoteField *_swig_go_0) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeQuoteField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeQuoteField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeQuoteField *_swig_go_0) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeQuoteField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeQuoteField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeQuoteField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeQuoteField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeQuoteField *_swig_go_0) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeQuoteField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryExchangeQuoteField *_wrap_new_CThostFtdcQryExchangeQuoteField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryExchangeQuoteField *result = 0 ;
  CThostFtdcQryExchangeQuoteField *_swig_go_result;
  
  
  result = (CThostFtdcQryExchangeQuoteField *)new CThostFtdcQryExchangeQuoteField();
  *(CThostFtdcQryExchangeQuoteField **)&_swig_go_result = (CThostFtdcQryExchangeQuoteField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryExchangeQuoteField_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeQuoteField *_swig_go_0) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  
  arg1 = *(CThostFtdcQryExchangeQuoteField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryQuoteActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryQuoteActionField *arg1 = (CThostFtdcQryQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryQuoteActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteActionField *_swig_go_0) {
  CThostFtdcQryQuoteActionField *arg1 = (CThostFtdcQryQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryQuoteActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryQuoteActionField *arg1 = (CThostFtdcQryQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryQuoteActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteActionField *_swig_go_0) {
  CThostFtdcQryQuoteActionField *arg1 = (CThostFtdcQryQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryQuoteActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryQuoteActionField *arg1 = (CThostFtdcQryQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryQuoteActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteActionField *_swig_go_0) {
  CThostFtdcQryQuoteActionField *arg1 = (CThostFtdcQryQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryQuoteActionField *_wrap_new_CThostFtdcQryQuoteActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryQuoteActionField *result = 0 ;
  CThostFtdcQryQuoteActionField *_swig_go_result;
  
  
  result = (CThostFtdcQryQuoteActionField *)new CThostFtdcQryQuoteActionField();
  *(CThostFtdcQryQuoteActionField **)&_swig_go_result = (CThostFtdcQryQuoteActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryQuoteActionField_goctp_ef6abdc493ff8ae2(CThostFtdcQryQuoteActionField *_swig_go_0) {
  CThostFtdcQryQuoteActionField *arg1 = (CThostFtdcQryQuoteActionField *) 0 ;
  
  arg1 = *(CThostFtdcQryQuoteActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcExchangeQuoteActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteActionField_QuoteSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteSysID, (const char *)arg2, 21-1);
      arg1->QuoteSysID[21-1] = 0;
    } else {
      arg1->QuoteSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteActionField_QuoteSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->QuoteSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteActionField_ActionFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcActionFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->ActionFlag = arg2;
  
}


char _wrap_CThostFtdcExchangeQuoteActionField_ActionFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  TThostFtdcActionFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteActionField_ActionDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteActionField_ActionDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteActionField_ActionTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteActionField_ActionTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteActionField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteActionField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteActionField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcExchangeQuoteActionField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteActionField_QuoteLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteLocalID, (const char *)arg2, 13-1);
      arg1->QuoteLocalID[13-1] = 0;
    } else {
      arg1->QuoteLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteActionField_QuoteLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->QuoteLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteActionField_ActionLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteActionField_ActionLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteActionField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteActionField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteActionField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteActionField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteActionField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteActionField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteActionField_OrderActionStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderActionStatus = arg2;
  
}


char _wrap_CThostFtdcExchangeQuoteActionField_OrderActionStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteActionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteActionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteActionField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteActionField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeQuoteActionField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeQuoteActionField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcExchangeQuoteActionField *_wrap_new_CThostFtdcExchangeQuoteActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcExchangeQuoteActionField *result = 0 ;
  CThostFtdcExchangeQuoteActionField *_swig_go_result;
  
  
  result = (CThostFtdcExchangeQuoteActionField *)new CThostFtdcExchangeQuoteActionField();
  *(CThostFtdcExchangeQuoteActionField **)&_swig_go_result = (CThostFtdcExchangeQuoteActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcExchangeQuoteActionField_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  
  arg1 = *(CThostFtdcExchangeQuoteActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryExchangeQuoteActionField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeQuoteActionField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeQuoteActionField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeQuoteActionField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeQuoteActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeQuoteActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeQuoteActionField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeQuoteActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeQuoteActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeQuoteActionField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeQuoteActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryExchangeQuoteActionField *_wrap_new_CThostFtdcQryExchangeQuoteActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryExchangeQuoteActionField *result = 0 ;
  CThostFtdcQryExchangeQuoteActionField *_swig_go_result;
  
  
  result = (CThostFtdcQryExchangeQuoteActionField *)new CThostFtdcQryExchangeQuoteActionField();
  *(CThostFtdcQryExchangeQuoteActionField **)&_swig_go_result = (CThostFtdcQryExchangeQuoteActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryExchangeQuoteActionField_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeQuoteActionField *_swig_go_0) {
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  
  arg1 = *(CThostFtdcQryExchangeQuoteActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcOptionInstrDeltaField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrDeltaField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrDeltaField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOptionInstrDeltaField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrDeltaField *_swig_go_0) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrDeltaField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrDeltaField_InvestorRange_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrDeltaField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrDeltaField **)&_swig_go_0; 
  arg2 = (TThostFtdcInvestorRangeType)_swig_go_1; 
  
  if (arg1) (arg1)->InvestorRange = arg2;
  
}


char _wrap_CThostFtdcOptionInstrDeltaField_InvestorRange_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrDeltaField *_swig_go_0) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  TThostFtdcInvestorRangeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrDeltaField **)&_swig_go_0; 
  
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrDeltaField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrDeltaField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrDeltaField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOptionInstrDeltaField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrDeltaField *_swig_go_0) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrDeltaField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrDeltaField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrDeltaField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrDeltaField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOptionInstrDeltaField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrDeltaField *_swig_go_0) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrDeltaField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOptionInstrDeltaField_Delta_set_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrDeltaField *_swig_go_0, double _swig_go_1) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcOptionInstrDeltaField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->Delta = arg2;
  
}


double _wrap_CThostFtdcOptionInstrDeltaField_Delta_get_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrDeltaField *_swig_go_0) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcOptionInstrDeltaField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->Delta);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcOptionInstrDeltaField *_wrap_new_CThostFtdcOptionInstrDeltaField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcOptionInstrDeltaField *result = 0 ;
  CThostFtdcOptionInstrDeltaField *_swig_go_result;
  
  
  result = (CThostFtdcOptionInstrDeltaField *)new CThostFtdcOptionInstrDeltaField();
  *(CThostFtdcOptionInstrDeltaField **)&_swig_go_result = (CThostFtdcOptionInstrDeltaField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcOptionInstrDeltaField_goctp_ef6abdc493ff8ae2(CThostFtdcOptionInstrDeltaField *_swig_go_0) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  
  arg1 = *(CThostFtdcOptionInstrDeltaField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcForQuoteRspField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteRspField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteRspField *_swig_go_0) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteRspField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteRspField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteRspField *_swig_go_0) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteRspField_ForQuoteSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteSysID, (const char *)arg2, 21-1);
      arg1->ForQuoteSysID[21-1] = 0;
    } else {
      arg1->ForQuoteSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteRspField_ForQuoteSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteRspField *_swig_go_0) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ForQuoteSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteRspField_ForQuoteTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteTime, (const char *)arg2, 9-1);
      arg1->ForQuoteTime[9-1] = 0;
    } else {
      arg1->ForQuoteTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteRspField_ForQuoteTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteRspField *_swig_go_0) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ForQuoteTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteRspField_ActionDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDay, (const char *)arg2, 9-1);
      arg1->ActionDay[9-1] = 0;
    } else {
      arg1->ActionDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteRspField_ActionDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteRspField *_swig_go_0) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteRspField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteRspField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteRspField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteRspField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteRspField *_swig_go_0) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteRspField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcForQuoteRspField *_wrap_new_CThostFtdcForQuoteRspField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcForQuoteRspField *result = 0 ;
  CThostFtdcForQuoteRspField *_swig_go_result;
  
  
  result = (CThostFtdcForQuoteRspField *)new CThostFtdcForQuoteRspField();
  *(CThostFtdcForQuoteRspField **)&_swig_go_result = (CThostFtdcForQuoteRspField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcForQuoteRspField_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteRspField *_swig_go_0) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  
  arg1 = *(CThostFtdcForQuoteRspField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcStrikeOffsetField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcStrikeOffsetField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcStrikeOffsetField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcStrikeOffsetField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcStrikeOffsetField *_swig_go_0) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcStrikeOffsetField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcStrikeOffsetField_InvestorRange_set_goctp_ef6abdc493ff8ae2(CThostFtdcStrikeOffsetField *_swig_go_0, char _swig_go_1) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = *(CThostFtdcStrikeOffsetField **)&_swig_go_0; 
  arg2 = (TThostFtdcInvestorRangeType)_swig_go_1; 
  
  if (arg1) (arg1)->InvestorRange = arg2;
  
}


char _wrap_CThostFtdcStrikeOffsetField_InvestorRange_get_goctp_ef6abdc493ff8ae2(CThostFtdcStrikeOffsetField *_swig_go_0) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  TThostFtdcInvestorRangeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcStrikeOffsetField **)&_swig_go_0; 
  
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcStrikeOffsetField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcStrikeOffsetField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcStrikeOffsetField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcStrikeOffsetField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcStrikeOffsetField *_swig_go_0) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcStrikeOffsetField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcStrikeOffsetField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcStrikeOffsetField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcStrikeOffsetField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcStrikeOffsetField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcStrikeOffsetField *_swig_go_0) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcStrikeOffsetField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcStrikeOffsetField_Offset_set_goctp_ef6abdc493ff8ae2(CThostFtdcStrikeOffsetField *_swig_go_0, double _swig_go_1) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcStrikeOffsetField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Offset = arg2;
  
}


double _wrap_CThostFtdcStrikeOffsetField_Offset_get_goctp_ef6abdc493ff8ae2(CThostFtdcStrikeOffsetField *_swig_go_0) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcStrikeOffsetField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Offset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcStrikeOffsetField_OffsetType_set_goctp_ef6abdc493ff8ae2(CThostFtdcStrikeOffsetField *_swig_go_0, char _swig_go_1) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  TThostFtdcStrikeOffsetTypeType arg2 ;
  
  arg1 = *(CThostFtdcStrikeOffsetField **)&_swig_go_0; 
  arg2 = (TThostFtdcStrikeOffsetTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->OffsetType = arg2;
  
}


char _wrap_CThostFtdcStrikeOffsetField_OffsetType_get_goctp_ef6abdc493ff8ae2(CThostFtdcStrikeOffsetField *_swig_go_0) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  TThostFtdcStrikeOffsetTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcStrikeOffsetField **)&_swig_go_0; 
  
  result = (TThostFtdcStrikeOffsetTypeType) ((arg1)->OffsetType);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcStrikeOffsetField *_wrap_new_CThostFtdcStrikeOffsetField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcStrikeOffsetField *result = 0 ;
  CThostFtdcStrikeOffsetField *_swig_go_result;
  
  
  result = (CThostFtdcStrikeOffsetField *)new CThostFtdcStrikeOffsetField();
  *(CThostFtdcStrikeOffsetField **)&_swig_go_result = (CThostFtdcStrikeOffsetField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcStrikeOffsetField_goctp_ef6abdc493ff8ae2(CThostFtdcStrikeOffsetField *_swig_go_0) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  
  arg1 = *(CThostFtdcStrikeOffsetField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryStrikeOffsetField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryStrikeOffsetField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryStrikeOffsetField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryStrikeOffsetField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryStrikeOffsetField *_swig_go_0) {
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryStrikeOffsetField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryStrikeOffsetField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryStrikeOffsetField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryStrikeOffsetField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryStrikeOffsetField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryStrikeOffsetField *_swig_go_0) {
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryStrikeOffsetField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryStrikeOffsetField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryStrikeOffsetField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryStrikeOffsetField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryStrikeOffsetField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryStrikeOffsetField *_swig_go_0) {
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryStrikeOffsetField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryStrikeOffsetField *_wrap_new_CThostFtdcQryStrikeOffsetField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryStrikeOffsetField *result = 0 ;
  CThostFtdcQryStrikeOffsetField *_swig_go_result;
  
  
  result = (CThostFtdcQryStrikeOffsetField *)new CThostFtdcQryStrikeOffsetField();
  *(CThostFtdcQryStrikeOffsetField **)&_swig_go_result = (CThostFtdcQryStrikeOffsetField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryStrikeOffsetField_goctp_ef6abdc493ff8ae2(CThostFtdcQryStrikeOffsetField *_swig_go_0) {
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  
  arg1 = *(CThostFtdcQryStrikeOffsetField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInputBatchOrderActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputBatchOrderActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputBatchOrderActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputBatchOrderActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputBatchOrderActionField_OrderActionRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionRefType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderActionRef = arg2;
  
}


intgo _wrap_CThostFtdcInputBatchOrderActionField_OrderActionRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionRefType) ((arg1)->OrderActionRef);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputBatchOrderActionField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcInputBatchOrderActionField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputBatchOrderActionField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcInputBatchOrderActionField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputBatchOrderActionField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcInputBatchOrderActionField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputBatchOrderActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputBatchOrderActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputBatchOrderActionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputBatchOrderActionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputBatchOrderActionField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputBatchOrderActionField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputBatchOrderActionField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputBatchOrderActionField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputBatchOrderActionField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputBatchOrderActionField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcInputBatchOrderActionField *_wrap_new_CThostFtdcInputBatchOrderActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInputBatchOrderActionField *result = 0 ;
  CThostFtdcInputBatchOrderActionField *_swig_go_result;
  
  
  result = (CThostFtdcInputBatchOrderActionField *)new CThostFtdcInputBatchOrderActionField();
  *(CThostFtdcInputBatchOrderActionField **)&_swig_go_result = (CThostFtdcInputBatchOrderActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInputBatchOrderActionField_goctp_ef6abdc493ff8ae2(CThostFtdcInputBatchOrderActionField *_swig_go_0) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  
  arg1 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcBatchOrderActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBatchOrderActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBatchOrderActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBatchOrderActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBatchOrderActionField_OrderActionRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionRefType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderActionRef = arg2;
  
}


intgo _wrap_CThostFtdcBatchOrderActionField_OrderActionRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionRefType) ((arg1)->OrderActionRef);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBatchOrderActionField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcBatchOrderActionField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBatchOrderActionField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcBatchOrderActionField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBatchOrderActionField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcBatchOrderActionField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBatchOrderActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBatchOrderActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBatchOrderActionField_ActionDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBatchOrderActionField_ActionDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBatchOrderActionField_ActionTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBatchOrderActionField_ActionTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBatchOrderActionField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBatchOrderActionField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBatchOrderActionField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcBatchOrderActionField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBatchOrderActionField_ActionLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBatchOrderActionField_ActionLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBatchOrderActionField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBatchOrderActionField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBatchOrderActionField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBatchOrderActionField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBatchOrderActionField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBatchOrderActionField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBatchOrderActionField_OrderActionStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderActionStatus = arg2;
  
}


char _wrap_CThostFtdcBatchOrderActionField_OrderActionStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBatchOrderActionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBatchOrderActionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBatchOrderActionField_StatusMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBatchOrderActionField_StatusMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->StatusMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBatchOrderActionField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBatchOrderActionField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBatchOrderActionField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBatchOrderActionField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBatchOrderActionField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBatchOrderActionField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcBatchOrderActionField *_wrap_new_CThostFtdcBatchOrderActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcBatchOrderActionField *result = 0 ;
  CThostFtdcBatchOrderActionField *_swig_go_result;
  
  
  result = (CThostFtdcBatchOrderActionField *)new CThostFtdcBatchOrderActionField();
  *(CThostFtdcBatchOrderActionField **)&_swig_go_result = (CThostFtdcBatchOrderActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcBatchOrderActionField_goctp_ef6abdc493ff8ae2(CThostFtdcBatchOrderActionField *_swig_go_0) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  
  arg1 = *(CThostFtdcBatchOrderActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcExchangeBatchOrderActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeBatchOrderActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeBatchOrderActionField_ActionDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeBatchOrderActionField_ActionDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeBatchOrderActionField_ActionTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeBatchOrderActionField_ActionTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeBatchOrderActionField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeBatchOrderActionField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeBatchOrderActionField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcExchangeBatchOrderActionField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeBatchOrderActionField_ActionLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeBatchOrderActionField_ActionLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeBatchOrderActionField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeBatchOrderActionField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeBatchOrderActionField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeBatchOrderActionField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeBatchOrderActionField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeBatchOrderActionField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeBatchOrderActionField_OrderActionStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderActionStatus = arg2;
  
}


char _wrap_CThostFtdcExchangeBatchOrderActionField_OrderActionStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeBatchOrderActionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeBatchOrderActionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeBatchOrderActionField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeBatchOrderActionField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeBatchOrderActionField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeBatchOrderActionField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcExchangeBatchOrderActionField *_wrap_new_CThostFtdcExchangeBatchOrderActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcExchangeBatchOrderActionField *result = 0 ;
  CThostFtdcExchangeBatchOrderActionField *_swig_go_result;
  
  
  result = (CThostFtdcExchangeBatchOrderActionField *)new CThostFtdcExchangeBatchOrderActionField();
  *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_result = (CThostFtdcExchangeBatchOrderActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcExchangeBatchOrderActionField_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeBatchOrderActionField *_swig_go_0) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  
  arg1 = *(CThostFtdcExchangeBatchOrderActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryBatchOrderActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryBatchOrderActionField *arg1 = (CThostFtdcQryBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryBatchOrderActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBatchOrderActionField *_swig_go_0) {
  CThostFtdcQryBatchOrderActionField *arg1 = (CThostFtdcQryBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryBatchOrderActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryBatchOrderActionField *arg1 = (CThostFtdcQryBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryBatchOrderActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBatchOrderActionField *_swig_go_0) {
  CThostFtdcQryBatchOrderActionField *arg1 = (CThostFtdcQryBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryBatchOrderActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBatchOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryBatchOrderActionField *arg1 = (CThostFtdcQryBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryBatchOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryBatchOrderActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBatchOrderActionField *_swig_go_0) {
  CThostFtdcQryBatchOrderActionField *arg1 = (CThostFtdcQryBatchOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryBatchOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryBatchOrderActionField *_wrap_new_CThostFtdcQryBatchOrderActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryBatchOrderActionField *result = 0 ;
  CThostFtdcQryBatchOrderActionField *_swig_go_result;
  
  
  result = (CThostFtdcQryBatchOrderActionField *)new CThostFtdcQryBatchOrderActionField();
  *(CThostFtdcQryBatchOrderActionField **)&_swig_go_result = (CThostFtdcQryBatchOrderActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryBatchOrderActionField_goctp_ef6abdc493ff8ae2(CThostFtdcQryBatchOrderActionField *_swig_go_0) {
  CThostFtdcQryBatchOrderActionField *arg1 = (CThostFtdcQryBatchOrderActionField *) 0 ;
  
  arg1 = *(CThostFtdcQryBatchOrderActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcCombInstrumentGuardField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombInstrumentGuardField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCombInstrumentGuardField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCombInstrumentGuardField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombInstrumentGuardField *_swig_go_0) {
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCombInstrumentGuardField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombInstrumentGuardField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombInstrumentGuardField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCombInstrumentGuardField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCombInstrumentGuardField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombInstrumentGuardField *_swig_go_0) {
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCombInstrumentGuardField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombInstrumentGuardField_GuarantRatio_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombInstrumentGuardField *_swig_go_0, double _swig_go_1) {
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcCombInstrumentGuardField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->GuarantRatio = arg2;
  
}


double _wrap_CThostFtdcCombInstrumentGuardField_GuarantRatio_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombInstrumentGuardField *_swig_go_0) {
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcCombInstrumentGuardField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->GuarantRatio);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcCombInstrumentGuardField *_wrap_new_CThostFtdcCombInstrumentGuardField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcCombInstrumentGuardField *result = 0 ;
  CThostFtdcCombInstrumentGuardField *_swig_go_result;
  
  
  result = (CThostFtdcCombInstrumentGuardField *)new CThostFtdcCombInstrumentGuardField();
  *(CThostFtdcCombInstrumentGuardField **)&_swig_go_result = (CThostFtdcCombInstrumentGuardField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcCombInstrumentGuardField_goctp_ef6abdc493ff8ae2(CThostFtdcCombInstrumentGuardField *_swig_go_0) {
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  
  arg1 = *(CThostFtdcCombInstrumentGuardField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryCombInstrumentGuardField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryCombInstrumentGuardField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryCombInstrumentGuardField *arg1 = (CThostFtdcQryCombInstrumentGuardField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryCombInstrumentGuardField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryCombInstrumentGuardField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryCombInstrumentGuardField *_swig_go_0) {
  CThostFtdcQryCombInstrumentGuardField *arg1 = (CThostFtdcQryCombInstrumentGuardField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryCombInstrumentGuardField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryCombInstrumentGuardField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryCombInstrumentGuardField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryCombInstrumentGuardField *arg1 = (CThostFtdcQryCombInstrumentGuardField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryCombInstrumentGuardField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryCombInstrumentGuardField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryCombInstrumentGuardField *_swig_go_0) {
  CThostFtdcQryCombInstrumentGuardField *arg1 = (CThostFtdcQryCombInstrumentGuardField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryCombInstrumentGuardField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryCombInstrumentGuardField *_wrap_new_CThostFtdcQryCombInstrumentGuardField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryCombInstrumentGuardField *result = 0 ;
  CThostFtdcQryCombInstrumentGuardField *_swig_go_result;
  
  
  result = (CThostFtdcQryCombInstrumentGuardField *)new CThostFtdcQryCombInstrumentGuardField();
  *(CThostFtdcQryCombInstrumentGuardField **)&_swig_go_result = (CThostFtdcQryCombInstrumentGuardField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryCombInstrumentGuardField_goctp_ef6abdc493ff8ae2(CThostFtdcQryCombInstrumentGuardField *_swig_go_0) {
  CThostFtdcQryCombInstrumentGuardField *arg1 = (CThostFtdcQryCombInstrumentGuardField *) 0 ;
  
  arg1 = *(CThostFtdcQryCombInstrumentGuardField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInputCombActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputCombActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputCombActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputCombActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputCombActionField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputCombActionField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputCombActionField_CombActionRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CombActionRef, (const char *)arg2, 13-1);
      arg1->CombActionRef[13-1] = 0;
    } else {
      arg1->CombActionRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputCombActionField_CombActionRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CombActionRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputCombActionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputCombActionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputCombActionField_Direction_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->Direction = arg2;
  
}


char _wrap_CThostFtdcInputCombActionField_Direction_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputCombActionField_Volume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->Volume = arg2;
  
}


intgo _wrap_CThostFtdcInputCombActionField_Volume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputCombActionField_CombDirection_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcCombDirectionType arg2 ;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcCombDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->CombDirection = arg2;
  
}


char _wrap_CThostFtdcInputCombActionField_CombDirection_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcCombDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcCombDirectionType) ((arg1)->CombDirection);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputCombActionField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcInputCombActionField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputCombActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputCombActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputCombActionField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputCombActionField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInputCombActionField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInputCombActionField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcInputCombActionField *_wrap_new_CThostFtdcInputCombActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInputCombActionField *result = 0 ;
  CThostFtdcInputCombActionField *_swig_go_result;
  
  
  result = (CThostFtdcInputCombActionField *)new CThostFtdcInputCombActionField();
  *(CThostFtdcInputCombActionField **)&_swig_go_result = (CThostFtdcInputCombActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInputCombActionField_goctp_ef6abdc493ff8ae2(CThostFtdcInputCombActionField *_swig_go_0) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  
  arg1 = *(CThostFtdcInputCombActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcCombActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCombActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCombActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCombActionField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_CombActionRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CombActionRef, (const char *)arg2, 13-1);
      arg1->CombActionRef[13-1] = 0;
    } else {
      arg1->CombActionRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCombActionField_CombActionRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CombActionRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCombActionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_Direction_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->Direction = arg2;
  
}


char _wrap_CThostFtdcCombActionField_Direction_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_Volume_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->Volume = arg2;
  
}


intgo _wrap_CThostFtdcCombActionField_Volume_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_CombDirection_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcCombDirectionType arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcCombDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->CombDirection = arg2;
  
}


char _wrap_CThostFtdcCombActionField_CombDirection_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcCombDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcCombDirectionType) ((arg1)->CombDirection);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcCombActionField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_ActionLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCombActionField_ActionLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCombActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCombActionField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCombActionField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCombActionField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCombActionField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcCombActionField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_ActionStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->ActionStatus = arg2;
  
}


char _wrap_CThostFtdcCombActionField_ActionStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionStatusType) ((arg1)->ActionStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_NotifySequence_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->NotifySequence = arg2;
  
}


intgo _wrap_CThostFtdcCombActionField_NotifySequence_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCombActionField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_SettlementID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSettlementIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementID = arg2;
  
}


intgo _wrap_CThostFtdcCombActionField_SettlementID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSettlementIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_SequenceNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->SequenceNo = arg2;
  
}


intgo _wrap_CThostFtdcCombActionField_SequenceNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcCombActionField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcCombActionField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_UserProductInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCombActionField_UserProductInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserProductInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_StatusMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCombActionField_StatusMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->StatusMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCombActionField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombActionField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCombActionField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcCombActionField *_wrap_new_CThostFtdcCombActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcCombActionField *result = 0 ;
  CThostFtdcCombActionField *_swig_go_result;
  
  
  result = (CThostFtdcCombActionField *)new CThostFtdcCombActionField();
  *(CThostFtdcCombActionField **)&_swig_go_result = (CThostFtdcCombActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcCombActionField_goctp_ef6abdc493ff8ae2(CThostFtdcCombActionField *_swig_go_0) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  
  arg1 = *(CThostFtdcCombActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryCombActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryCombActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryCombActionField *_swig_go_0) {
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryCombActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryCombActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryCombActionField *_swig_go_0) {
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryCombActionField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryCombActionField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryCombActionField *_swig_go_0) {
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryCombActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryCombActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryCombActionField *_swig_go_0) {
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryCombActionField *_wrap_new_CThostFtdcQryCombActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryCombActionField *result = 0 ;
  CThostFtdcQryCombActionField *_swig_go_result;
  
  
  result = (CThostFtdcQryCombActionField *)new CThostFtdcQryCombActionField();
  *(CThostFtdcQryCombActionField **)&_swig_go_result = (CThostFtdcQryCombActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryCombActionField_goctp_ef6abdc493ff8ae2(CThostFtdcQryCombActionField *_swig_go_0) {
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  
  arg1 = *(CThostFtdcQryCombActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcExchangeCombActionField_Direction_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->Direction = arg2;
  
}


char _wrap_CThostFtdcExchangeCombActionField_Direction_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeCombActionField_Volume_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->Volume = arg2;
  
}


intgo _wrap_CThostFtdcExchangeCombActionField_Volume_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeCombActionField_CombDirection_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcCombDirectionType arg2 ;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcCombDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->CombDirection = arg2;
  
}


char _wrap_CThostFtdcExchangeCombActionField_CombDirection_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcCombDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcCombDirectionType) ((arg1)->CombDirection);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeCombActionField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcExchangeCombActionField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeCombActionField_ActionLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeCombActionField_ActionLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeCombActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeCombActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeCombActionField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeCombActionField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeCombActionField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeCombActionField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeCombActionField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeCombActionField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeCombActionField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeCombActionField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeCombActionField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcExchangeCombActionField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeCombActionField_ActionStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->ActionStatus = arg2;
  
}


char _wrap_CThostFtdcExchangeCombActionField_ActionStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionStatusType) ((arg1)->ActionStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeCombActionField_NotifySequence_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->NotifySequence = arg2;
  
}


intgo _wrap_CThostFtdcExchangeCombActionField_NotifySequence_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeCombActionField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeCombActionField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeCombActionField_SettlementID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSettlementIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementID = arg2;
  
}


intgo _wrap_CThostFtdcExchangeCombActionField_SettlementID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcSettlementIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeCombActionField_SequenceNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->SequenceNo = arg2;
  
}


intgo _wrap_CThostFtdcExchangeCombActionField_SequenceNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeCombActionField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeCombActionField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeCombActionField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeCombActionField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcExchangeCombActionField *_wrap_new_CThostFtdcExchangeCombActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcExchangeCombActionField *result = 0 ;
  CThostFtdcExchangeCombActionField *_swig_go_result;
  
  
  result = (CThostFtdcExchangeCombActionField *)new CThostFtdcExchangeCombActionField();
  *(CThostFtdcExchangeCombActionField **)&_swig_go_result = (CThostFtdcExchangeCombActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcExchangeCombActionField_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeCombActionField *_swig_go_0) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  
  arg1 = *(CThostFtdcExchangeCombActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryExchangeCombActionField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeCombActionField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeCombActionField *_swig_go_0) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeCombActionField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeCombActionField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeCombActionField *_swig_go_0) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeCombActionField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeCombActionField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeCombActionField *_swig_go_0) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeCombActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeCombActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeCombActionField *_swig_go_0) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryExchangeCombActionField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeCombActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeCombActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeCombActionField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeCombActionField *_swig_go_0) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeCombActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryExchangeCombActionField *_wrap_new_CThostFtdcQryExchangeCombActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryExchangeCombActionField *result = 0 ;
  CThostFtdcQryExchangeCombActionField *_swig_go_result;
  
  
  result = (CThostFtdcQryExchangeCombActionField *)new CThostFtdcQryExchangeCombActionField();
  *(CThostFtdcQryExchangeCombActionField **)&_swig_go_result = (CThostFtdcQryExchangeCombActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryExchangeCombActionField_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeCombActionField *_swig_go_0) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  
  arg1 = *(CThostFtdcQryExchangeCombActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcProductExchRateField_ProductID_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductExchRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcProductExchRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 31-1);
      arg1->ProductID[31-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcProductExchRateField_ProductID_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductExchRateField *_swig_go_0) {
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcProductExchRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ProductID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcProductExchRateField_QuoteCurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductExchRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcProductExchRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteCurrencyID, (const char *)arg2, 4-1);
      arg1->QuoteCurrencyID[4-1] = 0;
    } else {
      arg1->QuoteCurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcProductExchRateField_QuoteCurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductExchRateField *_swig_go_0) {
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcProductExchRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->QuoteCurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcProductExchRateField_ExchangeRate_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductExchRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  TThostFtdcExchangeRateType arg2 ;
  
  arg1 = *(CThostFtdcProductExchRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcExchangeRateType)_swig_go_1; 
  
  if (arg1) (arg1)->ExchangeRate = arg2;
  
}


double _wrap_CThostFtdcProductExchRateField_ExchangeRate_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductExchRateField *_swig_go_0) {
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  TThostFtdcExchangeRateType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcProductExchRateField **)&_swig_go_0; 
  
  result = (TThostFtdcExchangeRateType) ((arg1)->ExchangeRate);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcProductExchRateField *_wrap_new_CThostFtdcProductExchRateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcProductExchRateField *result = 0 ;
  CThostFtdcProductExchRateField *_swig_go_result;
  
  
  result = (CThostFtdcProductExchRateField *)new CThostFtdcProductExchRateField();
  *(CThostFtdcProductExchRateField **)&_swig_go_result = (CThostFtdcProductExchRateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcProductExchRateField_goctp_ef6abdc493ff8ae2(CThostFtdcProductExchRateField *_swig_go_0) {
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  
  arg1 = *(CThostFtdcProductExchRateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryProductExchRateField_ProductID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryProductExchRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryProductExchRateField *arg1 = (CThostFtdcQryProductExchRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryProductExchRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 31-1);
      arg1->ProductID[31-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryProductExchRateField_ProductID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryProductExchRateField *_swig_go_0) {
  CThostFtdcQryProductExchRateField *arg1 = (CThostFtdcQryProductExchRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryProductExchRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ProductID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryProductExchRateField *_wrap_new_CThostFtdcQryProductExchRateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryProductExchRateField *result = 0 ;
  CThostFtdcQryProductExchRateField *_swig_go_result;
  
  
  result = (CThostFtdcQryProductExchRateField *)new CThostFtdcQryProductExchRateField();
  *(CThostFtdcQryProductExchRateField **)&_swig_go_result = (CThostFtdcQryProductExchRateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryProductExchRateField_goctp_ef6abdc493ff8ae2(CThostFtdcQryProductExchRateField *_swig_go_0) {
  CThostFtdcQryProductExchRateField *arg1 = (CThostFtdcQryProductExchRateField *) 0 ;
  
  arg1 = *(CThostFtdcQryProductExchRateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryForQuoteParamField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryForQuoteParamField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryForQuoteParamField *arg1 = (CThostFtdcQryForQuoteParamField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryForQuoteParamField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryForQuoteParamField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryForQuoteParamField *_swig_go_0) {
  CThostFtdcQryForQuoteParamField *arg1 = (CThostFtdcQryForQuoteParamField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryForQuoteParamField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryForQuoteParamField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryForQuoteParamField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryForQuoteParamField *arg1 = (CThostFtdcQryForQuoteParamField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryForQuoteParamField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryForQuoteParamField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryForQuoteParamField *_swig_go_0) {
  CThostFtdcQryForQuoteParamField *arg1 = (CThostFtdcQryForQuoteParamField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryForQuoteParamField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryForQuoteParamField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryForQuoteParamField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryForQuoteParamField *arg1 = (CThostFtdcQryForQuoteParamField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryForQuoteParamField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryForQuoteParamField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryForQuoteParamField *_swig_go_0) {
  CThostFtdcQryForQuoteParamField *arg1 = (CThostFtdcQryForQuoteParamField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryForQuoteParamField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryForQuoteParamField *_wrap_new_CThostFtdcQryForQuoteParamField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryForQuoteParamField *result = 0 ;
  CThostFtdcQryForQuoteParamField *_swig_go_result;
  
  
  result = (CThostFtdcQryForQuoteParamField *)new CThostFtdcQryForQuoteParamField();
  *(CThostFtdcQryForQuoteParamField **)&_swig_go_result = (CThostFtdcQryForQuoteParamField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryForQuoteParamField_goctp_ef6abdc493ff8ae2(CThostFtdcQryForQuoteParamField *_swig_go_0) {
  CThostFtdcQryForQuoteParamField *arg1 = (CThostFtdcQryForQuoteParamField *) 0 ;
  
  arg1 = *(CThostFtdcQryForQuoteParamField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcForQuoteParamField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteParamField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteParamField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteParamField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteParamField *_swig_go_0) {
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteParamField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteParamField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteParamField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteParamField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteParamField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteParamField *_swig_go_0) {
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteParamField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteParamField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteParamField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcForQuoteParamField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcForQuoteParamField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteParamField *_swig_go_0) {
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteParamField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteParamField_LastPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteParamField *_swig_go_0, double _swig_go_1) {
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcForQuoteParamField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LastPrice = arg2;
  
}


double _wrap_CThostFtdcForQuoteParamField_LastPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteParamField *_swig_go_0) {
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteParamField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LastPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcForQuoteParamField_PriceInterval_set_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteParamField *_swig_go_0, double _swig_go_1) {
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcForQuoteParamField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->PriceInterval = arg2;
  
}


double _wrap_CThostFtdcForQuoteParamField_PriceInterval_get_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteParamField *_swig_go_0) {
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcForQuoteParamField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->PriceInterval);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcForQuoteParamField *_wrap_new_CThostFtdcForQuoteParamField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcForQuoteParamField *result = 0 ;
  CThostFtdcForQuoteParamField *_swig_go_result;
  
  
  result = (CThostFtdcForQuoteParamField *)new CThostFtdcForQuoteParamField();
  *(CThostFtdcForQuoteParamField **)&_swig_go_result = (CThostFtdcForQuoteParamField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcForQuoteParamField_goctp_ef6abdc493ff8ae2(CThostFtdcForQuoteParamField *_swig_go_0) {
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  
  arg1 = *(CThostFtdcForQuoteParamField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcMMOptionInstrCommRateField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMMOptionInstrCommRateField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMMOptionInstrCommRateField_InvestorRange_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0, char _swig_go_1) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcInvestorRangeType)_swig_go_1; 
  
  if (arg1) (arg1)->InvestorRange = arg2;
  
}


char _wrap_CThostFtdcMMOptionInstrCommRateField_InvestorRange_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcInvestorRangeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMMOptionInstrCommRateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMMOptionInstrCommRateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMMOptionInstrCommRateField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMMOptionInstrCommRateField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMMOptionInstrCommRateField_OpenRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcMMOptionInstrCommRateField_OpenRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMMOptionInstrCommRateField_OpenRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcMMOptionInstrCommRateField_OpenRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMMOptionInstrCommRateField_CloseRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcMMOptionInstrCommRateField_CloseRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMMOptionInstrCommRateField_CloseRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcMMOptionInstrCommRateField_CloseRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseTodayRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseTodayRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMMOptionInstrCommRateField_StrikeRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->StrikeRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcMMOptionInstrCommRateField_StrikeRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->StrikeRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMMOptionInstrCommRateField_StrikeRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->StrikeRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcMMOptionInstrCommRateField_StrikeRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->StrikeRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcMMOptionInstrCommRateField *_wrap_new_CThostFtdcMMOptionInstrCommRateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcMMOptionInstrCommRateField *result = 0 ;
  CThostFtdcMMOptionInstrCommRateField *_swig_go_result;
  
  
  result = (CThostFtdcMMOptionInstrCommRateField *)new CThostFtdcMMOptionInstrCommRateField();
  *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_result = (CThostFtdcMMOptionInstrCommRateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcMMOptionInstrCommRateField_goctp_ef6abdc493ff8ae2(CThostFtdcMMOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  
  arg1 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryMMOptionInstrCommRateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryMMOptionInstrCommRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryMMOptionInstrCommRateField *arg1 = (CThostFtdcQryMMOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryMMOptionInstrCommRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryMMOptionInstrCommRateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryMMOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcQryMMOptionInstrCommRateField *arg1 = (CThostFtdcQryMMOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryMMOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryMMOptionInstrCommRateField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryMMOptionInstrCommRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryMMOptionInstrCommRateField *arg1 = (CThostFtdcQryMMOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryMMOptionInstrCommRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryMMOptionInstrCommRateField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryMMOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcQryMMOptionInstrCommRateField *arg1 = (CThostFtdcQryMMOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryMMOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryMMOptionInstrCommRateField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryMMOptionInstrCommRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryMMOptionInstrCommRateField *arg1 = (CThostFtdcQryMMOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryMMOptionInstrCommRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryMMOptionInstrCommRateField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryMMOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcQryMMOptionInstrCommRateField *arg1 = (CThostFtdcQryMMOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryMMOptionInstrCommRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryMMOptionInstrCommRateField *_wrap_new_CThostFtdcQryMMOptionInstrCommRateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryMMOptionInstrCommRateField *result = 0 ;
  CThostFtdcQryMMOptionInstrCommRateField *_swig_go_result;
  
  
  result = (CThostFtdcQryMMOptionInstrCommRateField *)new CThostFtdcQryMMOptionInstrCommRateField();
  *(CThostFtdcQryMMOptionInstrCommRateField **)&_swig_go_result = (CThostFtdcQryMMOptionInstrCommRateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryMMOptionInstrCommRateField_goctp_ef6abdc493ff8ae2(CThostFtdcQryMMOptionInstrCommRateField *_swig_go_0) {
  CThostFtdcQryMMOptionInstrCommRateField *arg1 = (CThostFtdcQryMMOptionInstrCommRateField *) 0 ;
  
  arg1 = *(CThostFtdcQryMMOptionInstrCommRateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcMMInstrumentCommissionRateField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMInstrumentCommissionRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMMInstrumentCommissionRateField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMMInstrumentCommissionRateField_InvestorRange_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMInstrumentCommissionRateField *_swig_go_0, char _swig_go_1) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcInvestorRangeType)_swig_go_1; 
  
  if (arg1) (arg1)->InvestorRange = arg2;
  
}


char _wrap_CThostFtdcMMInstrumentCommissionRateField_InvestorRange_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcInvestorRangeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMMInstrumentCommissionRateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMInstrumentCommissionRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMMInstrumentCommissionRateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMMInstrumentCommissionRateField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMInstrumentCommissionRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMMInstrumentCommissionRateField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMMInstrumentCommissionRateField_OpenRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMInstrumentCommissionRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcMMInstrumentCommissionRateField_OpenRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMMInstrumentCommissionRateField_OpenRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMInstrumentCommissionRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcMMInstrumentCommissionRateField_OpenRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMMInstrumentCommissionRateField_CloseRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMInstrumentCommissionRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcMMInstrumentCommissionRateField_CloseRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMMInstrumentCommissionRateField_CloseRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMInstrumentCommissionRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcMMInstrumentCommissionRateField_CloseRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMInstrumentCommissionRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseTodayRatioByMoney = arg2;
  
}


double _wrap_CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcMMInstrumentCommissionRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseTodayRatioByVolume = arg2;
  
}


double _wrap_CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcMMInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcMMInstrumentCommissionRateField *_wrap_new_CThostFtdcMMInstrumentCommissionRateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcMMInstrumentCommissionRateField *result = 0 ;
  CThostFtdcMMInstrumentCommissionRateField *_swig_go_result;
  
  
  result = (CThostFtdcMMInstrumentCommissionRateField *)new CThostFtdcMMInstrumentCommissionRateField();
  *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_result = (CThostFtdcMMInstrumentCommissionRateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcMMInstrumentCommissionRateField_goctp_ef6abdc493ff8ae2(CThostFtdcMMInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  
  arg1 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryMMInstrumentCommissionRateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryMMInstrumentCommissionRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryMMInstrumentCommissionRateField *arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryMMInstrumentCommissionRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryMMInstrumentCommissionRateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryMMInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcQryMMInstrumentCommissionRateField *arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryMMInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryMMInstrumentCommissionRateField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryMMInstrumentCommissionRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryMMInstrumentCommissionRateField *arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryMMInstrumentCommissionRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryMMInstrumentCommissionRateField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryMMInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcQryMMInstrumentCommissionRateField *arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryMMInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryMMInstrumentCommissionRateField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryMMInstrumentCommissionRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryMMInstrumentCommissionRateField *arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryMMInstrumentCommissionRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryMMInstrumentCommissionRateField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryMMInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcQryMMInstrumentCommissionRateField *arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryMMInstrumentCommissionRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryMMInstrumentCommissionRateField *_wrap_new_CThostFtdcQryMMInstrumentCommissionRateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryMMInstrumentCommissionRateField *result = 0 ;
  CThostFtdcQryMMInstrumentCommissionRateField *_swig_go_result;
  
  
  result = (CThostFtdcQryMMInstrumentCommissionRateField *)new CThostFtdcQryMMInstrumentCommissionRateField();
  *(CThostFtdcQryMMInstrumentCommissionRateField **)&_swig_go_result = (CThostFtdcQryMMInstrumentCommissionRateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryMMInstrumentCommissionRateField_goctp_ef6abdc493ff8ae2(CThostFtdcQryMMInstrumentCommissionRateField *_swig_go_0) {
  CThostFtdcQryMMInstrumentCommissionRateField *arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *) 0 ;
  
  arg1 = *(CThostFtdcQryMMInstrumentCommissionRateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInstrumentOrderCommRateField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentOrderCommRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentOrderCommRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentOrderCommRateField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentOrderCommRateField *_swig_go_0) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentOrderCommRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentOrderCommRateField_InvestorRange_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentOrderCommRateField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentOrderCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcInvestorRangeType)_swig_go_1; 
  
  if (arg1) (arg1)->InvestorRange = arg2;
  
}


char _wrap_CThostFtdcInstrumentOrderCommRateField_InvestorRange_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentOrderCommRateField *_swig_go_0) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  TThostFtdcInvestorRangeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentOrderCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentOrderCommRateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentOrderCommRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentOrderCommRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentOrderCommRateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentOrderCommRateField *_swig_go_0) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentOrderCommRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentOrderCommRateField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentOrderCommRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentOrderCommRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentOrderCommRateField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentOrderCommRateField *_swig_go_0) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentOrderCommRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentOrderCommRateField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentOrderCommRateField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentOrderCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcInstrumentOrderCommRateField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentOrderCommRateField *_swig_go_0) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentOrderCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentOrderCommRateField_OrderCommByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentOrderCommRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentOrderCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderCommByVolume = arg2;
  
}


double _wrap_CThostFtdcInstrumentOrderCommRateField_OrderCommByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentOrderCommRateField *_swig_go_0) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentOrderCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->OrderCommByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentOrderCommRateField_OrderActionCommByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentOrderCommRateField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentOrderCommRateField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderActionCommByVolume = arg2;
  
}


double _wrap_CThostFtdcInstrumentOrderCommRateField_OrderActionCommByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentOrderCommRateField *_swig_go_0) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentOrderCommRateField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->OrderActionCommByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcInstrumentOrderCommRateField *_wrap_new_CThostFtdcInstrumentOrderCommRateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInstrumentOrderCommRateField *result = 0 ;
  CThostFtdcInstrumentOrderCommRateField *_swig_go_result;
  
  
  result = (CThostFtdcInstrumentOrderCommRateField *)new CThostFtdcInstrumentOrderCommRateField();
  *(CThostFtdcInstrumentOrderCommRateField **)&_swig_go_result = (CThostFtdcInstrumentOrderCommRateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInstrumentOrderCommRateField_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentOrderCommRateField *_swig_go_0) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  
  arg1 = *(CThostFtdcInstrumentOrderCommRateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryInstrumentOrderCommRateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentOrderCommRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInstrumentOrderCommRateField *arg1 = (CThostFtdcQryInstrumentOrderCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInstrumentOrderCommRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInstrumentOrderCommRateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentOrderCommRateField *_swig_go_0) {
  CThostFtdcQryInstrumentOrderCommRateField *arg1 = (CThostFtdcQryInstrumentOrderCommRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInstrumentOrderCommRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInstrumentOrderCommRateField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentOrderCommRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInstrumentOrderCommRateField *arg1 = (CThostFtdcQryInstrumentOrderCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInstrumentOrderCommRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInstrumentOrderCommRateField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentOrderCommRateField *_swig_go_0) {
  CThostFtdcQryInstrumentOrderCommRateField *arg1 = (CThostFtdcQryInstrumentOrderCommRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInstrumentOrderCommRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInstrumentOrderCommRateField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentOrderCommRateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInstrumentOrderCommRateField *arg1 = (CThostFtdcQryInstrumentOrderCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInstrumentOrderCommRateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInstrumentOrderCommRateField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentOrderCommRateField *_swig_go_0) {
  CThostFtdcQryInstrumentOrderCommRateField *arg1 = (CThostFtdcQryInstrumentOrderCommRateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInstrumentOrderCommRateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryInstrumentOrderCommRateField *_wrap_new_CThostFtdcQryInstrumentOrderCommRateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryInstrumentOrderCommRateField *result = 0 ;
  CThostFtdcQryInstrumentOrderCommRateField *_swig_go_result;
  
  
  result = (CThostFtdcQryInstrumentOrderCommRateField *)new CThostFtdcQryInstrumentOrderCommRateField();
  *(CThostFtdcQryInstrumentOrderCommRateField **)&_swig_go_result = (CThostFtdcQryInstrumentOrderCommRateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryInstrumentOrderCommRateField_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentOrderCommRateField *_swig_go_0) {
  CThostFtdcQryInstrumentOrderCommRateField *arg1 = (CThostFtdcQryInstrumentOrderCommRateField *) 0 ;
  
  arg1 = *(CThostFtdcQryInstrumentOrderCommRateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcMarketDataField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMarketDataField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMarketDataField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMarketDataField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMarketDataField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_LastPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LastPrice = arg2;
  
}


double _wrap_CThostFtdcMarketDataField_LastPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LastPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_PreSettlementPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->PreSettlementPrice = arg2;
  
}


double _wrap_CThostFtdcMarketDataField_PreSettlementPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->PreSettlementPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_PreClosePrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->PreClosePrice = arg2;
  
}


double _wrap_CThostFtdcMarketDataField_PreClosePrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->PreClosePrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_PreOpenInterest_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcLargeVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->PreOpenInterest = arg2;
  
}


double _wrap_CThostFtdcMarketDataField_PreOpenInterest_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcLargeVolumeType) ((arg1)->PreOpenInterest);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_OpenPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenPrice = arg2;
  
}


double _wrap_CThostFtdcMarketDataField_OpenPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->OpenPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_HighestPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->HighestPrice = arg2;
  
}


double _wrap_CThostFtdcMarketDataField_HighestPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->HighestPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_LowestPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LowestPrice = arg2;
  
}


double _wrap_CThostFtdcMarketDataField_LowestPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LowestPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_Volume_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->Volume = arg2;
  
}


intgo _wrap_CThostFtdcMarketDataField_Volume_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_Turnover_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Turnover = arg2;
  
}


double _wrap_CThostFtdcMarketDataField_Turnover_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Turnover);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_OpenInterest_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcLargeVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenInterest = arg2;
  
}


double _wrap_CThostFtdcMarketDataField_OpenInterest_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcLargeVolumeType) ((arg1)->OpenInterest);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_ClosePrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->ClosePrice = arg2;
  
}


double _wrap_CThostFtdcMarketDataField_ClosePrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->ClosePrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_SettlementPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementPrice = arg2;
  
}


double _wrap_CThostFtdcMarketDataField_SettlementPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->SettlementPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_UpperLimitPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->UpperLimitPrice = arg2;
  
}


double _wrap_CThostFtdcMarketDataField_UpperLimitPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->UpperLimitPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_LowerLimitPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LowerLimitPrice = arg2;
  
}


double _wrap_CThostFtdcMarketDataField_LowerLimitPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LowerLimitPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_PreDelta_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->PreDelta = arg2;
  
}


double _wrap_CThostFtdcMarketDataField_PreDelta_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->PreDelta);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_CurrDelta_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CurrDelta = arg2;
  
}


double _wrap_CThostFtdcMarketDataField_CurrDelta_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CurrDelta);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_UpdateTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UpdateTime, (const char *)arg2, 9-1);
      arg1->UpdateTime[9-1] = 0;
    } else {
      arg1->UpdateTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMarketDataField_UpdateTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UpdateTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_UpdateMillisec_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcMillisecType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  arg2 = (TThostFtdcMillisecType)_swig_go_1; 
  
  if (arg1) (arg1)->UpdateMillisec = arg2;
  
}


intgo _wrap_CThostFtdcMarketDataField_UpdateMillisec_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcMillisecType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (TThostFtdcMillisecType) ((arg1)->UpdateMillisec);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataField_ActionDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDay, (const char *)arg2, 9-1);
      arg1->ActionDay[9-1] = 0;
    } else {
      arg1->ActionDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMarketDataField_ActionDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcMarketDataField *_wrap_new_CThostFtdcMarketDataField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcMarketDataField *result = 0 ;
  CThostFtdcMarketDataField *_swig_go_result;
  
  
  result = (CThostFtdcMarketDataField *)new CThostFtdcMarketDataField();
  *(CThostFtdcMarketDataField **)&_swig_go_result = (CThostFtdcMarketDataField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcMarketDataField_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataField *_swig_go_0) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  
  arg1 = *(CThostFtdcMarketDataField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcMarketDataBaseField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBaseField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMarketDataBaseField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMarketDataBaseField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBaseField *_swig_go_0) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataBaseField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataBaseField_PreSettlementPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBaseField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataBaseField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->PreSettlementPrice = arg2;
  
}


double _wrap_CThostFtdcMarketDataBaseField_PreSettlementPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBaseField *_swig_go_0) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataBaseField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->PreSettlementPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataBaseField_PreClosePrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBaseField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataBaseField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->PreClosePrice = arg2;
  
}


double _wrap_CThostFtdcMarketDataBaseField_PreClosePrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBaseField *_swig_go_0) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataBaseField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->PreClosePrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataBaseField_PreOpenInterest_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBaseField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcLargeVolumeType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataBaseField **)&_swig_go_0; 
  arg2 = (TThostFtdcLargeVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->PreOpenInterest = arg2;
  
}


double _wrap_CThostFtdcMarketDataBaseField_PreOpenInterest_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBaseField *_swig_go_0) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcLargeVolumeType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataBaseField **)&_swig_go_0; 
  
  result = (TThostFtdcLargeVolumeType) ((arg1)->PreOpenInterest);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataBaseField_PreDelta_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBaseField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataBaseField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->PreDelta = arg2;
  
}


double _wrap_CThostFtdcMarketDataBaseField_PreDelta_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBaseField *_swig_go_0) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataBaseField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->PreDelta);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcMarketDataBaseField *_wrap_new_CThostFtdcMarketDataBaseField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcMarketDataBaseField *result = 0 ;
  CThostFtdcMarketDataBaseField *_swig_go_result;
  
  
  result = (CThostFtdcMarketDataBaseField *)new CThostFtdcMarketDataBaseField();
  *(CThostFtdcMarketDataBaseField **)&_swig_go_result = (CThostFtdcMarketDataBaseField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcMarketDataBaseField_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBaseField *_swig_go_0) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  
  arg1 = *(CThostFtdcMarketDataBaseField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcMarketDataStaticField_OpenPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataStaticField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataStaticField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenPrice = arg2;
  
}


double _wrap_CThostFtdcMarketDataStaticField_OpenPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataStaticField *_swig_go_0) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataStaticField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->OpenPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataStaticField_HighestPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataStaticField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataStaticField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->HighestPrice = arg2;
  
}


double _wrap_CThostFtdcMarketDataStaticField_HighestPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataStaticField *_swig_go_0) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataStaticField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->HighestPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataStaticField_LowestPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataStaticField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataStaticField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LowestPrice = arg2;
  
}


double _wrap_CThostFtdcMarketDataStaticField_LowestPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataStaticField *_swig_go_0) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataStaticField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LowestPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataStaticField_ClosePrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataStaticField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataStaticField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->ClosePrice = arg2;
  
}


double _wrap_CThostFtdcMarketDataStaticField_ClosePrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataStaticField *_swig_go_0) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataStaticField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->ClosePrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataStaticField_UpperLimitPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataStaticField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataStaticField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->UpperLimitPrice = arg2;
  
}


double _wrap_CThostFtdcMarketDataStaticField_UpperLimitPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataStaticField *_swig_go_0) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataStaticField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->UpperLimitPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataStaticField_LowerLimitPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataStaticField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataStaticField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LowerLimitPrice = arg2;
  
}


double _wrap_CThostFtdcMarketDataStaticField_LowerLimitPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataStaticField *_swig_go_0) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataStaticField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LowerLimitPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataStaticField_SettlementPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataStaticField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataStaticField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementPrice = arg2;
  
}


double _wrap_CThostFtdcMarketDataStaticField_SettlementPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataStaticField *_swig_go_0) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataStaticField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->SettlementPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataStaticField_CurrDelta_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataStaticField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataStaticField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->CurrDelta = arg2;
  
}


double _wrap_CThostFtdcMarketDataStaticField_CurrDelta_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataStaticField *_swig_go_0) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataStaticField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->CurrDelta);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcMarketDataStaticField *_wrap_new_CThostFtdcMarketDataStaticField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcMarketDataStaticField *result = 0 ;
  CThostFtdcMarketDataStaticField *_swig_go_result;
  
  
  result = (CThostFtdcMarketDataStaticField *)new CThostFtdcMarketDataStaticField();
  *(CThostFtdcMarketDataStaticField **)&_swig_go_result = (CThostFtdcMarketDataStaticField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcMarketDataStaticField_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataStaticField *_swig_go_0) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  
  arg1 = *(CThostFtdcMarketDataStaticField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcMarketDataLastMatchField_LastPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataLastMatchField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataLastMatchField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LastPrice = arg2;
  
}


double _wrap_CThostFtdcMarketDataLastMatchField_LastPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataLastMatchField *_swig_go_0) {
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataLastMatchField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LastPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataLastMatchField_Volume_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataLastMatchField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataLastMatchField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->Volume = arg2;
  
}


intgo _wrap_CThostFtdcMarketDataLastMatchField_Volume_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataLastMatchField *_swig_go_0) {
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataLastMatchField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataLastMatchField_Turnover_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataLastMatchField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataLastMatchField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Turnover = arg2;
  
}


double _wrap_CThostFtdcMarketDataLastMatchField_Turnover_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataLastMatchField *_swig_go_0) {
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataLastMatchField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Turnover);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataLastMatchField_OpenInterest_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataLastMatchField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcLargeVolumeType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataLastMatchField **)&_swig_go_0; 
  arg2 = (TThostFtdcLargeVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenInterest = arg2;
  
}


double _wrap_CThostFtdcMarketDataLastMatchField_OpenInterest_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataLastMatchField *_swig_go_0) {
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcLargeVolumeType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataLastMatchField **)&_swig_go_0; 
  
  result = (TThostFtdcLargeVolumeType) ((arg1)->OpenInterest);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcMarketDataLastMatchField *_wrap_new_CThostFtdcMarketDataLastMatchField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcMarketDataLastMatchField *result = 0 ;
  CThostFtdcMarketDataLastMatchField *_swig_go_result;
  
  
  result = (CThostFtdcMarketDataLastMatchField *)new CThostFtdcMarketDataLastMatchField();
  *(CThostFtdcMarketDataLastMatchField **)&_swig_go_result = (CThostFtdcMarketDataLastMatchField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcMarketDataLastMatchField_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataLastMatchField *_swig_go_0) {
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  
  arg1 = *(CThostFtdcMarketDataLastMatchField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcMarketDataBestPriceField_BidPrice1_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBestPriceField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataBestPriceField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->BidPrice1 = arg2;
  
}


double _wrap_CThostFtdcMarketDataBestPriceField_BidPrice1_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBestPriceField *_swig_go_0) {
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataBestPriceField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->BidPrice1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataBestPriceField_BidVolume1_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBestPriceField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataBestPriceField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->BidVolume1 = arg2;
  
}


intgo _wrap_CThostFtdcMarketDataBestPriceField_BidVolume1_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBestPriceField *_swig_go_0) {
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataBestPriceField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataBestPriceField_AskPrice1_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBestPriceField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataBestPriceField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->AskPrice1 = arg2;
  
}


double _wrap_CThostFtdcMarketDataBestPriceField_AskPrice1_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBestPriceField *_swig_go_0) {
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataBestPriceField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->AskPrice1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataBestPriceField_AskVolume1_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBestPriceField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataBestPriceField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->AskVolume1 = arg2;
  
}


intgo _wrap_CThostFtdcMarketDataBestPriceField_AskVolume1_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBestPriceField *_swig_go_0) {
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataBestPriceField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume1);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcMarketDataBestPriceField *_wrap_new_CThostFtdcMarketDataBestPriceField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcMarketDataBestPriceField *result = 0 ;
  CThostFtdcMarketDataBestPriceField *_swig_go_result;
  
  
  result = (CThostFtdcMarketDataBestPriceField *)new CThostFtdcMarketDataBestPriceField();
  *(CThostFtdcMarketDataBestPriceField **)&_swig_go_result = (CThostFtdcMarketDataBestPriceField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcMarketDataBestPriceField_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBestPriceField *_swig_go_0) {
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  
  arg1 = *(CThostFtdcMarketDataBestPriceField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcMarketDataBid23Field_BidPrice2_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBid23Field *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataBid23Field **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->BidPrice2 = arg2;
  
}


double _wrap_CThostFtdcMarketDataBid23Field_BidPrice2_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBid23Field *_swig_go_0) {
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataBid23Field **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->BidPrice2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataBid23Field_BidVolume2_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBid23Field *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataBid23Field **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->BidVolume2 = arg2;
  
}


intgo _wrap_CThostFtdcMarketDataBid23Field_BidVolume2_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBid23Field *_swig_go_0) {
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataBid23Field **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataBid23Field_BidPrice3_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBid23Field *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataBid23Field **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->BidPrice3 = arg2;
  
}


double _wrap_CThostFtdcMarketDataBid23Field_BidPrice3_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBid23Field *_swig_go_0) {
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataBid23Field **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->BidPrice3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataBid23Field_BidVolume3_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBid23Field *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataBid23Field **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->BidVolume3 = arg2;
  
}


intgo _wrap_CThostFtdcMarketDataBid23Field_BidVolume3_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBid23Field *_swig_go_0) {
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataBid23Field **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume3);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcMarketDataBid23Field *_wrap_new_CThostFtdcMarketDataBid23Field_goctp_ef6abdc493ff8ae2() {
  CThostFtdcMarketDataBid23Field *result = 0 ;
  CThostFtdcMarketDataBid23Field *_swig_go_result;
  
  
  result = (CThostFtdcMarketDataBid23Field *)new CThostFtdcMarketDataBid23Field();
  *(CThostFtdcMarketDataBid23Field **)&_swig_go_result = (CThostFtdcMarketDataBid23Field *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcMarketDataBid23Field_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBid23Field *_swig_go_0) {
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  
  arg1 = *(CThostFtdcMarketDataBid23Field **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcMarketDataAsk23Field_AskPrice2_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataAsk23Field *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataAsk23Field **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->AskPrice2 = arg2;
  
}


double _wrap_CThostFtdcMarketDataAsk23Field_AskPrice2_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataAsk23Field *_swig_go_0) {
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataAsk23Field **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->AskPrice2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataAsk23Field_AskVolume2_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataAsk23Field *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataAsk23Field **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->AskVolume2 = arg2;
  
}


intgo _wrap_CThostFtdcMarketDataAsk23Field_AskVolume2_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataAsk23Field *_swig_go_0) {
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataAsk23Field **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataAsk23Field_AskPrice3_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataAsk23Field *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataAsk23Field **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->AskPrice3 = arg2;
  
}


double _wrap_CThostFtdcMarketDataAsk23Field_AskPrice3_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataAsk23Field *_swig_go_0) {
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataAsk23Field **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->AskPrice3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataAsk23Field_AskVolume3_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataAsk23Field *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataAsk23Field **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->AskVolume3 = arg2;
  
}


intgo _wrap_CThostFtdcMarketDataAsk23Field_AskVolume3_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataAsk23Field *_swig_go_0) {
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataAsk23Field **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume3);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcMarketDataAsk23Field *_wrap_new_CThostFtdcMarketDataAsk23Field_goctp_ef6abdc493ff8ae2() {
  CThostFtdcMarketDataAsk23Field *result = 0 ;
  CThostFtdcMarketDataAsk23Field *_swig_go_result;
  
  
  result = (CThostFtdcMarketDataAsk23Field *)new CThostFtdcMarketDataAsk23Field();
  *(CThostFtdcMarketDataAsk23Field **)&_swig_go_result = (CThostFtdcMarketDataAsk23Field *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcMarketDataAsk23Field_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataAsk23Field *_swig_go_0) {
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  
  arg1 = *(CThostFtdcMarketDataAsk23Field **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcMarketDataBid45Field_BidPrice4_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBid45Field *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataBid45Field **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->BidPrice4 = arg2;
  
}


double _wrap_CThostFtdcMarketDataBid45Field_BidPrice4_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBid45Field *_swig_go_0) {
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataBid45Field **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->BidPrice4);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataBid45Field_BidVolume4_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBid45Field *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataBid45Field **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->BidVolume4 = arg2;
  
}


intgo _wrap_CThostFtdcMarketDataBid45Field_BidVolume4_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBid45Field *_swig_go_0) {
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataBid45Field **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume4);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataBid45Field_BidPrice5_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBid45Field *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataBid45Field **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->BidPrice5 = arg2;
  
}


double _wrap_CThostFtdcMarketDataBid45Field_BidPrice5_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBid45Field *_swig_go_0) {
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataBid45Field **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->BidPrice5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataBid45Field_BidVolume5_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBid45Field *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataBid45Field **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->BidVolume5 = arg2;
  
}


intgo _wrap_CThostFtdcMarketDataBid45Field_BidVolume5_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBid45Field *_swig_go_0) {
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataBid45Field **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume5);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcMarketDataBid45Field *_wrap_new_CThostFtdcMarketDataBid45Field_goctp_ef6abdc493ff8ae2() {
  CThostFtdcMarketDataBid45Field *result = 0 ;
  CThostFtdcMarketDataBid45Field *_swig_go_result;
  
  
  result = (CThostFtdcMarketDataBid45Field *)new CThostFtdcMarketDataBid45Field();
  *(CThostFtdcMarketDataBid45Field **)&_swig_go_result = (CThostFtdcMarketDataBid45Field *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcMarketDataBid45Field_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataBid45Field *_swig_go_0) {
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  
  arg1 = *(CThostFtdcMarketDataBid45Field **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcMarketDataAsk45Field_AskPrice4_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataAsk45Field *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataAsk45Field **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->AskPrice4 = arg2;
  
}


double _wrap_CThostFtdcMarketDataAsk45Field_AskPrice4_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataAsk45Field *_swig_go_0) {
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataAsk45Field **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->AskPrice4);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataAsk45Field_AskVolume4_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataAsk45Field *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataAsk45Field **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->AskVolume4 = arg2;
  
}


intgo _wrap_CThostFtdcMarketDataAsk45Field_AskVolume4_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataAsk45Field *_swig_go_0) {
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataAsk45Field **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume4);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataAsk45Field_AskPrice5_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataAsk45Field *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataAsk45Field **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->AskPrice5 = arg2;
  
}


double _wrap_CThostFtdcMarketDataAsk45Field_AskPrice5_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataAsk45Field *_swig_go_0) {
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataAsk45Field **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->AskPrice5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataAsk45Field_AskVolume5_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataAsk45Field *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataAsk45Field **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->AskVolume5 = arg2;
  
}


intgo _wrap_CThostFtdcMarketDataAsk45Field_AskVolume5_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataAsk45Field *_swig_go_0) {
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataAsk45Field **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume5);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcMarketDataAsk45Field *_wrap_new_CThostFtdcMarketDataAsk45Field_goctp_ef6abdc493ff8ae2() {
  CThostFtdcMarketDataAsk45Field *result = 0 ;
  CThostFtdcMarketDataAsk45Field *_swig_go_result;
  
  
  result = (CThostFtdcMarketDataAsk45Field *)new CThostFtdcMarketDataAsk45Field();
  *(CThostFtdcMarketDataAsk45Field **)&_swig_go_result = (CThostFtdcMarketDataAsk45Field *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcMarketDataAsk45Field_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataAsk45Field *_swig_go_0) {
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  
  arg1 = *(CThostFtdcMarketDataAsk45Field **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcMarketDataUpdateTimeField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataUpdateTimeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMarketDataUpdateTimeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMarketDataUpdateTimeField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataUpdateTimeField *_swig_go_0) {
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataUpdateTimeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataUpdateTimeField_UpdateTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataUpdateTimeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMarketDataUpdateTimeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UpdateTime, (const char *)arg2, 9-1);
      arg1->UpdateTime[9-1] = 0;
    } else {
      arg1->UpdateTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMarketDataUpdateTimeField_UpdateTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataUpdateTimeField *_swig_go_0) {
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataUpdateTimeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UpdateTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataUpdateTimeField_UpdateMillisec_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataUpdateTimeField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  TThostFtdcMillisecType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataUpdateTimeField **)&_swig_go_0; 
  arg2 = (TThostFtdcMillisecType)_swig_go_1; 
  
  if (arg1) (arg1)->UpdateMillisec = arg2;
  
}


intgo _wrap_CThostFtdcMarketDataUpdateTimeField_UpdateMillisec_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataUpdateTimeField *_swig_go_0) {
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  TThostFtdcMillisecType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataUpdateTimeField **)&_swig_go_0; 
  
  result = (TThostFtdcMillisecType) ((arg1)->UpdateMillisec);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarketDataUpdateTimeField_ActionDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataUpdateTimeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMarketDataUpdateTimeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDay, (const char *)arg2, 9-1);
      arg1->ActionDay[9-1] = 0;
    } else {
      arg1->ActionDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMarketDataUpdateTimeField_ActionDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataUpdateTimeField *_swig_go_0) {
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataUpdateTimeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcMarketDataUpdateTimeField *_wrap_new_CThostFtdcMarketDataUpdateTimeField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcMarketDataUpdateTimeField *result = 0 ;
  CThostFtdcMarketDataUpdateTimeField *_swig_go_result;
  
  
  result = (CThostFtdcMarketDataUpdateTimeField *)new CThostFtdcMarketDataUpdateTimeField();
  *(CThostFtdcMarketDataUpdateTimeField **)&_swig_go_result = (CThostFtdcMarketDataUpdateTimeField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcMarketDataUpdateTimeField_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataUpdateTimeField *_swig_go_0) {
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  
  arg1 = *(CThostFtdcMarketDataUpdateTimeField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcMarketDataExchangeField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataExchangeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMarketDataExchangeField *arg1 = (CThostFtdcMarketDataExchangeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMarketDataExchangeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMarketDataExchangeField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataExchangeField *_swig_go_0) {
  CThostFtdcMarketDataExchangeField *arg1 = (CThostFtdcMarketDataExchangeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataExchangeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcMarketDataExchangeField *_wrap_new_CThostFtdcMarketDataExchangeField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcMarketDataExchangeField *result = 0 ;
  CThostFtdcMarketDataExchangeField *_swig_go_result;
  
  
  result = (CThostFtdcMarketDataExchangeField *)new CThostFtdcMarketDataExchangeField();
  *(CThostFtdcMarketDataExchangeField **)&_swig_go_result = (CThostFtdcMarketDataExchangeField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcMarketDataExchangeField_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataExchangeField *_swig_go_0) {
  CThostFtdcMarketDataExchangeField *arg1 = (CThostFtdcMarketDataExchangeField *) 0 ;
  
  arg1 = *(CThostFtdcMarketDataExchangeField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcSpecificInstrumentField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSpecificInstrumentField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSpecificInstrumentField *arg1 = (CThostFtdcSpecificInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSpecificInstrumentField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSpecificInstrumentField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSpecificInstrumentField *_swig_go_0) {
  CThostFtdcSpecificInstrumentField *arg1 = (CThostFtdcSpecificInstrumentField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSpecificInstrumentField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcSpecificInstrumentField *_wrap_new_CThostFtdcSpecificInstrumentField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcSpecificInstrumentField *result = 0 ;
  CThostFtdcSpecificInstrumentField *_swig_go_result;
  
  
  result = (CThostFtdcSpecificInstrumentField *)new CThostFtdcSpecificInstrumentField();
  *(CThostFtdcSpecificInstrumentField **)&_swig_go_result = (CThostFtdcSpecificInstrumentField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcSpecificInstrumentField_goctp_ef6abdc493ff8ae2(CThostFtdcSpecificInstrumentField *_swig_go_0) {
  CThostFtdcSpecificInstrumentField *arg1 = (CThostFtdcSpecificInstrumentField *) 0 ;
  
  arg1 = *(CThostFtdcSpecificInstrumentField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInstrumentStatusField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentStatusField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentStatusField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentStatusField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentStatusField *_swig_go_0) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentStatusField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentStatusField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentStatusField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentStatusField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentStatusField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentStatusField *_swig_go_0) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentStatusField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentStatusField_SettlementGroupID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentStatusField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentStatusField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SettlementGroupID, (const char *)arg2, 9-1);
      arg1->SettlementGroupID[9-1] = 0;
    } else {
      arg1->SettlementGroupID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentStatusField_SettlementGroupID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentStatusField *_swig_go_0) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentStatusField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->SettlementGroupID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentStatusField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentStatusField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentStatusField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentStatusField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentStatusField *_swig_go_0) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentStatusField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentStatusField_InstrumentStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentStatusField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  TThostFtdcInstrumentStatusType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentStatusField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstrumentStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->InstrumentStatus = arg2;
  
}


char _wrap_CThostFtdcInstrumentStatusField_InstrumentStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentStatusField *_swig_go_0) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  TThostFtdcInstrumentStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentStatusField **)&_swig_go_0; 
  
  result = (TThostFtdcInstrumentStatusType) ((arg1)->InstrumentStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentStatusField_TradingSegmentSN_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentStatusField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  TThostFtdcTradingSegmentSNType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentStatusField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradingSegmentSNType)_swig_go_1; 
  
  if (arg1) (arg1)->TradingSegmentSN = arg2;
  
}


intgo _wrap_CThostFtdcInstrumentStatusField_TradingSegmentSN_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentStatusField *_swig_go_0) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  TThostFtdcTradingSegmentSNType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentStatusField **)&_swig_go_0; 
  
  result = (TThostFtdcTradingSegmentSNType) ((arg1)->TradingSegmentSN);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentStatusField_EnterTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentStatusField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInstrumentStatusField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->EnterTime, (const char *)arg2, 9-1);
      arg1->EnterTime[9-1] = 0;
    } else {
      arg1->EnterTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInstrumentStatusField_EnterTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentStatusField *_swig_go_0) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentStatusField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->EnterTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInstrumentStatusField_EnterReason_set_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentStatusField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  TThostFtdcInstStatusEnterReasonType arg2 ;
  
  arg1 = *(CThostFtdcInstrumentStatusField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstStatusEnterReasonType)_swig_go_1; 
  
  if (arg1) (arg1)->EnterReason = arg2;
  
}


char _wrap_CThostFtdcInstrumentStatusField_EnterReason_get_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentStatusField *_swig_go_0) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  TThostFtdcInstStatusEnterReasonType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInstrumentStatusField **)&_swig_go_0; 
  
  result = (TThostFtdcInstStatusEnterReasonType) ((arg1)->EnterReason);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcInstrumentStatusField *_wrap_new_CThostFtdcInstrumentStatusField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInstrumentStatusField *result = 0 ;
  CThostFtdcInstrumentStatusField *_swig_go_result;
  
  
  result = (CThostFtdcInstrumentStatusField *)new CThostFtdcInstrumentStatusField();
  *(CThostFtdcInstrumentStatusField **)&_swig_go_result = (CThostFtdcInstrumentStatusField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInstrumentStatusField_goctp_ef6abdc493ff8ae2(CThostFtdcInstrumentStatusField *_swig_go_0) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  
  arg1 = *(CThostFtdcInstrumentStatusField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryInstrumentStatusField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentStatusField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInstrumentStatusField *arg1 = (CThostFtdcQryInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInstrumentStatusField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInstrumentStatusField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentStatusField *_swig_go_0) {
  CThostFtdcQryInstrumentStatusField *arg1 = (CThostFtdcQryInstrumentStatusField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInstrumentStatusField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInstrumentStatusField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentStatusField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInstrumentStatusField *arg1 = (CThostFtdcQryInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInstrumentStatusField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInstrumentStatusField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentStatusField *_swig_go_0) {
  CThostFtdcQryInstrumentStatusField *arg1 = (CThostFtdcQryInstrumentStatusField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInstrumentStatusField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryInstrumentStatusField *_wrap_new_CThostFtdcQryInstrumentStatusField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryInstrumentStatusField *result = 0 ;
  CThostFtdcQryInstrumentStatusField *_swig_go_result;
  
  
  result = (CThostFtdcQryInstrumentStatusField *)new CThostFtdcQryInstrumentStatusField();
  *(CThostFtdcQryInstrumentStatusField **)&_swig_go_result = (CThostFtdcQryInstrumentStatusField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryInstrumentStatusField_goctp_ef6abdc493ff8ae2(CThostFtdcQryInstrumentStatusField *_swig_go_0) {
  CThostFtdcQryInstrumentStatusField *arg1 = (CThostFtdcQryInstrumentStatusField *) 0 ;
  
  arg1 = *(CThostFtdcQryInstrumentStatusField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInvestorAccountField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorAccountField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorAccountField *_swig_go_0) {
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorAccountField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorAccountField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorAccountField *_swig_go_0) {
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorAccountField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorAccountField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorAccountField *_swig_go_0) {
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorAccountField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorAccountField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorAccountField *_swig_go_0) {
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcInvestorAccountField *_wrap_new_CThostFtdcInvestorAccountField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInvestorAccountField *result = 0 ;
  CThostFtdcInvestorAccountField *_swig_go_result;
  
  
  result = (CThostFtdcInvestorAccountField *)new CThostFtdcInvestorAccountField();
  *(CThostFtdcInvestorAccountField **)&_swig_go_result = (CThostFtdcInvestorAccountField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInvestorAccountField_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorAccountField *_swig_go_0) {
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  
  arg1 = *(CThostFtdcInvestorAccountField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcPositionProfitAlgorithmField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcPositionProfitAlgorithmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcPositionProfitAlgorithmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcPositionProfitAlgorithmField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcPositionProfitAlgorithmField *_swig_go_0) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcPositionProfitAlgorithmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcPositionProfitAlgorithmField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcPositionProfitAlgorithmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcPositionProfitAlgorithmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcPositionProfitAlgorithmField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcPositionProfitAlgorithmField *_swig_go_0) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcPositionProfitAlgorithmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcPositionProfitAlgorithmField_Algorithm_set_goctp_ef6abdc493ff8ae2(CThostFtdcPositionProfitAlgorithmField *_swig_go_0, char _swig_go_1) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  TThostFtdcAlgorithmType arg2 ;
  
  arg1 = *(CThostFtdcPositionProfitAlgorithmField **)&_swig_go_0; 
  arg2 = (TThostFtdcAlgorithmType)_swig_go_1; 
  
  if (arg1) (arg1)->Algorithm = arg2;
  
}


char _wrap_CThostFtdcPositionProfitAlgorithmField_Algorithm_get_goctp_ef6abdc493ff8ae2(CThostFtdcPositionProfitAlgorithmField *_swig_go_0) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  TThostFtdcAlgorithmType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcPositionProfitAlgorithmField **)&_swig_go_0; 
  
  result = (TThostFtdcAlgorithmType) ((arg1)->Algorithm);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcPositionProfitAlgorithmField_Memo_set_goctp_ef6abdc493ff8ae2(CThostFtdcPositionProfitAlgorithmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcPositionProfitAlgorithmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Memo, (const char *)arg2, 161-1);
      arg1->Memo[161-1] = 0;
    } else {
      arg1->Memo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcPositionProfitAlgorithmField_Memo_get_goctp_ef6abdc493ff8ae2(CThostFtdcPositionProfitAlgorithmField *_swig_go_0) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcPositionProfitAlgorithmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Memo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcPositionProfitAlgorithmField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcPositionProfitAlgorithmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcPositionProfitAlgorithmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcPositionProfitAlgorithmField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcPositionProfitAlgorithmField *_swig_go_0) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcPositionProfitAlgorithmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcPositionProfitAlgorithmField *_wrap_new_CThostFtdcPositionProfitAlgorithmField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcPositionProfitAlgorithmField *result = 0 ;
  CThostFtdcPositionProfitAlgorithmField *_swig_go_result;
  
  
  result = (CThostFtdcPositionProfitAlgorithmField *)new CThostFtdcPositionProfitAlgorithmField();
  *(CThostFtdcPositionProfitAlgorithmField **)&_swig_go_result = (CThostFtdcPositionProfitAlgorithmField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcPositionProfitAlgorithmField_goctp_ef6abdc493ff8ae2(CThostFtdcPositionProfitAlgorithmField *_swig_go_0) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  
  arg1 = *(CThostFtdcPositionProfitAlgorithmField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcDiscountField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcDiscountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcDiscountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcDiscountField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcDiscountField *_swig_go_0) {
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcDiscountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcDiscountField_InvestorRange_set_goctp_ef6abdc493ff8ae2(CThostFtdcDiscountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = *(CThostFtdcDiscountField **)&_swig_go_0; 
  arg2 = (TThostFtdcInvestorRangeType)_swig_go_1; 
  
  if (arg1) (arg1)->InvestorRange = arg2;
  
}


char _wrap_CThostFtdcDiscountField_InvestorRange_get_goctp_ef6abdc493ff8ae2(CThostFtdcDiscountField *_swig_go_0) {
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  TThostFtdcInvestorRangeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcDiscountField **)&_swig_go_0; 
  
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDiscountField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcDiscountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcDiscountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcDiscountField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcDiscountField *_swig_go_0) {
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcDiscountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcDiscountField_Discount_set_goctp_ef6abdc493ff8ae2(CThostFtdcDiscountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcDiscountField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->Discount = arg2;
  
}


double _wrap_CThostFtdcDiscountField_Discount_get_goctp_ef6abdc493ff8ae2(CThostFtdcDiscountField *_swig_go_0) {
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDiscountField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->Discount);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcDiscountField *_wrap_new_CThostFtdcDiscountField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcDiscountField *result = 0 ;
  CThostFtdcDiscountField *_swig_go_result;
  
  
  result = (CThostFtdcDiscountField *)new CThostFtdcDiscountField();
  *(CThostFtdcDiscountField **)&_swig_go_result = (CThostFtdcDiscountField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcDiscountField_goctp_ef6abdc493ff8ae2(CThostFtdcDiscountField *_swig_go_0) {
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  
  arg1 = *(CThostFtdcDiscountField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryTransferBankField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTransferBankField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTransferBankField *arg1 = (CThostFtdcQryTransferBankField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTransferBankField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTransferBankField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTransferBankField *_swig_go_0) {
  CThostFtdcQryTransferBankField *arg1 = (CThostFtdcQryTransferBankField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTransferBankField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryTransferBankField_BankBrchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTransferBankField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTransferBankField *arg1 = (CThostFtdcQryTransferBankField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTransferBankField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBrchID, (const char *)arg2, 5-1);
      arg1->BankBrchID[5-1] = 0;
    } else {
      arg1->BankBrchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTransferBankField_BankBrchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTransferBankField *_swig_go_0) {
  CThostFtdcQryTransferBankField *arg1 = (CThostFtdcQryTransferBankField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTransferBankField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBrchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryTransferBankField *_wrap_new_CThostFtdcQryTransferBankField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryTransferBankField *result = 0 ;
  CThostFtdcQryTransferBankField *_swig_go_result;
  
  
  result = (CThostFtdcQryTransferBankField *)new CThostFtdcQryTransferBankField();
  *(CThostFtdcQryTransferBankField **)&_swig_go_result = (CThostFtdcQryTransferBankField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryTransferBankField_goctp_ef6abdc493ff8ae2(CThostFtdcQryTransferBankField *_swig_go_0) {
  CThostFtdcQryTransferBankField *arg1 = (CThostFtdcQryTransferBankField *) 0 ;
  
  arg1 = *(CThostFtdcQryTransferBankField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTransferBankField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferBankField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferBankField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankField *_swig_go_0) {
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferBankField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferBankField_BankBrchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferBankField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBrchID, (const char *)arg2, 5-1);
      arg1->BankBrchID[5-1] = 0;
    } else {
      arg1->BankBrchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferBankField_BankBrchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankField *_swig_go_0) {
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferBankField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBrchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferBankField_BankName_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferBankField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankName, (const char *)arg2, 101-1);
      arg1->BankName[101-1] = 0;
    } else {
      arg1->BankName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferBankField_BankName_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankField *_swig_go_0) {
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferBankField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferBankField_IsActive_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcTransferBankField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsActive = arg2;
  
}


intgo _wrap_CThostFtdcTransferBankField_IsActive_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankField *_swig_go_0) {
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTransferBankField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcTransferBankField *_wrap_new_CThostFtdcTransferBankField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTransferBankField *result = 0 ;
  CThostFtdcTransferBankField *_swig_go_result;
  
  
  result = (CThostFtdcTransferBankField *)new CThostFtdcTransferBankField();
  *(CThostFtdcTransferBankField **)&_swig_go_result = (CThostFtdcTransferBankField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTransferBankField_goctp_ef6abdc493ff8ae2(CThostFtdcTransferBankField *_swig_go_0) {
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  
  arg1 = *(CThostFtdcTransferBankField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryInvestorPositionDetailField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorPositionDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInvestorPositionDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInvestorPositionDetailField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInvestorPositionDetailField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorPositionDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInvestorPositionDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInvestorPositionDetailField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInvestorPositionDetailField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorPositionDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInvestorPositionDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInvestorPositionDetailField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryInvestorPositionDetailField *_wrap_new_CThostFtdcQryInvestorPositionDetailField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryInvestorPositionDetailField *result = 0 ;
  CThostFtdcQryInvestorPositionDetailField *_swig_go_result;
  
  
  result = (CThostFtdcQryInvestorPositionDetailField *)new CThostFtdcQryInvestorPositionDetailField();
  *(CThostFtdcQryInvestorPositionDetailField **)&_swig_go_result = (CThostFtdcQryInvestorPositionDetailField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryInvestorPositionDetailField_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  
  arg1 = *(CThostFtdcQryInvestorPositionDetailField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInvestorPositionDetailField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorPositionDetailField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorPositionDetailField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorPositionDetailField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcInvestorPositionDetailField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_Direction_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->Direction = arg2;
  
}


char _wrap_CThostFtdcInvestorPositionDetailField_Direction_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_OpenDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OpenDate, (const char *)arg2, 9-1);
      arg1->OpenDate[9-1] = 0;
    } else {
      arg1->OpenDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorPositionDetailField_OpenDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OpenDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_TradeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeID, (const char *)arg2, 21-1);
      arg1->TradeID[21-1] = 0;
    } else {
      arg1->TradeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorPositionDetailField_TradeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_Volume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->Volume = arg2;
  
}


intgo _wrap_CThostFtdcInvestorPositionDetailField_Volume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_OpenPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenPrice = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionDetailField_OpenPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->OpenPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorPositionDetailField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_SettlementID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcSettlementIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementID = arg2;
  
}


intgo _wrap_CThostFtdcInvestorPositionDetailField_SettlementID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcSettlementIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_TradeType_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcTradeTypeType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->TradeType = arg2;
  
}


char _wrap_CThostFtdcInvestorPositionDetailField_TradeType_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcTradeTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeTypeType) ((arg1)->TradeType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_CombInstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CombInstrumentID, (const char *)arg2, 31-1);
      arg1->CombInstrumentID[31-1] = 0;
    } else {
      arg1->CombInstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorPositionDetailField_CombInstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CombInstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorPositionDetailField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_CloseProfitByDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseProfitByDate = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionDetailField_CloseProfitByDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfitByDate);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_CloseProfitByTrade_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseProfitByTrade = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionDetailField_CloseProfitByTrade_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfitByTrade);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_PositionProfitByDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PositionProfitByDate = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionDetailField_PositionProfitByDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PositionProfitByDate);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_PositionProfitByTrade_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PositionProfitByTrade = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionDetailField_PositionProfitByTrade_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PositionProfitByTrade);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_Margin_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Margin = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionDetailField_Margin_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Margin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_ExchMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ExchMargin = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionDetailField_ExchMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ExchMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_MarginRateByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->MarginRateByMoney = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionDetailField_MarginRateByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_MarginRateByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->MarginRateByVolume = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionDetailField_MarginRateByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_LastSettlementPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LastSettlementPrice = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionDetailField_LastSettlementPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LastSettlementPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_SettlementPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementPrice = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionDetailField_SettlementPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->SettlementPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_CloseVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseVolume = arg2;
  
}


intgo _wrap_CThostFtdcInvestorPositionDetailField_CloseVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->CloseVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionDetailField_CloseAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseAmount = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionDetailField_CloseAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CloseAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcInvestorPositionDetailField *_wrap_new_CThostFtdcInvestorPositionDetailField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInvestorPositionDetailField *result = 0 ;
  CThostFtdcInvestorPositionDetailField *_swig_go_result;
  
  
  result = (CThostFtdcInvestorPositionDetailField *)new CThostFtdcInvestorPositionDetailField();
  *(CThostFtdcInvestorPositionDetailField **)&_swig_go_result = (CThostFtdcInvestorPositionDetailField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInvestorPositionDetailField_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  
  arg1 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTradingAccountPasswordField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountPasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingAccountPasswordField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordField *_swig_go_0) {
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountPasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountPasswordField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountPasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingAccountPasswordField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordField *_swig_go_0) {
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountPasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountPasswordField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountPasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingAccountPasswordField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordField *_swig_go_0) {
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountPasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountPasswordField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountPasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingAccountPasswordField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordField *_swig_go_0) {
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountPasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcTradingAccountPasswordField *_wrap_new_CThostFtdcTradingAccountPasswordField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTradingAccountPasswordField *result = 0 ;
  CThostFtdcTradingAccountPasswordField *_swig_go_result;
  
  
  result = (CThostFtdcTradingAccountPasswordField *)new CThostFtdcTradingAccountPasswordField();
  *(CThostFtdcTradingAccountPasswordField **)&_swig_go_result = (CThostFtdcTradingAccountPasswordField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTradingAccountPasswordField_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordField *_swig_go_0) {
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  
  arg1 = *(CThostFtdcTradingAccountPasswordField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcMDTraderOfferField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMDTraderOfferField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMDTraderOfferField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMDTraderOfferField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMDTraderOfferField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMDTraderOfferField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMDTraderOfferField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMDTraderOfferField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMDTraderOfferField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcMDTraderOfferField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMDTraderOfferField_OrderLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMDTraderOfferField_OrderLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMDTraderOfferField_TraderConnectStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  TThostFtdcTraderConnectStatusType arg2 ;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  arg2 = (TThostFtdcTraderConnectStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->TraderConnectStatus = arg2;
  
}


char _wrap_CThostFtdcMDTraderOfferField_TraderConnectStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  TThostFtdcTraderConnectStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  result = (TThostFtdcTraderConnectStatusType) ((arg1)->TraderConnectStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMDTraderOfferField_ConnectRequestDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectRequestDate, (const char *)arg2, 9-1);
      arg1->ConnectRequestDate[9-1] = 0;
    } else {
      arg1->ConnectRequestDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMDTraderOfferField_ConnectRequestDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ConnectRequestDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMDTraderOfferField_ConnectRequestTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectRequestTime, (const char *)arg2, 9-1);
      arg1->ConnectRequestTime[9-1] = 0;
    } else {
      arg1->ConnectRequestTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMDTraderOfferField_ConnectRequestTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ConnectRequestTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMDTraderOfferField_LastReportDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LastReportDate, (const char *)arg2, 9-1);
      arg1->LastReportDate[9-1] = 0;
    } else {
      arg1->LastReportDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMDTraderOfferField_LastReportDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LastReportDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMDTraderOfferField_LastReportTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LastReportTime, (const char *)arg2, 9-1);
      arg1->LastReportTime[9-1] = 0;
    } else {
      arg1->LastReportTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMDTraderOfferField_LastReportTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LastReportTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMDTraderOfferField_ConnectDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectDate, (const char *)arg2, 9-1);
      arg1->ConnectDate[9-1] = 0;
    } else {
      arg1->ConnectDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMDTraderOfferField_ConnectDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ConnectDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMDTraderOfferField_ConnectTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectTime, (const char *)arg2, 9-1);
      arg1->ConnectTime[9-1] = 0;
    } else {
      arg1->ConnectTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMDTraderOfferField_ConnectTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ConnectTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMDTraderOfferField_StartDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->StartDate, (const char *)arg2, 9-1);
      arg1->StartDate[9-1] = 0;
    } else {
      arg1->StartDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMDTraderOfferField_StartDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->StartDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMDTraderOfferField_StartTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->StartTime, (const char *)arg2, 9-1);
      arg1->StartTime[9-1] = 0;
    } else {
      arg1->StartTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMDTraderOfferField_StartTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->StartTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMDTraderOfferField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMDTraderOfferField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMDTraderOfferField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMDTraderOfferField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMDTraderOfferField_MaxTradeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MaxTradeID, (const char *)arg2, 21-1);
      arg1->MaxTradeID[21-1] = 0;
    } else {
      arg1->MaxTradeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMDTraderOfferField_MaxTradeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MaxTradeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMDTraderOfferField_MaxOrderMessageReference_set_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MaxOrderMessageReference, (const char *)arg2, 7-1);
      arg1->MaxOrderMessageReference[7-1] = 0;
    } else {
      arg1->MaxOrderMessageReference[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMDTraderOfferField_MaxOrderMessageReference_get_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MaxOrderMessageReference);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcMDTraderOfferField *_wrap_new_CThostFtdcMDTraderOfferField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcMDTraderOfferField *result = 0 ;
  CThostFtdcMDTraderOfferField *_swig_go_result;
  
  
  result = (CThostFtdcMDTraderOfferField *)new CThostFtdcMDTraderOfferField();
  *(CThostFtdcMDTraderOfferField **)&_swig_go_result = (CThostFtdcMDTraderOfferField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcMDTraderOfferField_goctp_ef6abdc493ff8ae2(CThostFtdcMDTraderOfferField *_swig_go_0) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  
  arg1 = *(CThostFtdcMDTraderOfferField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryMDTraderOfferField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryMDTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryMDTraderOfferField *arg1 = (CThostFtdcQryMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryMDTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryMDTraderOfferField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryMDTraderOfferField *_swig_go_0) {
  CThostFtdcQryMDTraderOfferField *arg1 = (CThostFtdcQryMDTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryMDTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryMDTraderOfferField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryMDTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryMDTraderOfferField *arg1 = (CThostFtdcQryMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryMDTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryMDTraderOfferField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryMDTraderOfferField *_swig_go_0) {
  CThostFtdcQryMDTraderOfferField *arg1 = (CThostFtdcQryMDTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryMDTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryMDTraderOfferField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryMDTraderOfferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryMDTraderOfferField *arg1 = (CThostFtdcQryMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryMDTraderOfferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryMDTraderOfferField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryMDTraderOfferField *_swig_go_0) {
  CThostFtdcQryMDTraderOfferField *arg1 = (CThostFtdcQryMDTraderOfferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryMDTraderOfferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryMDTraderOfferField *_wrap_new_CThostFtdcQryMDTraderOfferField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryMDTraderOfferField *result = 0 ;
  CThostFtdcQryMDTraderOfferField *_swig_go_result;
  
  
  result = (CThostFtdcQryMDTraderOfferField *)new CThostFtdcQryMDTraderOfferField();
  *(CThostFtdcQryMDTraderOfferField **)&_swig_go_result = (CThostFtdcQryMDTraderOfferField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryMDTraderOfferField_goctp_ef6abdc493ff8ae2(CThostFtdcQryMDTraderOfferField *_swig_go_0) {
  CThostFtdcQryMDTraderOfferField *arg1 = (CThostFtdcQryMDTraderOfferField *) 0 ;
  
  arg1 = *(CThostFtdcQryMDTraderOfferField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryNoticeField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryNoticeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryNoticeField *arg1 = (CThostFtdcQryNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryNoticeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryNoticeField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryNoticeField *_swig_go_0) {
  CThostFtdcQryNoticeField *arg1 = (CThostFtdcQryNoticeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryNoticeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryNoticeField *_wrap_new_CThostFtdcQryNoticeField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryNoticeField *result = 0 ;
  CThostFtdcQryNoticeField *_swig_go_result;
  
  
  result = (CThostFtdcQryNoticeField *)new CThostFtdcQryNoticeField();
  *(CThostFtdcQryNoticeField **)&_swig_go_result = (CThostFtdcQryNoticeField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryNoticeField_goctp_ef6abdc493ff8ae2(CThostFtdcQryNoticeField *_swig_go_0) {
  CThostFtdcQryNoticeField *arg1 = (CThostFtdcQryNoticeField *) 0 ;
  
  arg1 = *(CThostFtdcQryNoticeField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcNoticeField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNoticeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNoticeField *arg1 = (CThostFtdcNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNoticeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNoticeField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNoticeField *_swig_go_0) {
  CThostFtdcNoticeField *arg1 = (CThostFtdcNoticeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNoticeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNoticeField_Content_set_goctp_ef6abdc493ff8ae2(CThostFtdcNoticeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNoticeField *arg1 = (CThostFtdcNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNoticeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Content, (const char *)arg2, 501-1);
      arg1->Content[501-1] = 0;
    } else {
      arg1->Content[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNoticeField_Content_get_goctp_ef6abdc493ff8ae2(CThostFtdcNoticeField *_swig_go_0) {
  CThostFtdcNoticeField *arg1 = (CThostFtdcNoticeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNoticeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Content);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNoticeField_SequenceLabel_set_goctp_ef6abdc493ff8ae2(CThostFtdcNoticeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNoticeField *arg1 = (CThostFtdcNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNoticeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SequenceLabel, (const char *)arg2, 2-1);
      arg1->SequenceLabel[2-1] = 0;
    } else {
      arg1->SequenceLabel[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNoticeField_SequenceLabel_get_goctp_ef6abdc493ff8ae2(CThostFtdcNoticeField *_swig_go_0) {
  CThostFtdcNoticeField *arg1 = (CThostFtdcNoticeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNoticeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->SequenceLabel);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcNoticeField *_wrap_new_CThostFtdcNoticeField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcNoticeField *result = 0 ;
  CThostFtdcNoticeField *_swig_go_result;
  
  
  result = (CThostFtdcNoticeField *)new CThostFtdcNoticeField();
  *(CThostFtdcNoticeField **)&_swig_go_result = (CThostFtdcNoticeField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcNoticeField_goctp_ef6abdc493ff8ae2(CThostFtdcNoticeField *_swig_go_0) {
  CThostFtdcNoticeField *arg1 = (CThostFtdcNoticeField *) 0 ;
  
  arg1 = *(CThostFtdcNoticeField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcUserRightField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserRightField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserRightField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserRightField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserRightField *_swig_go_0) {
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserRightField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserRightField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserRightField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserRightField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserRightField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserRightField *_swig_go_0) {
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserRightField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserRightField_UserRightType_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserRightField *_swig_go_0, char _swig_go_1) {
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  TThostFtdcUserRightTypeType arg2 ;
  
  arg1 = *(CThostFtdcUserRightField **)&_swig_go_0; 
  arg2 = (TThostFtdcUserRightTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->UserRightType = arg2;
  
}


char _wrap_CThostFtdcUserRightField_UserRightType_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserRightField *_swig_go_0) {
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  TThostFtdcUserRightTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcUserRightField **)&_swig_go_0; 
  
  result = (TThostFtdcUserRightTypeType) ((arg1)->UserRightType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserRightField_IsForbidden_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserRightField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcUserRightField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsForbidden = arg2;
  
}


intgo _wrap_CThostFtdcUserRightField_IsForbidden_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserRightField *_swig_go_0) {
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcUserRightField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsForbidden);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcUserRightField *_wrap_new_CThostFtdcUserRightField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcUserRightField *result = 0 ;
  CThostFtdcUserRightField *_swig_go_result;
  
  
  result = (CThostFtdcUserRightField *)new CThostFtdcUserRightField();
  *(CThostFtdcUserRightField **)&_swig_go_result = (CThostFtdcUserRightField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcUserRightField_goctp_ef6abdc493ff8ae2(CThostFtdcUserRightField *_swig_go_0) {
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  
  arg1 = *(CThostFtdcUserRightField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQrySettlementInfoConfirmField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQrySettlementInfoConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQrySettlementInfoConfirmField *arg1 = (CThostFtdcQrySettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQrySettlementInfoConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQrySettlementInfoConfirmField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQrySettlementInfoConfirmField *_swig_go_0) {
  CThostFtdcQrySettlementInfoConfirmField *arg1 = (CThostFtdcQrySettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQrySettlementInfoConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQrySettlementInfoConfirmField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQrySettlementInfoConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQrySettlementInfoConfirmField *arg1 = (CThostFtdcQrySettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQrySettlementInfoConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQrySettlementInfoConfirmField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQrySettlementInfoConfirmField *_swig_go_0) {
  CThostFtdcQrySettlementInfoConfirmField *arg1 = (CThostFtdcQrySettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQrySettlementInfoConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQrySettlementInfoConfirmField *_wrap_new_CThostFtdcQrySettlementInfoConfirmField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQrySettlementInfoConfirmField *result = 0 ;
  CThostFtdcQrySettlementInfoConfirmField *_swig_go_result;
  
  
  result = (CThostFtdcQrySettlementInfoConfirmField *)new CThostFtdcQrySettlementInfoConfirmField();
  *(CThostFtdcQrySettlementInfoConfirmField **)&_swig_go_result = (CThostFtdcQrySettlementInfoConfirmField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQrySettlementInfoConfirmField_goctp_ef6abdc493ff8ae2(CThostFtdcQrySettlementInfoConfirmField *_swig_go_0) {
  CThostFtdcQrySettlementInfoConfirmField *arg1 = (CThostFtdcQrySettlementInfoConfirmField *) 0 ;
  
  arg1 = *(CThostFtdcQrySettlementInfoConfirmField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcLoadSettlementInfoField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoadSettlementInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoadSettlementInfoField *arg1 = (CThostFtdcLoadSettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoadSettlementInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoadSettlementInfoField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoadSettlementInfoField *_swig_go_0) {
  CThostFtdcLoadSettlementInfoField *arg1 = (CThostFtdcLoadSettlementInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoadSettlementInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcLoadSettlementInfoField *_wrap_new_CThostFtdcLoadSettlementInfoField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcLoadSettlementInfoField *result = 0 ;
  CThostFtdcLoadSettlementInfoField *_swig_go_result;
  
  
  result = (CThostFtdcLoadSettlementInfoField *)new CThostFtdcLoadSettlementInfoField();
  *(CThostFtdcLoadSettlementInfoField **)&_swig_go_result = (CThostFtdcLoadSettlementInfoField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcLoadSettlementInfoField_goctp_ef6abdc493ff8ae2(CThostFtdcLoadSettlementInfoField *_swig_go_0) {
  CThostFtdcLoadSettlementInfoField *arg1 = (CThostFtdcLoadSettlementInfoField *) 0 ;
  
  arg1 = *(CThostFtdcLoadSettlementInfoField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcBrokerWithdrawAlgorithmField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerWithdrawAlgorithmField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_0) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerWithdrawAlgorithmField_WithdrawAlgorithm_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_0, char _swig_go_1) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcAlgorithmType arg2 ;
  
  arg1 = *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_0; 
  arg2 = (TThostFtdcAlgorithmType)_swig_go_1; 
  
  if (arg1) (arg1)->WithdrawAlgorithm = arg2;
  
}


char _wrap_CThostFtdcBrokerWithdrawAlgorithmField_WithdrawAlgorithm_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_0) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcAlgorithmType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_0; 
  
  result = (TThostFtdcAlgorithmType) ((arg1)->WithdrawAlgorithm);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerWithdrawAlgorithmField_UsingRatio_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_0, double _swig_go_1) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->UsingRatio = arg2;
  
}


double _wrap_CThostFtdcBrokerWithdrawAlgorithmField_UsingRatio_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_0) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->UsingRatio);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerWithdrawAlgorithmField_IncludeCloseProfit_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_0, char _swig_go_1) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcIncludeCloseProfitType arg2 ;
  
  arg1 = *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_0; 
  arg2 = (TThostFtdcIncludeCloseProfitType)_swig_go_1; 
  
  if (arg1) (arg1)->IncludeCloseProfit = arg2;
  
}


char _wrap_CThostFtdcBrokerWithdrawAlgorithmField_IncludeCloseProfit_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_0) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcIncludeCloseProfitType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_0; 
  
  result = (TThostFtdcIncludeCloseProfitType) ((arg1)->IncludeCloseProfit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerWithdrawAlgorithmField_AllWithoutTrade_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_0, char _swig_go_1) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcAllWithoutTradeType arg2 ;
  
  arg1 = *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_0; 
  arg2 = (TThostFtdcAllWithoutTradeType)_swig_go_1; 
  
  if (arg1) (arg1)->AllWithoutTrade = arg2;
  
}


char _wrap_CThostFtdcBrokerWithdrawAlgorithmField_AllWithoutTrade_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_0) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcAllWithoutTradeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_0; 
  
  result = (TThostFtdcAllWithoutTradeType) ((arg1)->AllWithoutTrade);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerWithdrawAlgorithmField_AvailIncludeCloseProfit_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_0, char _swig_go_1) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcIncludeCloseProfitType arg2 ;
  
  arg1 = *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_0; 
  arg2 = (TThostFtdcIncludeCloseProfitType)_swig_go_1; 
  
  if (arg1) (arg1)->AvailIncludeCloseProfit = arg2;
  
}


char _wrap_CThostFtdcBrokerWithdrawAlgorithmField_AvailIncludeCloseProfit_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_0) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcIncludeCloseProfitType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_0; 
  
  result = (TThostFtdcIncludeCloseProfitType) ((arg1)->AvailIncludeCloseProfit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerWithdrawAlgorithmField_IsBrokerUserEvent_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsBrokerUserEvent = arg2;
  
}


intgo _wrap_CThostFtdcBrokerWithdrawAlgorithmField_IsBrokerUserEvent_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_0) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsBrokerUserEvent);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerWithdrawAlgorithmField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerWithdrawAlgorithmField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_0) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerWithdrawAlgorithmField_FundMortgageRatio_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_0, double _swig_go_1) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->FundMortgageRatio = arg2;
  
}


double _wrap_CThostFtdcBrokerWithdrawAlgorithmField_FundMortgageRatio_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_0) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->FundMortgageRatio);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerWithdrawAlgorithmField_BalanceAlgorithm_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_0, char _swig_go_1) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcBalanceAlgorithmType arg2 ;
  
  arg1 = *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_0; 
  arg2 = (TThostFtdcBalanceAlgorithmType)_swig_go_1; 
  
  if (arg1) (arg1)->BalanceAlgorithm = arg2;
  
}


char _wrap_CThostFtdcBrokerWithdrawAlgorithmField_BalanceAlgorithm_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_0) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcBalanceAlgorithmType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_0; 
  
  result = (TThostFtdcBalanceAlgorithmType) ((arg1)->BalanceAlgorithm);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcBrokerWithdrawAlgorithmField *_wrap_new_CThostFtdcBrokerWithdrawAlgorithmField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcBrokerWithdrawAlgorithmField *result = 0 ;
  CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_result;
  
  
  result = (CThostFtdcBrokerWithdrawAlgorithmField *)new CThostFtdcBrokerWithdrawAlgorithmField();
  *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_result = (CThostFtdcBrokerWithdrawAlgorithmField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcBrokerWithdrawAlgorithmField_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerWithdrawAlgorithmField *_swig_go_0) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  
  arg1 = *(CThostFtdcBrokerWithdrawAlgorithmField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTradingAccountPasswordUpdateV1Field_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordUpdateV1Field *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountPasswordUpdateV1Field **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingAccountPasswordUpdateV1Field_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordUpdateV1Field *_swig_go_0) {
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountPasswordUpdateV1Field **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountPasswordUpdateV1Field_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordUpdateV1Field *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountPasswordUpdateV1Field **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingAccountPasswordUpdateV1Field_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordUpdateV1Field *_swig_go_0) {
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountPasswordUpdateV1Field **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountPasswordUpdateV1Field_OldPassword_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordUpdateV1Field *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountPasswordUpdateV1Field **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OldPassword, (const char *)arg2, 41-1);
      arg1->OldPassword[41-1] = 0;
    } else {
      arg1->OldPassword[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingAccountPasswordUpdateV1Field_OldPassword_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordUpdateV1Field *_swig_go_0) {
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountPasswordUpdateV1Field **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OldPassword);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountPasswordUpdateV1Field_NewPassword_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordUpdateV1Field *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountPasswordUpdateV1Field **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->NewPassword, (const char *)arg2, 41-1);
      arg1->NewPassword[41-1] = 0;
    } else {
      arg1->NewPassword[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingAccountPasswordUpdateV1Field_NewPassword_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordUpdateV1Field *_swig_go_0) {
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountPasswordUpdateV1Field **)&_swig_go_0; 
  
  result = (char *) ((arg1)->NewPassword);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcTradingAccountPasswordUpdateV1Field *_wrap_new_CThostFtdcTradingAccountPasswordUpdateV1Field_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTradingAccountPasswordUpdateV1Field *result = 0 ;
  CThostFtdcTradingAccountPasswordUpdateV1Field *_swig_go_result;
  
  
  result = (CThostFtdcTradingAccountPasswordUpdateV1Field *)new CThostFtdcTradingAccountPasswordUpdateV1Field();
  *(CThostFtdcTradingAccountPasswordUpdateV1Field **)&_swig_go_result = (CThostFtdcTradingAccountPasswordUpdateV1Field *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTradingAccountPasswordUpdateV1Field_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordUpdateV1Field *_swig_go_0) {
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  
  arg1 = *(CThostFtdcTradingAccountPasswordUpdateV1Field **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTradingAccountPasswordUpdateField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordUpdateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountPasswordUpdateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingAccountPasswordUpdateField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordUpdateField *_swig_go_0) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountPasswordUpdateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountPasswordUpdateField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordUpdateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountPasswordUpdateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingAccountPasswordUpdateField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordUpdateField *_swig_go_0) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountPasswordUpdateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountPasswordUpdateField_OldPassword_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordUpdateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountPasswordUpdateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OldPassword, (const char *)arg2, 41-1);
      arg1->OldPassword[41-1] = 0;
    } else {
      arg1->OldPassword[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingAccountPasswordUpdateField_OldPassword_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordUpdateField *_swig_go_0) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountPasswordUpdateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OldPassword);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountPasswordUpdateField_NewPassword_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordUpdateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountPasswordUpdateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->NewPassword, (const char *)arg2, 41-1);
      arg1->NewPassword[41-1] = 0;
    } else {
      arg1->NewPassword[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingAccountPasswordUpdateField_NewPassword_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordUpdateField *_swig_go_0) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountPasswordUpdateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->NewPassword);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountPasswordUpdateField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordUpdateField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountPasswordUpdateField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingAccountPasswordUpdateField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordUpdateField *_swig_go_0) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountPasswordUpdateField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcTradingAccountPasswordUpdateField *_wrap_new_CThostFtdcTradingAccountPasswordUpdateField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTradingAccountPasswordUpdateField *result = 0 ;
  CThostFtdcTradingAccountPasswordUpdateField *_swig_go_result;
  
  
  result = (CThostFtdcTradingAccountPasswordUpdateField *)new CThostFtdcTradingAccountPasswordUpdateField();
  *(CThostFtdcTradingAccountPasswordUpdateField **)&_swig_go_result = (CThostFtdcTradingAccountPasswordUpdateField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTradingAccountPasswordUpdateField_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountPasswordUpdateField *_swig_go_0) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  
  arg1 = *(CThostFtdcTradingAccountPasswordUpdateField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryCombinationLegField_CombInstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryCombinationLegField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryCombinationLegField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CombInstrumentID, (const char *)arg2, 31-1);
      arg1->CombInstrumentID[31-1] = 0;
    } else {
      arg1->CombInstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryCombinationLegField_CombInstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryCombinationLegField *_swig_go_0) {
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryCombinationLegField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CombInstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryCombinationLegField_LegID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryCombinationLegField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  TThostFtdcLegIDType arg2 ;
  
  arg1 = *(CThostFtdcQryCombinationLegField **)&_swig_go_0; 
  arg2 = (TThostFtdcLegIDType)_swig_go_1; 
  
  if (arg1) (arg1)->LegID = arg2;
  
}


intgo _wrap_CThostFtdcQryCombinationLegField_LegID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryCombinationLegField *_swig_go_0) {
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  TThostFtdcLegIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQryCombinationLegField **)&_swig_go_0; 
  
  result = (TThostFtdcLegIDType) ((arg1)->LegID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryCombinationLegField_LegInstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryCombinationLegField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryCombinationLegField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LegInstrumentID, (const char *)arg2, 31-1);
      arg1->LegInstrumentID[31-1] = 0;
    } else {
      arg1->LegInstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryCombinationLegField_LegInstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryCombinationLegField *_swig_go_0) {
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryCombinationLegField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LegInstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryCombinationLegField *_wrap_new_CThostFtdcQryCombinationLegField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryCombinationLegField *result = 0 ;
  CThostFtdcQryCombinationLegField *_swig_go_result;
  
  
  result = (CThostFtdcQryCombinationLegField *)new CThostFtdcQryCombinationLegField();
  *(CThostFtdcQryCombinationLegField **)&_swig_go_result = (CThostFtdcQryCombinationLegField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryCombinationLegField_goctp_ef6abdc493ff8ae2(CThostFtdcQryCombinationLegField *_swig_go_0) {
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  
  arg1 = *(CThostFtdcQryCombinationLegField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQrySyncStatusField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcQrySyncStatusField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQrySyncStatusField *arg1 = (CThostFtdcQrySyncStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQrySyncStatusField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQrySyncStatusField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcQrySyncStatusField *_swig_go_0) {
  CThostFtdcQrySyncStatusField *arg1 = (CThostFtdcQrySyncStatusField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQrySyncStatusField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQrySyncStatusField *_wrap_new_CThostFtdcQrySyncStatusField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQrySyncStatusField *result = 0 ;
  CThostFtdcQrySyncStatusField *_swig_go_result;
  
  
  result = (CThostFtdcQrySyncStatusField *)new CThostFtdcQrySyncStatusField();
  *(CThostFtdcQrySyncStatusField **)&_swig_go_result = (CThostFtdcQrySyncStatusField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQrySyncStatusField_goctp_ef6abdc493ff8ae2(CThostFtdcQrySyncStatusField *_swig_go_0) {
  CThostFtdcQrySyncStatusField *arg1 = (CThostFtdcQrySyncStatusField *) 0 ;
  
  arg1 = *(CThostFtdcQrySyncStatusField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcCombinationLegField_CombInstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombinationLegField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCombinationLegField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CombInstrumentID, (const char *)arg2, 31-1);
      arg1->CombInstrumentID[31-1] = 0;
    } else {
      arg1->CombInstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCombinationLegField_CombInstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombinationLegField *_swig_go_0) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCombinationLegField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CombInstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombinationLegField_LegID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombinationLegField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcLegIDType arg2 ;
  
  arg1 = *(CThostFtdcCombinationLegField **)&_swig_go_0; 
  arg2 = (TThostFtdcLegIDType)_swig_go_1; 
  
  if (arg1) (arg1)->LegID = arg2;
  
}


intgo _wrap_CThostFtdcCombinationLegField_LegID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombinationLegField *_swig_go_0) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcLegIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcCombinationLegField **)&_swig_go_0; 
  
  result = (TThostFtdcLegIDType) ((arg1)->LegID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombinationLegField_LegInstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombinationLegField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCombinationLegField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LegInstrumentID, (const char *)arg2, 31-1);
      arg1->LegInstrumentID[31-1] = 0;
    } else {
      arg1->LegInstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCombinationLegField_LegInstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombinationLegField *_swig_go_0) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCombinationLegField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LegInstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombinationLegField_Direction_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombinationLegField *_swig_go_0, char _swig_go_1) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = *(CThostFtdcCombinationLegField **)&_swig_go_0; 
  arg2 = (TThostFtdcDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->Direction = arg2;
  
}


char _wrap_CThostFtdcCombinationLegField_Direction_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombinationLegField *_swig_go_0) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcCombinationLegField **)&_swig_go_0; 
  
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombinationLegField_LegMultiple_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombinationLegField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcLegMultipleType arg2 ;
  
  arg1 = *(CThostFtdcCombinationLegField **)&_swig_go_0; 
  arg2 = (TThostFtdcLegMultipleType)_swig_go_1; 
  
  if (arg1) (arg1)->LegMultiple = arg2;
  
}


intgo _wrap_CThostFtdcCombinationLegField_LegMultiple_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombinationLegField *_swig_go_0) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcLegMultipleType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcCombinationLegField **)&_swig_go_0; 
  
  result = (TThostFtdcLegMultipleType) ((arg1)->LegMultiple);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCombinationLegField_ImplyLevel_set_goctp_ef6abdc493ff8ae2(CThostFtdcCombinationLegField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcImplyLevelType arg2 ;
  
  arg1 = *(CThostFtdcCombinationLegField **)&_swig_go_0; 
  arg2 = (TThostFtdcImplyLevelType)_swig_go_1; 
  
  if (arg1) (arg1)->ImplyLevel = arg2;
  
}


intgo _wrap_CThostFtdcCombinationLegField_ImplyLevel_get_goctp_ef6abdc493ff8ae2(CThostFtdcCombinationLegField *_swig_go_0) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcImplyLevelType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcCombinationLegField **)&_swig_go_0; 
  
  result = (TThostFtdcImplyLevelType) ((arg1)->ImplyLevel);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcCombinationLegField *_wrap_new_CThostFtdcCombinationLegField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcCombinationLegField *result = 0 ;
  CThostFtdcCombinationLegField *_swig_go_result;
  
  
  result = (CThostFtdcCombinationLegField *)new CThostFtdcCombinationLegField();
  *(CThostFtdcCombinationLegField **)&_swig_go_result = (CThostFtdcCombinationLegField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcCombinationLegField_goctp_ef6abdc493ff8ae2(CThostFtdcCombinationLegField *_swig_go_0) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  
  arg1 = *(CThostFtdcCombinationLegField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcSyncStatusField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncStatusField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSyncStatusField *arg1 = (CThostFtdcSyncStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSyncStatusField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSyncStatusField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncStatusField *_swig_go_0) {
  CThostFtdcSyncStatusField *arg1 = (CThostFtdcSyncStatusField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSyncStatusField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSyncStatusField_DataSyncStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcSyncStatusField *_swig_go_0, char _swig_go_1) {
  CThostFtdcSyncStatusField *arg1 = (CThostFtdcSyncStatusField *) 0 ;
  TThostFtdcDataSyncStatusType arg2 ;
  
  arg1 = *(CThostFtdcSyncStatusField **)&_swig_go_0; 
  arg2 = (TThostFtdcDataSyncStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->DataSyncStatus = arg2;
  
}


char _wrap_CThostFtdcSyncStatusField_DataSyncStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcSyncStatusField *_swig_go_0) {
  CThostFtdcSyncStatusField *arg1 = (CThostFtdcSyncStatusField *) 0 ;
  TThostFtdcDataSyncStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcSyncStatusField **)&_swig_go_0; 
  
  result = (TThostFtdcDataSyncStatusType) ((arg1)->DataSyncStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcSyncStatusField *_wrap_new_CThostFtdcSyncStatusField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcSyncStatusField *result = 0 ;
  CThostFtdcSyncStatusField *_swig_go_result;
  
  
  result = (CThostFtdcSyncStatusField *)new CThostFtdcSyncStatusField();
  *(CThostFtdcSyncStatusField **)&_swig_go_result = (CThostFtdcSyncStatusField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcSyncStatusField_goctp_ef6abdc493ff8ae2(CThostFtdcSyncStatusField *_swig_go_0) {
  CThostFtdcSyncStatusField *arg1 = (CThostFtdcSyncStatusField *) 0 ;
  
  arg1 = *(CThostFtdcSyncStatusField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryLinkManField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryLinkManField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryLinkManField *arg1 = (CThostFtdcQryLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryLinkManField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryLinkManField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryLinkManField *_swig_go_0) {
  CThostFtdcQryLinkManField *arg1 = (CThostFtdcQryLinkManField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryLinkManField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryLinkManField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryLinkManField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryLinkManField *arg1 = (CThostFtdcQryLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryLinkManField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryLinkManField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryLinkManField *_swig_go_0) {
  CThostFtdcQryLinkManField *arg1 = (CThostFtdcQryLinkManField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryLinkManField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryLinkManField *_wrap_new_CThostFtdcQryLinkManField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryLinkManField *result = 0 ;
  CThostFtdcQryLinkManField *_swig_go_result;
  
  
  result = (CThostFtdcQryLinkManField *)new CThostFtdcQryLinkManField();
  *(CThostFtdcQryLinkManField **)&_swig_go_result = (CThostFtdcQryLinkManField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryLinkManField_goctp_ef6abdc493ff8ae2(CThostFtdcQryLinkManField *_swig_go_0) {
  CThostFtdcQryLinkManField *arg1 = (CThostFtdcQryLinkManField *) 0 ;
  
  arg1 = *(CThostFtdcQryLinkManField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcLinkManField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLinkManField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLinkManField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLinkManField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLinkManField_PersonType_set_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0, char _swig_go_1) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  TThostFtdcPersonTypeType arg2 ;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  arg2 = (TThostFtdcPersonTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->PersonType = arg2;
  
}


char _wrap_CThostFtdcLinkManField_PersonType_get_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  TThostFtdcPersonTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  result = (TThostFtdcPersonTypeType) ((arg1)->PersonType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcLinkManField_IdentifiedCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0, char _swig_go_1) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdentifiedCardType = arg2;
  
}


char _wrap_CThostFtdcLinkManField_IdentifiedCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdentifiedCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcLinkManField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLinkManField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLinkManField_PersonName_set_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->PersonName, (const char *)arg2, 81-1);
      arg1->PersonName[81-1] = 0;
    } else {
      arg1->PersonName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLinkManField_PersonName_get_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->PersonName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLinkManField_Telephone_set_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLinkManField_Telephone_get_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Telephone);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLinkManField_Address_set_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLinkManField_Address_get_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Address);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLinkManField_ZipCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLinkManField_ZipCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ZipCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLinkManField_Priority_set_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  TThostFtdcPriorityType arg2 ;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriorityType)_swig_go_1; 
  
  if (arg1) (arg1)->Priority = arg2;
  
}


intgo _wrap_CThostFtdcLinkManField_Priority_get_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  TThostFtdcPriorityType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  result = (TThostFtdcPriorityType) ((arg1)->Priority);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcLinkManField_UOAZipCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UOAZipCode, (const char *)arg2, 11-1);
      arg1->UOAZipCode[11-1] = 0;
    } else {
      arg1->UOAZipCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLinkManField_UOAZipCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UOAZipCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLinkManField_PersonFullName_set_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->PersonFullName, (const char *)arg2, 101-1);
      arg1->PersonFullName[101-1] = 0;
    } else {
      arg1->PersonFullName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLinkManField_PersonFullName_get_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->PersonFullName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcLinkManField *_wrap_new_CThostFtdcLinkManField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcLinkManField *result = 0 ;
  CThostFtdcLinkManField *_swig_go_result;
  
  
  result = (CThostFtdcLinkManField *)new CThostFtdcLinkManField();
  *(CThostFtdcLinkManField **)&_swig_go_result = (CThostFtdcLinkManField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcLinkManField_goctp_ef6abdc493ff8ae2(CThostFtdcLinkManField *_swig_go_0) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  
  arg1 = *(CThostFtdcLinkManField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryBrokerUserEventField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerUserEventField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryBrokerUserEventField *arg1 = (CThostFtdcQryBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryBrokerUserEventField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryBrokerUserEventField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerUserEventField *_swig_go_0) {
  CThostFtdcQryBrokerUserEventField *arg1 = (CThostFtdcQryBrokerUserEventField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryBrokerUserEventField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryBrokerUserEventField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerUserEventField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryBrokerUserEventField *arg1 = (CThostFtdcQryBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryBrokerUserEventField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryBrokerUserEventField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerUserEventField *_swig_go_0) {
  CThostFtdcQryBrokerUserEventField *arg1 = (CThostFtdcQryBrokerUserEventField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryBrokerUserEventField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryBrokerUserEventField_UserEventType_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerUserEventField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQryBrokerUserEventField *arg1 = (CThostFtdcQryBrokerUserEventField *) 0 ;
  TThostFtdcUserEventTypeType arg2 ;
  
  arg1 = *(CThostFtdcQryBrokerUserEventField **)&_swig_go_0; 
  arg2 = (TThostFtdcUserEventTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->UserEventType = arg2;
  
}


char _wrap_CThostFtdcQryBrokerUserEventField_UserEventType_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerUserEventField *_swig_go_0) {
  CThostFtdcQryBrokerUserEventField *arg1 = (CThostFtdcQryBrokerUserEventField *) 0 ;
  TThostFtdcUserEventTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQryBrokerUserEventField **)&_swig_go_0; 
  
  result = (TThostFtdcUserEventTypeType) ((arg1)->UserEventType);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcQryBrokerUserEventField *_wrap_new_CThostFtdcQryBrokerUserEventField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryBrokerUserEventField *result = 0 ;
  CThostFtdcQryBrokerUserEventField *_swig_go_result;
  
  
  result = (CThostFtdcQryBrokerUserEventField *)new CThostFtdcQryBrokerUserEventField();
  *(CThostFtdcQryBrokerUserEventField **)&_swig_go_result = (CThostFtdcQryBrokerUserEventField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryBrokerUserEventField_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerUserEventField *_swig_go_0) {
  CThostFtdcQryBrokerUserEventField *arg1 = (CThostFtdcQryBrokerUserEventField *) 0 ;
  
  arg1 = *(CThostFtdcQryBrokerUserEventField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcBrokerUserEventField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserEventField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserEventField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerUserEventField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserEventField *_swig_go_0) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserEventField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserEventField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserEventField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserEventField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerUserEventField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserEventField *_swig_go_0) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserEventField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserEventField_UserEventType_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserEventField *_swig_go_0, char _swig_go_1) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  TThostFtdcUserEventTypeType arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserEventField **)&_swig_go_0; 
  arg2 = (TThostFtdcUserEventTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->UserEventType = arg2;
  
}


char _wrap_CThostFtdcBrokerUserEventField_UserEventType_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserEventField *_swig_go_0) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  TThostFtdcUserEventTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserEventField **)&_swig_go_0; 
  
  result = (TThostFtdcUserEventTypeType) ((arg1)->UserEventType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserEventField_EventSequenceNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserEventField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserEventField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->EventSequenceNo = arg2;
  
}


intgo _wrap_CThostFtdcBrokerUserEventField_EventSequenceNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserEventField *_swig_go_0) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserEventField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->EventSequenceNo);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserEventField_EventDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserEventField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserEventField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->EventDate, (const char *)arg2, 9-1);
      arg1->EventDate[9-1] = 0;
    } else {
      arg1->EventDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerUserEventField_EventDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserEventField *_swig_go_0) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserEventField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->EventDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserEventField_EventTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserEventField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserEventField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->EventTime, (const char *)arg2, 9-1);
      arg1->EventTime[9-1] = 0;
    } else {
      arg1->EventTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerUserEventField_EventTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserEventField *_swig_go_0) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserEventField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->EventTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserEventField_UserEventInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserEventField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserEventField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserEventInfo, (const char *)arg2, 1025-1);
      arg1->UserEventInfo[1025-1] = 0;
    } else {
      arg1->UserEventInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerUserEventField_UserEventInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserEventField *_swig_go_0) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserEventField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserEventInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserEventField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserEventField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserEventField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerUserEventField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserEventField *_swig_go_0) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserEventField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserEventField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserEventField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserEventField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerUserEventField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserEventField *_swig_go_0) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserEventField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcBrokerUserEventField *_wrap_new_CThostFtdcBrokerUserEventField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcBrokerUserEventField *result = 0 ;
  CThostFtdcBrokerUserEventField *_swig_go_result;
  
  
  result = (CThostFtdcBrokerUserEventField *)new CThostFtdcBrokerUserEventField();
  *(CThostFtdcBrokerUserEventField **)&_swig_go_result = (CThostFtdcBrokerUserEventField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcBrokerUserEventField_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserEventField *_swig_go_0) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  
  arg1 = *(CThostFtdcBrokerUserEventField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryContractBankField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryContractBankField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryContractBankField *arg1 = (CThostFtdcQryContractBankField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryContractBankField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryContractBankField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryContractBankField *_swig_go_0) {
  CThostFtdcQryContractBankField *arg1 = (CThostFtdcQryContractBankField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryContractBankField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryContractBankField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryContractBankField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryContractBankField *arg1 = (CThostFtdcQryContractBankField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryContractBankField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryContractBankField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryContractBankField *_swig_go_0) {
  CThostFtdcQryContractBankField *arg1 = (CThostFtdcQryContractBankField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryContractBankField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryContractBankField_BankBrchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryContractBankField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryContractBankField *arg1 = (CThostFtdcQryContractBankField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryContractBankField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBrchID, (const char *)arg2, 5-1);
      arg1->BankBrchID[5-1] = 0;
    } else {
      arg1->BankBrchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryContractBankField_BankBrchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryContractBankField *_swig_go_0) {
  CThostFtdcQryContractBankField *arg1 = (CThostFtdcQryContractBankField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryContractBankField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBrchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryContractBankField *_wrap_new_CThostFtdcQryContractBankField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryContractBankField *result = 0 ;
  CThostFtdcQryContractBankField *_swig_go_result;
  
  
  result = (CThostFtdcQryContractBankField *)new CThostFtdcQryContractBankField();
  *(CThostFtdcQryContractBankField **)&_swig_go_result = (CThostFtdcQryContractBankField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryContractBankField_goctp_ef6abdc493ff8ae2(CThostFtdcQryContractBankField *_swig_go_0) {
  CThostFtdcQryContractBankField *arg1 = (CThostFtdcQryContractBankField *) 0 ;
  
  arg1 = *(CThostFtdcQryContractBankField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcContractBankField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcContractBankField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcContractBankField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcContractBankField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcContractBankField *_swig_go_0) {
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcContractBankField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcContractBankField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcContractBankField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcContractBankField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcContractBankField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcContractBankField *_swig_go_0) {
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcContractBankField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcContractBankField_BankBrchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcContractBankField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcContractBankField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBrchID, (const char *)arg2, 5-1);
      arg1->BankBrchID[5-1] = 0;
    } else {
      arg1->BankBrchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcContractBankField_BankBrchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcContractBankField *_swig_go_0) {
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcContractBankField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBrchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcContractBankField_BankName_set_goctp_ef6abdc493ff8ae2(CThostFtdcContractBankField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcContractBankField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankName, (const char *)arg2, 101-1);
      arg1->BankName[101-1] = 0;
    } else {
      arg1->BankName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcContractBankField_BankName_get_goctp_ef6abdc493ff8ae2(CThostFtdcContractBankField *_swig_go_0) {
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcContractBankField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcContractBankField *_wrap_new_CThostFtdcContractBankField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcContractBankField *result = 0 ;
  CThostFtdcContractBankField *_swig_go_result;
  
  
  result = (CThostFtdcContractBankField *)new CThostFtdcContractBankField();
  *(CThostFtdcContractBankField **)&_swig_go_result = (CThostFtdcContractBankField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcContractBankField_goctp_ef6abdc493ff8ae2(CThostFtdcContractBankField *_swig_go_0) {
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  
  arg1 = *(CThostFtdcContractBankField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInvestorPositionCombineDetailField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorPositionCombineDetailField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionCombineDetailField_OpenDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OpenDate, (const char *)arg2, 9-1);
      arg1->OpenDate[9-1] = 0;
    } else {
      arg1->OpenDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorPositionCombineDetailField_OpenDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OpenDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionCombineDetailField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorPositionCombineDetailField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionCombineDetailField_SettlementID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcSettlementIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementID = arg2;
  
}


intgo _wrap_CThostFtdcInvestorPositionCombineDetailField_SettlementID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcSettlementIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionCombineDetailField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorPositionCombineDetailField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionCombineDetailField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorPositionCombineDetailField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionCombineDetailField_ComTradeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ComTradeID, (const char *)arg2, 21-1);
      arg1->ComTradeID[21-1] = 0;
    } else {
      arg1->ComTradeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorPositionCombineDetailField_ComTradeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ComTradeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionCombineDetailField_TradeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeID, (const char *)arg2, 21-1);
      arg1->TradeID[21-1] = 0;
    } else {
      arg1->TradeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorPositionCombineDetailField_TradeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionCombineDetailField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorPositionCombineDetailField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionCombineDetailField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcInvestorPositionCombineDetailField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionCombineDetailField_Direction_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->Direction = arg2;
  
}


char _wrap_CThostFtdcInvestorPositionCombineDetailField_Direction_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionCombineDetailField_TotalAmt_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->TotalAmt = arg2;
  
}


intgo _wrap_CThostFtdcInvestorPositionCombineDetailField_TotalAmt_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->TotalAmt);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionCombineDetailField_Margin_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Margin = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionCombineDetailField_Margin_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Margin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionCombineDetailField_ExchMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ExchMargin = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionCombineDetailField_ExchMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ExchMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionCombineDetailField_MarginRateByMoney_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->MarginRateByMoney = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionCombineDetailField_MarginRateByMoney_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByMoney);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionCombineDetailField_MarginRateByVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->MarginRateByVolume = arg2;
  
}


double _wrap_CThostFtdcInvestorPositionCombineDetailField_MarginRateByVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionCombineDetailField_LegID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcLegIDType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcLegIDType)_swig_go_1; 
  
  if (arg1) (arg1)->LegID = arg2;
  
}


intgo _wrap_CThostFtdcInvestorPositionCombineDetailField_LegID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcLegIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcLegIDType) ((arg1)->LegID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionCombineDetailField_LegMultiple_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcLegMultipleType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcLegMultipleType)_swig_go_1; 
  
  if (arg1) (arg1)->LegMultiple = arg2;
  
}


intgo _wrap_CThostFtdcInvestorPositionCombineDetailField_LegMultiple_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcLegMultipleType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcLegMultipleType) ((arg1)->LegMultiple);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionCombineDetailField_CombInstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CombInstrumentID, (const char *)arg2, 31-1);
      arg1->CombInstrumentID[31-1] = 0;
    } else {
      arg1->CombInstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorPositionCombineDetailField_CombInstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CombInstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorPositionCombineDetailField_TradeGroupID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcTradeGroupIDType arg2 ;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeGroupIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TradeGroupID = arg2;
  
}


intgo _wrap_CThostFtdcInvestorPositionCombineDetailField_TradeGroupID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcTradeGroupIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeGroupIDType) ((arg1)->TradeGroupID);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcInvestorPositionCombineDetailField *_wrap_new_CThostFtdcInvestorPositionCombineDetailField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInvestorPositionCombineDetailField *result = 0 ;
  CThostFtdcInvestorPositionCombineDetailField *_swig_go_result;
  
  
  result = (CThostFtdcInvestorPositionCombineDetailField *)new CThostFtdcInvestorPositionCombineDetailField();
  *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_result = (CThostFtdcInvestorPositionCombineDetailField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInvestorPositionCombineDetailField_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  
  arg1 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcParkedOrderField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_OrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderField_OrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_OrderPriceType_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderPriceTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderPriceType = arg2;
  
}


char _wrap_CThostFtdcParkedOrderField_OrderPriceType_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderPriceTypeType) ((arg1)->OrderPriceType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_Direction_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->Direction = arg2;
  
}


char _wrap_CThostFtdcParkedOrderField_Direction_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_CombOffsetFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CombOffsetFlag, (const char *)arg2, 5-1);
      arg1->CombOffsetFlag[5-1] = 0;
    } else {
      arg1->CombOffsetFlag[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderField_CombOffsetFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CombOffsetFlag);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_CombHedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CombHedgeFlag, (const char *)arg2, 5-1);
      arg1->CombHedgeFlag[5-1] = 0;
    } else {
      arg1->CombHedgeFlag[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderField_CombHedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CombHedgeFlag);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_LimitPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, double _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LimitPrice = arg2;
  
}


double _wrap_CThostFtdcParkedOrderField_LimitPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_VolumeTotalOriginal_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeTotalOriginal = arg2;
  
}


intgo _wrap_CThostFtdcParkedOrderField_VolumeTotalOriginal_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotalOriginal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_TimeCondition_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcTimeConditionType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcTimeConditionType)_swig_go_1; 
  
  if (arg1) (arg1)->TimeCondition = arg2;
  
}


char _wrap_CThostFtdcParkedOrderField_TimeCondition_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcTimeConditionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcTimeConditionType) ((arg1)->TimeCondition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_GTDDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->GTDDate, (const char *)arg2, 9-1);
      arg1->GTDDate[9-1] = 0;
    } else {
      arg1->GTDDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderField_GTDDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->GTDDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_VolumeCondition_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcVolumeConditionType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeConditionType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeCondition = arg2;
  
}


char _wrap_CThostFtdcParkedOrderField_VolumeCondition_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcVolumeConditionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeConditionType) ((arg1)->VolumeCondition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_MinVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->MinVolume = arg2;
  
}


intgo _wrap_CThostFtdcParkedOrderField_MinVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->MinVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_ContingentCondition_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcContingentConditionType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcContingentConditionType)_swig_go_1; 
  
  if (arg1) (arg1)->ContingentCondition = arg2;
  
}


char _wrap_CThostFtdcParkedOrderField_ContingentCondition_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcContingentConditionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcContingentConditionType) ((arg1)->ContingentCondition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_StopPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, double _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->StopPrice = arg2;
  
}


double _wrap_CThostFtdcParkedOrderField_StopPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->StopPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_ForceCloseReason_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcForceCloseReasonType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcForceCloseReasonType)_swig_go_1; 
  
  if (arg1) (arg1)->ForceCloseReason = arg2;
  
}


char _wrap_CThostFtdcParkedOrderField_ForceCloseReason_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcForceCloseReasonType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcForceCloseReasonType) ((arg1)->ForceCloseReason);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_IsAutoSuspend_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsAutoSuspend = arg2;
  
}


intgo _wrap_CThostFtdcParkedOrderField_IsAutoSuspend_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsAutoSuspend);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcParkedOrderField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_UserForceClose_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->UserForceClose = arg2;
  
}


intgo _wrap_CThostFtdcParkedOrderField_UserForceClose_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->UserForceClose);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_ParkedOrderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParkedOrderID, (const char *)arg2, 13-1);
      arg1->ParkedOrderID[13-1] = 0;
    } else {
      arg1->ParkedOrderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderField_ParkedOrderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParkedOrderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_UserType_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcUserTypeType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcUserTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->UserType = arg2;
  
}


char _wrap_CThostFtdcParkedOrderField_UserType_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcUserTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcUserTypeType) ((arg1)->UserType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_Status_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcParkedOrderStatusType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcParkedOrderStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->Status = arg2;
  
}


char _wrap_CThostFtdcParkedOrderField_Status_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcParkedOrderStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcParkedOrderStatusType) ((arg1)->Status);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcParkedOrderField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_IsSwapOrder_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsSwapOrder = arg2;
  
}


intgo _wrap_CThostFtdcParkedOrderField_IsSwapOrder_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsSwapOrder);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcParkedOrderField *_wrap_new_CThostFtdcParkedOrderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcParkedOrderField *result = 0 ;
  CThostFtdcParkedOrderField *_swig_go_result;
  
  
  result = (CThostFtdcParkedOrderField *)new CThostFtdcParkedOrderField();
  *(CThostFtdcParkedOrderField **)&_swig_go_result = (CThostFtdcParkedOrderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcParkedOrderField_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderField *_swig_go_0) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  
  arg1 = *(CThostFtdcParkedOrderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcParkedOrderActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderActionField_OrderActionRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionRefType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderActionRef = arg2;
  
}


intgo _wrap_CThostFtdcParkedOrderActionField_OrderActionRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionRefType) ((arg1)->OrderActionRef);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderActionField_OrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderActionField_OrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderActionField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcParkedOrderActionField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderActionField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcParkedOrderActionField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderActionField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcParkedOrderActionField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderActionField_OrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderActionField_OrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderActionField_ActionFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcActionFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->ActionFlag = arg2;
  
}


char _wrap_CThostFtdcParkedOrderActionField_ActionFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderActionField_LimitPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LimitPrice = arg2;
  
}


double _wrap_CThostFtdcParkedOrderActionField_LimitPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderActionField_VolumeChange_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeChange = arg2;
  
}


intgo _wrap_CThostFtdcParkedOrderActionField_VolumeChange_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->VolumeChange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderActionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderActionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderActionField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderActionField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderActionField_ParkedOrderActionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParkedOrderActionID, (const char *)arg2, 13-1);
      arg1->ParkedOrderActionID[13-1] = 0;
    } else {
      arg1->ParkedOrderActionID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderActionField_ParkedOrderActionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParkedOrderActionID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderActionField_UserType_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcUserTypeType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcUserTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->UserType = arg2;
  
}


char _wrap_CThostFtdcParkedOrderActionField_UserType_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcUserTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcUserTypeType) ((arg1)->UserType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderActionField_Status_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcParkedOrderStatusType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcParkedOrderStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->Status = arg2;
  
}


char _wrap_CThostFtdcParkedOrderActionField_Status_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcParkedOrderStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcParkedOrderStatusType) ((arg1)->Status);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderActionField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcParkedOrderActionField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderActionField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderActionField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderActionField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderActionField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderActionField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderActionField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcParkedOrderActionField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcParkedOrderActionField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcParkedOrderActionField *_wrap_new_CThostFtdcParkedOrderActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcParkedOrderActionField *result = 0 ;
  CThostFtdcParkedOrderActionField *_swig_go_result;
  
  
  result = (CThostFtdcParkedOrderActionField *)new CThostFtdcParkedOrderActionField();
  *(CThostFtdcParkedOrderActionField **)&_swig_go_result = (CThostFtdcParkedOrderActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcParkedOrderActionField_goctp_ef6abdc493ff8ae2(CThostFtdcParkedOrderActionField *_swig_go_0) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  
  arg1 = *(CThostFtdcParkedOrderActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryParkedOrderField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryParkedOrderField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryParkedOrderField *_swig_go_0) {
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryParkedOrderField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryParkedOrderField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryParkedOrderField *_swig_go_0) {
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryParkedOrderField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryParkedOrderField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryParkedOrderField *_swig_go_0) {
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryParkedOrderField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryParkedOrderField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryParkedOrderField *_swig_go_0) {
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryParkedOrderField *_wrap_new_CThostFtdcQryParkedOrderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryParkedOrderField *result = 0 ;
  CThostFtdcQryParkedOrderField *_swig_go_result;
  
  
  result = (CThostFtdcQryParkedOrderField *)new CThostFtdcQryParkedOrderField();
  *(CThostFtdcQryParkedOrderField **)&_swig_go_result = (CThostFtdcQryParkedOrderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryParkedOrderField_goctp_ef6abdc493ff8ae2(CThostFtdcQryParkedOrderField *_swig_go_0) {
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  
  arg1 = *(CThostFtdcQryParkedOrderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryParkedOrderActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryParkedOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryParkedOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryParkedOrderActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryParkedOrderActionField *_swig_go_0) {
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryParkedOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryParkedOrderActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryParkedOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryParkedOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryParkedOrderActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryParkedOrderActionField *_swig_go_0) {
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryParkedOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryParkedOrderActionField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryParkedOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryParkedOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryParkedOrderActionField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryParkedOrderActionField *_swig_go_0) {
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryParkedOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryParkedOrderActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryParkedOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryParkedOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryParkedOrderActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryParkedOrderActionField *_swig_go_0) {
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryParkedOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryParkedOrderActionField *_wrap_new_CThostFtdcQryParkedOrderActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryParkedOrderActionField *result = 0 ;
  CThostFtdcQryParkedOrderActionField *_swig_go_result;
  
  
  result = (CThostFtdcQryParkedOrderActionField *)new CThostFtdcQryParkedOrderActionField();
  *(CThostFtdcQryParkedOrderActionField **)&_swig_go_result = (CThostFtdcQryParkedOrderActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryParkedOrderActionField_goctp_ef6abdc493ff8ae2(CThostFtdcQryParkedOrderActionField *_swig_go_0) {
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  
  arg1 = *(CThostFtdcQryParkedOrderActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcRemoveParkedOrderField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRemoveParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRemoveParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRemoveParkedOrderField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRemoveParkedOrderField *_swig_go_0) {
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRemoveParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRemoveParkedOrderField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRemoveParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRemoveParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRemoveParkedOrderField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRemoveParkedOrderField *_swig_go_0) {
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRemoveParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRemoveParkedOrderField_ParkedOrderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRemoveParkedOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRemoveParkedOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParkedOrderID, (const char *)arg2, 13-1);
      arg1->ParkedOrderID[13-1] = 0;
    } else {
      arg1->ParkedOrderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRemoveParkedOrderField_ParkedOrderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRemoveParkedOrderField *_swig_go_0) {
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRemoveParkedOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParkedOrderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcRemoveParkedOrderField *_wrap_new_CThostFtdcRemoveParkedOrderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcRemoveParkedOrderField *result = 0 ;
  CThostFtdcRemoveParkedOrderField *_swig_go_result;
  
  
  result = (CThostFtdcRemoveParkedOrderField *)new CThostFtdcRemoveParkedOrderField();
  *(CThostFtdcRemoveParkedOrderField **)&_swig_go_result = (CThostFtdcRemoveParkedOrderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcRemoveParkedOrderField_goctp_ef6abdc493ff8ae2(CThostFtdcRemoveParkedOrderField *_swig_go_0) {
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  
  arg1 = *(CThostFtdcRemoveParkedOrderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcRemoveParkedOrderActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRemoveParkedOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRemoveParkedOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRemoveParkedOrderActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRemoveParkedOrderActionField *_swig_go_0) {
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRemoveParkedOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRemoveParkedOrderActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRemoveParkedOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRemoveParkedOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRemoveParkedOrderActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRemoveParkedOrderActionField *_swig_go_0) {
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRemoveParkedOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRemoveParkedOrderActionField_ParkedOrderActionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRemoveParkedOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRemoveParkedOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParkedOrderActionID, (const char *)arg2, 13-1);
      arg1->ParkedOrderActionID[13-1] = 0;
    } else {
      arg1->ParkedOrderActionID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRemoveParkedOrderActionField_ParkedOrderActionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRemoveParkedOrderActionField *_swig_go_0) {
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRemoveParkedOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParkedOrderActionID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcRemoveParkedOrderActionField *_wrap_new_CThostFtdcRemoveParkedOrderActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcRemoveParkedOrderActionField *result = 0 ;
  CThostFtdcRemoveParkedOrderActionField *_swig_go_result;
  
  
  result = (CThostFtdcRemoveParkedOrderActionField *)new CThostFtdcRemoveParkedOrderActionField();
  *(CThostFtdcRemoveParkedOrderActionField **)&_swig_go_result = (CThostFtdcRemoveParkedOrderActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcRemoveParkedOrderActionField_goctp_ef6abdc493ff8ae2(CThostFtdcRemoveParkedOrderActionField *_swig_go_0) {
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  
  arg1 = *(CThostFtdcRemoveParkedOrderActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInvestorWithdrawAlgorithmField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorWithdrawAlgorithmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorWithdrawAlgorithmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorWithdrawAlgorithmField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorWithdrawAlgorithmField *_swig_go_0) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorWithdrawAlgorithmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorWithdrawAlgorithmField_InvestorRange_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorWithdrawAlgorithmField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = *(CThostFtdcInvestorWithdrawAlgorithmField **)&_swig_go_0; 
  arg2 = (TThostFtdcInvestorRangeType)_swig_go_1; 
  
  if (arg1) (arg1)->InvestorRange = arg2;
  
}


char _wrap_CThostFtdcInvestorWithdrawAlgorithmField_InvestorRange_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorWithdrawAlgorithmField *_swig_go_0) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  TThostFtdcInvestorRangeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorWithdrawAlgorithmField **)&_swig_go_0; 
  
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorWithdrawAlgorithmField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorWithdrawAlgorithmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorWithdrawAlgorithmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorWithdrawAlgorithmField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorWithdrawAlgorithmField *_swig_go_0) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorWithdrawAlgorithmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorWithdrawAlgorithmField_UsingRatio_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorWithdrawAlgorithmField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInvestorWithdrawAlgorithmField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->UsingRatio = arg2;
  
}


double _wrap_CThostFtdcInvestorWithdrawAlgorithmField_UsingRatio_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorWithdrawAlgorithmField *_swig_go_0) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorWithdrawAlgorithmField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->UsingRatio);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorWithdrawAlgorithmField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorWithdrawAlgorithmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorWithdrawAlgorithmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorWithdrawAlgorithmField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorWithdrawAlgorithmField *_swig_go_0) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorWithdrawAlgorithmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorWithdrawAlgorithmField_FundMortgageRatio_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorWithdrawAlgorithmField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = *(CThostFtdcInvestorWithdrawAlgorithmField **)&_swig_go_0; 
  arg2 = (TThostFtdcRatioType)_swig_go_1; 
  
  if (arg1) (arg1)->FundMortgageRatio = arg2;
  
}


double _wrap_CThostFtdcInvestorWithdrawAlgorithmField_FundMortgageRatio_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorWithdrawAlgorithmField *_swig_go_0) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorWithdrawAlgorithmField **)&_swig_go_0; 
  
  result = (TThostFtdcRatioType) ((arg1)->FundMortgageRatio);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcInvestorWithdrawAlgorithmField *_wrap_new_CThostFtdcInvestorWithdrawAlgorithmField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInvestorWithdrawAlgorithmField *result = 0 ;
  CThostFtdcInvestorWithdrawAlgorithmField *_swig_go_result;
  
  
  result = (CThostFtdcInvestorWithdrawAlgorithmField *)new CThostFtdcInvestorWithdrawAlgorithmField();
  *(CThostFtdcInvestorWithdrawAlgorithmField **)&_swig_go_result = (CThostFtdcInvestorWithdrawAlgorithmField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInvestorWithdrawAlgorithmField_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorWithdrawAlgorithmField *_swig_go_0) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  
  arg1 = *(CThostFtdcInvestorWithdrawAlgorithmField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryInvestorPositionCombineDetailField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorPositionCombineDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInvestorPositionCombineDetailField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInvestorPositionCombineDetailField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorPositionCombineDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInvestorPositionCombineDetailField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInvestorPositionCombineDetailField_CombInstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorPositionCombineDetailField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CombInstrumentID, (const char *)arg2, 31-1);
      arg1->CombInstrumentID[31-1] = 0;
    } else {
      arg1->CombInstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInvestorPositionCombineDetailField_CombInstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CombInstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryInvestorPositionCombineDetailField *_wrap_new_CThostFtdcQryInvestorPositionCombineDetailField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryInvestorPositionCombineDetailField *result = 0 ;
  CThostFtdcQryInvestorPositionCombineDetailField *_swig_go_result;
  
  
  result = (CThostFtdcQryInvestorPositionCombineDetailField *)new CThostFtdcQryInvestorPositionCombineDetailField();
  *(CThostFtdcQryInvestorPositionCombineDetailField **)&_swig_go_result = (CThostFtdcQryInvestorPositionCombineDetailField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryInvestorPositionCombineDetailField_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorPositionCombineDetailField *_swig_go_0) {
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  
  arg1 = *(CThostFtdcQryInvestorPositionCombineDetailField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcMarketDataAveragePriceField_AveragePrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataAveragePriceField *_swig_go_0, double _swig_go_1) {
  CThostFtdcMarketDataAveragePriceField *arg1 = (CThostFtdcMarketDataAveragePriceField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcMarketDataAveragePriceField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->AveragePrice = arg2;
  
}


double _wrap_CThostFtdcMarketDataAveragePriceField_AveragePrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataAveragePriceField *_swig_go_0) {
  CThostFtdcMarketDataAveragePriceField *arg1 = (CThostFtdcMarketDataAveragePriceField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcMarketDataAveragePriceField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->AveragePrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcMarketDataAveragePriceField *_wrap_new_CThostFtdcMarketDataAveragePriceField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcMarketDataAveragePriceField *result = 0 ;
  CThostFtdcMarketDataAveragePriceField *_swig_go_result;
  
  
  result = (CThostFtdcMarketDataAveragePriceField *)new CThostFtdcMarketDataAveragePriceField();
  *(CThostFtdcMarketDataAveragePriceField **)&_swig_go_result = (CThostFtdcMarketDataAveragePriceField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcMarketDataAveragePriceField_goctp_ef6abdc493ff8ae2(CThostFtdcMarketDataAveragePriceField *_swig_go_0) {
  CThostFtdcMarketDataAveragePriceField *arg1 = (CThostFtdcMarketDataAveragePriceField *) 0 ;
  
  arg1 = *(CThostFtdcMarketDataAveragePriceField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcVerifyInvestorPasswordField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyInvestorPasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyInvestorPasswordField *arg1 = (CThostFtdcVerifyInvestorPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyInvestorPasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyInvestorPasswordField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyInvestorPasswordField *_swig_go_0) {
  CThostFtdcVerifyInvestorPasswordField *arg1 = (CThostFtdcVerifyInvestorPasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyInvestorPasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyInvestorPasswordField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyInvestorPasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyInvestorPasswordField *arg1 = (CThostFtdcVerifyInvestorPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyInvestorPasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyInvestorPasswordField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyInvestorPasswordField *_swig_go_0) {
  CThostFtdcVerifyInvestorPasswordField *arg1 = (CThostFtdcVerifyInvestorPasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyInvestorPasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyInvestorPasswordField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyInvestorPasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyInvestorPasswordField *arg1 = (CThostFtdcVerifyInvestorPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyInvestorPasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyInvestorPasswordField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyInvestorPasswordField *_swig_go_0) {
  CThostFtdcVerifyInvestorPasswordField *arg1 = (CThostFtdcVerifyInvestorPasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyInvestorPasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcVerifyInvestorPasswordField *_wrap_new_CThostFtdcVerifyInvestorPasswordField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcVerifyInvestorPasswordField *result = 0 ;
  CThostFtdcVerifyInvestorPasswordField *_swig_go_result;
  
  
  result = (CThostFtdcVerifyInvestorPasswordField *)new CThostFtdcVerifyInvestorPasswordField();
  *(CThostFtdcVerifyInvestorPasswordField **)&_swig_go_result = (CThostFtdcVerifyInvestorPasswordField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcVerifyInvestorPasswordField_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyInvestorPasswordField *_swig_go_0) {
  CThostFtdcVerifyInvestorPasswordField *arg1 = (CThostFtdcVerifyInvestorPasswordField *) 0 ;
  
  arg1 = *(CThostFtdcVerifyInvestorPasswordField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcUserIPField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserIPField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserIPField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserIPField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserIPField *_swig_go_0) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserIPField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserIPField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserIPField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserIPField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserIPField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserIPField *_swig_go_0) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserIPField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserIPField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserIPField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserIPField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserIPField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserIPField *_swig_go_0) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserIPField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserIPField_IPMask_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserIPField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserIPField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPMask, (const char *)arg2, 16-1);
      arg1->IPMask[16-1] = 0;
    } else {
      arg1->IPMask[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserIPField_IPMask_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserIPField *_swig_go_0) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserIPField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPMask);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserIPField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserIPField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserIPField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserIPField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserIPField *_swig_go_0) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserIPField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcUserIPField *_wrap_new_CThostFtdcUserIPField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcUserIPField *result = 0 ;
  CThostFtdcUserIPField *_swig_go_result;
  
  
  result = (CThostFtdcUserIPField *)new CThostFtdcUserIPField();
  *(CThostFtdcUserIPField **)&_swig_go_result = (CThostFtdcUserIPField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcUserIPField_goctp_ef6abdc493ff8ae2(CThostFtdcUserIPField *_swig_go_0) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  
  arg1 = *(CThostFtdcUserIPField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTradingNoticeInfoField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingNoticeInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingNoticeInfoField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeInfoField *_swig_go_0) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingNoticeInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingNoticeInfoField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingNoticeInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingNoticeInfoField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeInfoField *_swig_go_0) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingNoticeInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingNoticeInfoField_SendTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingNoticeInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SendTime, (const char *)arg2, 9-1);
      arg1->SendTime[9-1] = 0;
    } else {
      arg1->SendTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingNoticeInfoField_SendTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeInfoField *_swig_go_0) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingNoticeInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->SendTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingNoticeInfoField_FieldContent_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingNoticeInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FieldContent, (const char *)arg2, 501-1);
      arg1->FieldContent[501-1] = 0;
    } else {
      arg1->FieldContent[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingNoticeInfoField_FieldContent_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeInfoField *_swig_go_0) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingNoticeInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->FieldContent);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingNoticeInfoField_SequenceSeries_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeInfoField *_swig_go_0, short _swig_go_1) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  TThostFtdcSequenceSeriesType arg2 ;
  
  arg1 = *(CThostFtdcTradingNoticeInfoField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceSeriesType)_swig_go_1; 
  
  if (arg1) (arg1)->SequenceSeries = arg2;
  
}


short _wrap_CThostFtdcTradingNoticeInfoField_SequenceSeries_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeInfoField *_swig_go_0) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  TThostFtdcSequenceSeriesType result;
  short _swig_go_result;
  
  arg1 = *(CThostFtdcTradingNoticeInfoField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceSeriesType) ((arg1)->SequenceSeries);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingNoticeInfoField_SequenceNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeInfoField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcTradingNoticeInfoField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->SequenceNo = arg2;
  
}


intgo _wrap_CThostFtdcTradingNoticeInfoField_SequenceNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeInfoField *_swig_go_0) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTradingNoticeInfoField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcTradingNoticeInfoField *_wrap_new_CThostFtdcTradingNoticeInfoField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTradingNoticeInfoField *result = 0 ;
  CThostFtdcTradingNoticeInfoField *_swig_go_result;
  
  
  result = (CThostFtdcTradingNoticeInfoField *)new CThostFtdcTradingNoticeInfoField();
  *(CThostFtdcTradingNoticeInfoField **)&_swig_go_result = (CThostFtdcTradingNoticeInfoField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTradingNoticeInfoField_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeInfoField *_swig_go_0) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  
  arg1 = *(CThostFtdcTradingNoticeInfoField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTradingNoticeField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingNoticeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingNoticeField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeField *_swig_go_0) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingNoticeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingNoticeField_InvestorRange_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeField *_swig_go_0, char _swig_go_1) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = *(CThostFtdcTradingNoticeField **)&_swig_go_0; 
  arg2 = (TThostFtdcInvestorRangeType)_swig_go_1; 
  
  if (arg1) (arg1)->InvestorRange = arg2;
  
}


char _wrap_CThostFtdcTradingNoticeField_InvestorRange_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeField *_swig_go_0) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  TThostFtdcInvestorRangeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcTradingNoticeField **)&_swig_go_0; 
  
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingNoticeField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingNoticeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingNoticeField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeField *_swig_go_0) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingNoticeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingNoticeField_SequenceSeries_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeField *_swig_go_0, short _swig_go_1) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  TThostFtdcSequenceSeriesType arg2 ;
  
  arg1 = *(CThostFtdcTradingNoticeField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceSeriesType)_swig_go_1; 
  
  if (arg1) (arg1)->SequenceSeries = arg2;
  
}


short _wrap_CThostFtdcTradingNoticeField_SequenceSeries_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeField *_swig_go_0) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  TThostFtdcSequenceSeriesType result;
  short _swig_go_result;
  
  arg1 = *(CThostFtdcTradingNoticeField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceSeriesType) ((arg1)->SequenceSeries);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingNoticeField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingNoticeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingNoticeField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeField *_swig_go_0) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingNoticeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingNoticeField_SendTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingNoticeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SendTime, (const char *)arg2, 9-1);
      arg1->SendTime[9-1] = 0;
    } else {
      arg1->SendTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingNoticeField_SendTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeField *_swig_go_0) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingNoticeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->SendTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingNoticeField_SequenceNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcTradingNoticeField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->SequenceNo = arg2;
  
}


intgo _wrap_CThostFtdcTradingNoticeField_SequenceNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeField *_swig_go_0) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTradingNoticeField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingNoticeField_FieldContent_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingNoticeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FieldContent, (const char *)arg2, 501-1);
      arg1->FieldContent[501-1] = 0;
    } else {
      arg1->FieldContent[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingNoticeField_FieldContent_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeField *_swig_go_0) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingNoticeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->FieldContent);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcTradingNoticeField *_wrap_new_CThostFtdcTradingNoticeField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTradingNoticeField *result = 0 ;
  CThostFtdcTradingNoticeField *_swig_go_result;
  
  
  result = (CThostFtdcTradingNoticeField *)new CThostFtdcTradingNoticeField();
  *(CThostFtdcTradingNoticeField **)&_swig_go_result = (CThostFtdcTradingNoticeField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTradingNoticeField_goctp_ef6abdc493ff8ae2(CThostFtdcTradingNoticeField *_swig_go_0) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  
  arg1 = *(CThostFtdcTradingNoticeField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryTradingNoticeField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingNoticeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTradingNoticeField *arg1 = (CThostFtdcQryTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTradingNoticeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTradingNoticeField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingNoticeField *_swig_go_0) {
  CThostFtdcQryTradingNoticeField *arg1 = (CThostFtdcQryTradingNoticeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTradingNoticeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryTradingNoticeField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingNoticeField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTradingNoticeField *arg1 = (CThostFtdcQryTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTradingNoticeField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTradingNoticeField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingNoticeField *_swig_go_0) {
  CThostFtdcQryTradingNoticeField *arg1 = (CThostFtdcQryTradingNoticeField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTradingNoticeField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryTradingNoticeField *_wrap_new_CThostFtdcQryTradingNoticeField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryTradingNoticeField *result = 0 ;
  CThostFtdcQryTradingNoticeField *_swig_go_result;
  
  
  result = (CThostFtdcQryTradingNoticeField *)new CThostFtdcQryTradingNoticeField();
  *(CThostFtdcQryTradingNoticeField **)&_swig_go_result = (CThostFtdcQryTradingNoticeField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryTradingNoticeField_goctp_ef6abdc493ff8ae2(CThostFtdcQryTradingNoticeField *_swig_go_0) {
  CThostFtdcQryTradingNoticeField *arg1 = (CThostFtdcQryTradingNoticeField *) 0 ;
  
  arg1 = *(CThostFtdcQryTradingNoticeField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryErrOrderField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryErrOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryErrOrderField *arg1 = (CThostFtdcQryErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryErrOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryErrOrderField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryErrOrderField *_swig_go_0) {
  CThostFtdcQryErrOrderField *arg1 = (CThostFtdcQryErrOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryErrOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryErrOrderField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryErrOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryErrOrderField *arg1 = (CThostFtdcQryErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryErrOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryErrOrderField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryErrOrderField *_swig_go_0) {
  CThostFtdcQryErrOrderField *arg1 = (CThostFtdcQryErrOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryErrOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryErrOrderField *_wrap_new_CThostFtdcQryErrOrderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryErrOrderField *result = 0 ;
  CThostFtdcQryErrOrderField *_swig_go_result;
  
  
  result = (CThostFtdcQryErrOrderField *)new CThostFtdcQryErrOrderField();
  *(CThostFtdcQryErrOrderField **)&_swig_go_result = (CThostFtdcQryErrOrderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryErrOrderField_goctp_ef6abdc493ff8ae2(CThostFtdcQryErrOrderField *_swig_go_0) {
  CThostFtdcQryErrOrderField *arg1 = (CThostFtdcQryErrOrderField *) 0 ;
  
  arg1 = *(CThostFtdcQryErrOrderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcErrOrderField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_OrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderField_OrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_OrderPriceType_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderPriceTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderPriceType = arg2;
  
}


char _wrap_CThostFtdcErrOrderField_OrderPriceType_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderPriceTypeType) ((arg1)->OrderPriceType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_Direction_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->Direction = arg2;
  
}


char _wrap_CThostFtdcErrOrderField_Direction_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_CombOffsetFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CombOffsetFlag, (const char *)arg2, 5-1);
      arg1->CombOffsetFlag[5-1] = 0;
    } else {
      arg1->CombOffsetFlag[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderField_CombOffsetFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CombOffsetFlag);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_CombHedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CombHedgeFlag, (const char *)arg2, 5-1);
      arg1->CombHedgeFlag[5-1] = 0;
    } else {
      arg1->CombHedgeFlag[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderField_CombHedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CombHedgeFlag);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_LimitPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, double _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LimitPrice = arg2;
  
}


double _wrap_CThostFtdcErrOrderField_LimitPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_VolumeTotalOriginal_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeTotalOriginal = arg2;
  
}


intgo _wrap_CThostFtdcErrOrderField_VolumeTotalOriginal_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotalOriginal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_TimeCondition_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcTimeConditionType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcTimeConditionType)_swig_go_1; 
  
  if (arg1) (arg1)->TimeCondition = arg2;
  
}


char _wrap_CThostFtdcErrOrderField_TimeCondition_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcTimeConditionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcTimeConditionType) ((arg1)->TimeCondition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_GTDDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->GTDDate, (const char *)arg2, 9-1);
      arg1->GTDDate[9-1] = 0;
    } else {
      arg1->GTDDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderField_GTDDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->GTDDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_VolumeCondition_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcVolumeConditionType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeConditionType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeCondition = arg2;
  
}


char _wrap_CThostFtdcErrOrderField_VolumeCondition_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcVolumeConditionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeConditionType) ((arg1)->VolumeCondition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_MinVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->MinVolume = arg2;
  
}


intgo _wrap_CThostFtdcErrOrderField_MinVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->MinVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_ContingentCondition_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcContingentConditionType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcContingentConditionType)_swig_go_1; 
  
  if (arg1) (arg1)->ContingentCondition = arg2;
  
}


char _wrap_CThostFtdcErrOrderField_ContingentCondition_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcContingentConditionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcContingentConditionType) ((arg1)->ContingentCondition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_StopPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, double _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->StopPrice = arg2;
  
}


double _wrap_CThostFtdcErrOrderField_StopPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->StopPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_ForceCloseReason_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcForceCloseReasonType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcForceCloseReasonType)_swig_go_1; 
  
  if (arg1) (arg1)->ForceCloseReason = arg2;
  
}


char _wrap_CThostFtdcErrOrderField_ForceCloseReason_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcForceCloseReasonType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcForceCloseReasonType) ((arg1)->ForceCloseReason);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_IsAutoSuspend_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsAutoSuspend = arg2;
  
}


intgo _wrap_CThostFtdcErrOrderField_IsAutoSuspend_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsAutoSuspend);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcErrOrderField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_UserForceClose_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->UserForceClose = arg2;
  
}


intgo _wrap_CThostFtdcErrOrderField_UserForceClose_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->UserForceClose);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcErrOrderField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_IsSwapOrder_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsSwapOrder = arg2;
  
}


intgo _wrap_CThostFtdcErrOrderField_IsSwapOrder_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsSwapOrder);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcErrOrderField *_wrap_new_CThostFtdcErrOrderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcErrOrderField *result = 0 ;
  CThostFtdcErrOrderField *_swig_go_result;
  
  
  result = (CThostFtdcErrOrderField *)new CThostFtdcErrOrderField();
  *(CThostFtdcErrOrderField **)&_swig_go_result = (CThostFtdcErrOrderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcErrOrderField_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderField *_swig_go_0) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  
  arg1 = *(CThostFtdcErrOrderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcErrorConditionalOrderField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_OrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_OrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_OrderPriceType_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderPriceTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderPriceType = arg2;
  
}


char _wrap_CThostFtdcErrorConditionalOrderField_OrderPriceType_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderPriceTypeType) ((arg1)->OrderPriceType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_Direction_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->Direction = arg2;
  
}


char _wrap_CThostFtdcErrorConditionalOrderField_Direction_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_CombOffsetFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CombOffsetFlag, (const char *)arg2, 5-1);
      arg1->CombOffsetFlag[5-1] = 0;
    } else {
      arg1->CombOffsetFlag[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_CombOffsetFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CombOffsetFlag);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_CombHedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CombHedgeFlag, (const char *)arg2, 5-1);
      arg1->CombHedgeFlag[5-1] = 0;
    } else {
      arg1->CombHedgeFlag[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_CombHedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CombHedgeFlag);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_LimitPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, double _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LimitPrice = arg2;
  
}


double _wrap_CThostFtdcErrorConditionalOrderField_LimitPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_VolumeTotalOriginal_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeTotalOriginal = arg2;
  
}


intgo _wrap_CThostFtdcErrorConditionalOrderField_VolumeTotalOriginal_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotalOriginal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_TimeCondition_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcTimeConditionType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcTimeConditionType)_swig_go_1; 
  
  if (arg1) (arg1)->TimeCondition = arg2;
  
}


char _wrap_CThostFtdcErrorConditionalOrderField_TimeCondition_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcTimeConditionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcTimeConditionType) ((arg1)->TimeCondition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_GTDDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->GTDDate, (const char *)arg2, 9-1);
      arg1->GTDDate[9-1] = 0;
    } else {
      arg1->GTDDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_GTDDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->GTDDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_VolumeCondition_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeConditionType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeConditionType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeCondition = arg2;
  
}


char _wrap_CThostFtdcErrorConditionalOrderField_VolumeCondition_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeConditionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeConditionType) ((arg1)->VolumeCondition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_MinVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->MinVolume = arg2;
  
}


intgo _wrap_CThostFtdcErrorConditionalOrderField_MinVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->MinVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_ContingentCondition_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcContingentConditionType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcContingentConditionType)_swig_go_1; 
  
  if (arg1) (arg1)->ContingentCondition = arg2;
  
}


char _wrap_CThostFtdcErrorConditionalOrderField_ContingentCondition_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcContingentConditionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcContingentConditionType) ((arg1)->ContingentCondition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_StopPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, double _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->StopPrice = arg2;
  
}


double _wrap_CThostFtdcErrorConditionalOrderField_StopPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->StopPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_ForceCloseReason_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcForceCloseReasonType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcForceCloseReasonType)_swig_go_1; 
  
  if (arg1) (arg1)->ForceCloseReason = arg2;
  
}


char _wrap_CThostFtdcErrorConditionalOrderField_ForceCloseReason_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcForceCloseReasonType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcForceCloseReasonType) ((arg1)->ForceCloseReason);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_IsAutoSuspend_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsAutoSuspend = arg2;
  
}


intgo _wrap_CThostFtdcErrorConditionalOrderField_IsAutoSuspend_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsAutoSuspend);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcErrorConditionalOrderField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_OrderLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_OrderLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_ExchangeInstID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_ExchangeInstID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeInstID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcErrorConditionalOrderField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_OrderSubmitStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderSubmitStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
  
}


char _wrap_CThostFtdcErrorConditionalOrderField_OrderSubmitStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_NotifySequence_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->NotifySequence = arg2;
  
}


intgo _wrap_CThostFtdcErrorConditionalOrderField_NotifySequence_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_SettlementID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSettlementIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementID = arg2;
  
}


intgo _wrap_CThostFtdcErrorConditionalOrderField_SettlementID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSettlementIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_OrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_OrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_OrderSource_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderSourceType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderSourceType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderSource = arg2;
  
}


char _wrap_CThostFtdcErrorConditionalOrderField_OrderSource_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderSourceType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderSourceType) ((arg1)->OrderSource);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_OrderStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderStatusType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderStatus = arg2;
  
}


char _wrap_CThostFtdcErrorConditionalOrderField_OrderStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderStatusType) ((arg1)->OrderStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_OrderType_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderTypeType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderType = arg2;
  
}


char _wrap_CThostFtdcErrorConditionalOrderField_OrderType_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderTypeType) ((arg1)->OrderType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_VolumeTraded_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeTraded = arg2;
  
}


intgo _wrap_CThostFtdcErrorConditionalOrderField_VolumeTraded_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTraded);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_VolumeTotal_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeTotal = arg2;
  
}


intgo _wrap_CThostFtdcErrorConditionalOrderField_VolumeTotal_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_InsertDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_InsertDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_InsertTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_InsertTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InsertTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_ActiveTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveTime, (const char *)arg2, 9-1);
      arg1->ActiveTime[9-1] = 0;
    } else {
      arg1->ActiveTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_ActiveTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActiveTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_SuspendTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SuspendTime, (const char *)arg2, 9-1);
      arg1->SuspendTime[9-1] = 0;
    } else {
      arg1->SuspendTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_SuspendTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->SuspendTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_UpdateTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UpdateTime, (const char *)arg2, 9-1);
      arg1->UpdateTime[9-1] = 0;
    } else {
      arg1->UpdateTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_UpdateTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UpdateTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_CancelTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_CancelTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CancelTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_ActiveTraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveTraderID, (const char *)arg2, 21-1);
      arg1->ActiveTraderID[21-1] = 0;
    } else {
      arg1->ActiveTraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_ActiveTraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActiveTraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_ClearingPartID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_ClearingPartID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClearingPartID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_SequenceNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->SequenceNo = arg2;
  
}


intgo _wrap_CThostFtdcErrorConditionalOrderField_SequenceNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcErrorConditionalOrderField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcErrorConditionalOrderField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_UserProductInfo_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_UserProductInfo_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserProductInfo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_StatusMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_StatusMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->StatusMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_UserForceClose_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->UserForceClose = arg2;
  
}


intgo _wrap_CThostFtdcErrorConditionalOrderField_UserForceClose_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->UserForceClose);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_ActiveUserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveUserID, (const char *)arg2, 16-1);
      arg1->ActiveUserID[16-1] = 0;
    } else {
      arg1->ActiveUserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_ActiveUserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActiveUserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_BrokerOrderSeq_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->BrokerOrderSeq = arg2;
  
}


intgo _wrap_CThostFtdcErrorConditionalOrderField_BrokerOrderSeq_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->BrokerOrderSeq);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_RelativeOrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->RelativeOrderSysID, (const char *)arg2, 21-1);
      arg1->RelativeOrderSysID[21-1] = 0;
    } else {
      arg1->RelativeOrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_RelativeOrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->RelativeOrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_ZCETotalTradedVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->ZCETotalTradedVolume = arg2;
  
}


intgo _wrap_CThostFtdcErrorConditionalOrderField_ZCETotalTradedVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->ZCETotalTradedVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcErrorConditionalOrderField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_IsSwapOrder_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->IsSwapOrder = arg2;
  
}


intgo _wrap_CThostFtdcErrorConditionalOrderField_IsSwapOrder_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->IsSwapOrder);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_BranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_BranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrorConditionalOrderField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrorConditionalOrderField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcErrorConditionalOrderField *_wrap_new_CThostFtdcErrorConditionalOrderField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcErrorConditionalOrderField *result = 0 ;
  CThostFtdcErrorConditionalOrderField *_swig_go_result;
  
  
  result = (CThostFtdcErrorConditionalOrderField *)new CThostFtdcErrorConditionalOrderField();
  *(CThostFtdcErrorConditionalOrderField **)&_swig_go_result = (CThostFtdcErrorConditionalOrderField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcErrorConditionalOrderField_goctp_ef6abdc493ff8ae2(CThostFtdcErrorConditionalOrderField *_swig_go_0) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  
  arg1 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryErrOrderActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryErrOrderActionField *arg1 = (CThostFtdcQryErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryErrOrderActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryErrOrderActionField *_swig_go_0) {
  CThostFtdcQryErrOrderActionField *arg1 = (CThostFtdcQryErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryErrOrderActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryErrOrderActionField *arg1 = (CThostFtdcQryErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryErrOrderActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryErrOrderActionField *_swig_go_0) {
  CThostFtdcQryErrOrderActionField *arg1 = (CThostFtdcQryErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryErrOrderActionField *_wrap_new_CThostFtdcQryErrOrderActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryErrOrderActionField *result = 0 ;
  CThostFtdcQryErrOrderActionField *_swig_go_result;
  
  
  result = (CThostFtdcQryErrOrderActionField *)new CThostFtdcQryErrOrderActionField();
  *(CThostFtdcQryErrOrderActionField **)&_swig_go_result = (CThostFtdcQryErrOrderActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryErrOrderActionField_goctp_ef6abdc493ff8ae2(CThostFtdcQryErrOrderActionField *_swig_go_0) {
  CThostFtdcQryErrOrderActionField *arg1 = (CThostFtdcQryErrOrderActionField *) 0 ;
  
  arg1 = *(CThostFtdcQryErrOrderActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcErrOrderActionField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderActionField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderActionField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_OrderActionRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionRefType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderActionRef = arg2;
  
}


intgo _wrap_CThostFtdcErrOrderActionField_OrderActionRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionRefType) ((arg1)->OrderActionRef);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_OrderRef_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderActionField_OrderRef_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderRef);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcErrOrderActionField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_FrontID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcFrontIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FrontID = arg2;
  
}


intgo _wrap_CThostFtdcErrOrderActionField_FrontID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcErrOrderActionField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderActionField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_OrderSysID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderActionField_OrderSysID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderSysID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_ActionFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcActionFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->ActionFlag = arg2;
  
}


char _wrap_CThostFtdcErrOrderActionField_ActionFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_LimitPrice_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, double _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->LimitPrice = arg2;
  
}


double _wrap_CThostFtdcErrOrderActionField_LimitPrice_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_VolumeChange_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->VolumeChange = arg2;
  
}


intgo _wrap_CThostFtdcErrOrderActionField_VolumeChange_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->VolumeChange);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_ActionDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderActionField_ActionDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_ActionTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderActionField_ActionTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_TraderID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderActionField_TraderID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TraderID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcErrOrderActionField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_OrderLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderActionField_OrderLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrderLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_ActionLocalID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderActionField_ActionLocalID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ActionLocalID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderActionField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_ClientID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderActionField_ClientID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ClientID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_BusinessUnit_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderActionField_BusinessUnit_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BusinessUnit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_OrderActionStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, char _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcOrderActionStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->OrderActionStatus = arg2;
  
}


char _wrap_CThostFtdcErrOrderActionField_OrderActionStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderActionField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_StatusMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderActionField_StatusMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->StatusMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderActionField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_BranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderActionField_BranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_InvestUnitID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderActionField_InvestUnitID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestUnitID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderActionField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_MacAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderActionField_MacAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcErrOrderActionField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcErrOrderActionField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcErrOrderActionField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcErrOrderActionField *_wrap_new_CThostFtdcErrOrderActionField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcErrOrderActionField *result = 0 ;
  CThostFtdcErrOrderActionField *_swig_go_result;
  
  
  result = (CThostFtdcErrOrderActionField *)new CThostFtdcErrOrderActionField();
  *(CThostFtdcErrOrderActionField **)&_swig_go_result = (CThostFtdcErrOrderActionField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcErrOrderActionField_goctp_ef6abdc493ff8ae2(CThostFtdcErrOrderActionField *_swig_go_0) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  
  arg1 = *(CThostFtdcErrOrderActionField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryExchangeSequenceField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeSequenceField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryExchangeSequenceField *arg1 = (CThostFtdcQryExchangeSequenceField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryExchangeSequenceField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryExchangeSequenceField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeSequenceField *_swig_go_0) {
  CThostFtdcQryExchangeSequenceField *arg1 = (CThostFtdcQryExchangeSequenceField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryExchangeSequenceField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryExchangeSequenceField *_wrap_new_CThostFtdcQryExchangeSequenceField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryExchangeSequenceField *result = 0 ;
  CThostFtdcQryExchangeSequenceField *_swig_go_result;
  
  
  result = (CThostFtdcQryExchangeSequenceField *)new CThostFtdcQryExchangeSequenceField();
  *(CThostFtdcQryExchangeSequenceField **)&_swig_go_result = (CThostFtdcQryExchangeSequenceField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryExchangeSequenceField_goctp_ef6abdc493ff8ae2(CThostFtdcQryExchangeSequenceField *_swig_go_0) {
  CThostFtdcQryExchangeSequenceField *arg1 = (CThostFtdcQryExchangeSequenceField *) 0 ;
  
  arg1 = *(CThostFtdcQryExchangeSequenceField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcExchangeSequenceField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeSequenceField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcExchangeSequenceField *arg1 = (CThostFtdcExchangeSequenceField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcExchangeSequenceField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcExchangeSequenceField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeSequenceField *_swig_go_0) {
  CThostFtdcExchangeSequenceField *arg1 = (CThostFtdcExchangeSequenceField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeSequenceField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeSequenceField_SequenceNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeSequenceField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcExchangeSequenceField *arg1 = (CThostFtdcExchangeSequenceField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcExchangeSequenceField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->SequenceNo = arg2;
  
}


intgo _wrap_CThostFtdcExchangeSequenceField_SequenceNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeSequenceField *_swig_go_0) {
  CThostFtdcExchangeSequenceField *arg1 = (CThostFtdcExchangeSequenceField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeSequenceField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcExchangeSequenceField_MarketStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeSequenceField *_swig_go_0, char _swig_go_1) {
  CThostFtdcExchangeSequenceField *arg1 = (CThostFtdcExchangeSequenceField *) 0 ;
  TThostFtdcInstrumentStatusType arg2 ;
  
  arg1 = *(CThostFtdcExchangeSequenceField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstrumentStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->MarketStatus = arg2;
  
}


char _wrap_CThostFtdcExchangeSequenceField_MarketStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeSequenceField *_swig_go_0) {
  CThostFtdcExchangeSequenceField *arg1 = (CThostFtdcExchangeSequenceField *) 0 ;
  TThostFtdcInstrumentStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcExchangeSequenceField **)&_swig_go_0; 
  
  result = (TThostFtdcInstrumentStatusType) ((arg1)->MarketStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcExchangeSequenceField *_wrap_new_CThostFtdcExchangeSequenceField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcExchangeSequenceField *result = 0 ;
  CThostFtdcExchangeSequenceField *_swig_go_result;
  
  
  result = (CThostFtdcExchangeSequenceField *)new CThostFtdcExchangeSequenceField();
  *(CThostFtdcExchangeSequenceField **)&_swig_go_result = (CThostFtdcExchangeSequenceField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcExchangeSequenceField_goctp_ef6abdc493ff8ae2(CThostFtdcExchangeSequenceField *_swig_go_0) {
  CThostFtdcExchangeSequenceField *arg1 = (CThostFtdcExchangeSequenceField *) 0 ;
  
  arg1 = *(CThostFtdcExchangeSequenceField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQueryMaxOrderVolumeWithPriceField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeWithPriceField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeWithPriceField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQueryMaxOrderVolumeWithPriceField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeWithPriceField *_swig_go_0) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeWithPriceField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQueryMaxOrderVolumeWithPriceField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeWithPriceField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeWithPriceField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQueryMaxOrderVolumeWithPriceField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeWithPriceField *_swig_go_0) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeWithPriceField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQueryMaxOrderVolumeWithPriceField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeWithPriceField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeWithPriceField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQueryMaxOrderVolumeWithPriceField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeWithPriceField *_swig_go_0) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeWithPriceField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQueryMaxOrderVolumeWithPriceField_Direction_set_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeWithPriceField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeWithPriceField **)&_swig_go_0; 
  arg2 = (TThostFtdcDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->Direction = arg2;
  
}


char _wrap_CThostFtdcQueryMaxOrderVolumeWithPriceField_Direction_get_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeWithPriceField *_swig_go_0) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeWithPriceField **)&_swig_go_0; 
  
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQueryMaxOrderVolumeWithPriceField_OffsetFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeWithPriceField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeWithPriceField **)&_swig_go_0; 
  arg2 = (TThostFtdcOffsetFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->OffsetFlag = arg2;
  
}


char _wrap_CThostFtdcQueryMaxOrderVolumeWithPriceField_OffsetFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeWithPriceField *_swig_go_0) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcOffsetFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeWithPriceField **)&_swig_go_0; 
  
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQueryMaxOrderVolumeWithPriceField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeWithPriceField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeWithPriceField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcQueryMaxOrderVolumeWithPriceField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeWithPriceField *_swig_go_0) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeWithPriceField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQueryMaxOrderVolumeWithPriceField_MaxVolume_set_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeWithPriceField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeWithPriceField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->MaxVolume = arg2;
  
}


intgo _wrap_CThostFtdcQueryMaxOrderVolumeWithPriceField_MaxVolume_get_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeWithPriceField *_swig_go_0) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeWithPriceField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->MaxVolume);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQueryMaxOrderVolumeWithPriceField_Price_set_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeWithPriceField *_swig_go_0, double _swig_go_1) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeWithPriceField **)&_swig_go_0; 
  arg2 = (TThostFtdcPriceType)_swig_go_1; 
  
  if (arg1) (arg1)->Price = arg2;
  
}


double _wrap_CThostFtdcQueryMaxOrderVolumeWithPriceField_Price_get_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeWithPriceField *_swig_go_0) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcPriceType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeWithPriceField **)&_swig_go_0; 
  
  result = (TThostFtdcPriceType) ((arg1)->Price);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcQueryMaxOrderVolumeWithPriceField *_wrap_new_CThostFtdcQueryMaxOrderVolumeWithPriceField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *result = 0 ;
  CThostFtdcQueryMaxOrderVolumeWithPriceField *_swig_go_result;
  
  
  result = (CThostFtdcQueryMaxOrderVolumeWithPriceField *)new CThostFtdcQueryMaxOrderVolumeWithPriceField();
  *(CThostFtdcQueryMaxOrderVolumeWithPriceField **)&_swig_go_result = (CThostFtdcQueryMaxOrderVolumeWithPriceField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQueryMaxOrderVolumeWithPriceField_goctp_ef6abdc493ff8ae2(CThostFtdcQueryMaxOrderVolumeWithPriceField *_swig_go_0) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  
  arg1 = *(CThostFtdcQueryMaxOrderVolumeWithPriceField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryBrokerTradingParamsField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerTradingParamsField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryBrokerTradingParamsField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryBrokerTradingParamsField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerTradingParamsField *_swig_go_0) {
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryBrokerTradingParamsField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryBrokerTradingParamsField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerTradingParamsField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryBrokerTradingParamsField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryBrokerTradingParamsField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerTradingParamsField *_swig_go_0) {
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryBrokerTradingParamsField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryBrokerTradingParamsField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerTradingParamsField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryBrokerTradingParamsField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryBrokerTradingParamsField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerTradingParamsField *_swig_go_0) {
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryBrokerTradingParamsField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryBrokerTradingParamsField *_wrap_new_CThostFtdcQryBrokerTradingParamsField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryBrokerTradingParamsField *result = 0 ;
  CThostFtdcQryBrokerTradingParamsField *_swig_go_result;
  
  
  result = (CThostFtdcQryBrokerTradingParamsField *)new CThostFtdcQryBrokerTradingParamsField();
  *(CThostFtdcQryBrokerTradingParamsField **)&_swig_go_result = (CThostFtdcQryBrokerTradingParamsField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryBrokerTradingParamsField_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerTradingParamsField *_swig_go_0) {
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  
  arg1 = *(CThostFtdcQryBrokerTradingParamsField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcBrokerTradingParamsField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingParamsField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerTradingParamsField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerTradingParamsField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingParamsField *_swig_go_0) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerTradingParamsField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerTradingParamsField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingParamsField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerTradingParamsField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerTradingParamsField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingParamsField *_swig_go_0) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerTradingParamsField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerTradingParamsField_MarginPriceType_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingParamsField *_swig_go_0, char _swig_go_1) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcMarginPriceTypeType arg2 ;
  
  arg1 = *(CThostFtdcBrokerTradingParamsField **)&_swig_go_0; 
  arg2 = (TThostFtdcMarginPriceTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->MarginPriceType = arg2;
  
}


char _wrap_CThostFtdcBrokerTradingParamsField_MarginPriceType_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingParamsField *_swig_go_0) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcMarginPriceTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerTradingParamsField **)&_swig_go_0; 
  
  result = (TThostFtdcMarginPriceTypeType) ((arg1)->MarginPriceType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerTradingParamsField_Algorithm_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingParamsField *_swig_go_0, char _swig_go_1) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcAlgorithmType arg2 ;
  
  arg1 = *(CThostFtdcBrokerTradingParamsField **)&_swig_go_0; 
  arg2 = (TThostFtdcAlgorithmType)_swig_go_1; 
  
  if (arg1) (arg1)->Algorithm = arg2;
  
}


char _wrap_CThostFtdcBrokerTradingParamsField_Algorithm_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingParamsField *_swig_go_0) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcAlgorithmType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerTradingParamsField **)&_swig_go_0; 
  
  result = (TThostFtdcAlgorithmType) ((arg1)->Algorithm);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerTradingParamsField_AvailIncludeCloseProfit_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingParamsField *_swig_go_0, char _swig_go_1) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcIncludeCloseProfitType arg2 ;
  
  arg1 = *(CThostFtdcBrokerTradingParamsField **)&_swig_go_0; 
  arg2 = (TThostFtdcIncludeCloseProfitType)_swig_go_1; 
  
  if (arg1) (arg1)->AvailIncludeCloseProfit = arg2;
  
}


char _wrap_CThostFtdcBrokerTradingParamsField_AvailIncludeCloseProfit_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingParamsField *_swig_go_0) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcIncludeCloseProfitType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerTradingParamsField **)&_swig_go_0; 
  
  result = (TThostFtdcIncludeCloseProfitType) ((arg1)->AvailIncludeCloseProfit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerTradingParamsField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingParamsField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerTradingParamsField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerTradingParamsField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingParamsField *_swig_go_0) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerTradingParamsField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerTradingParamsField_OptionRoyaltyPriceType_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingParamsField *_swig_go_0, char _swig_go_1) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcOptionRoyaltyPriceTypeType arg2 ;
  
  arg1 = *(CThostFtdcBrokerTradingParamsField **)&_swig_go_0; 
  arg2 = (TThostFtdcOptionRoyaltyPriceTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->OptionRoyaltyPriceType = arg2;
  
}


char _wrap_CThostFtdcBrokerTradingParamsField_OptionRoyaltyPriceType_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingParamsField *_swig_go_0) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcOptionRoyaltyPriceTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerTradingParamsField **)&_swig_go_0; 
  
  result = (TThostFtdcOptionRoyaltyPriceTypeType) ((arg1)->OptionRoyaltyPriceType);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcBrokerTradingParamsField *_wrap_new_CThostFtdcBrokerTradingParamsField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcBrokerTradingParamsField *result = 0 ;
  CThostFtdcBrokerTradingParamsField *_swig_go_result;
  
  
  result = (CThostFtdcBrokerTradingParamsField *)new CThostFtdcBrokerTradingParamsField();
  *(CThostFtdcBrokerTradingParamsField **)&_swig_go_result = (CThostFtdcBrokerTradingParamsField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcBrokerTradingParamsField_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingParamsField *_swig_go_0) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  
  arg1 = *(CThostFtdcBrokerTradingParamsField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryBrokerTradingAlgosField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerTradingAlgosField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryBrokerTradingAlgosField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryBrokerTradingAlgosField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerTradingAlgosField *_swig_go_0) {
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryBrokerTradingAlgosField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryBrokerTradingAlgosField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerTradingAlgosField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryBrokerTradingAlgosField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryBrokerTradingAlgosField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerTradingAlgosField *_swig_go_0) {
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryBrokerTradingAlgosField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryBrokerTradingAlgosField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerTradingAlgosField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryBrokerTradingAlgosField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryBrokerTradingAlgosField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerTradingAlgosField *_swig_go_0) {
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryBrokerTradingAlgosField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryBrokerTradingAlgosField *_wrap_new_CThostFtdcQryBrokerTradingAlgosField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryBrokerTradingAlgosField *result = 0 ;
  CThostFtdcQryBrokerTradingAlgosField *_swig_go_result;
  
  
  result = (CThostFtdcQryBrokerTradingAlgosField *)new CThostFtdcQryBrokerTradingAlgosField();
  *(CThostFtdcQryBrokerTradingAlgosField **)&_swig_go_result = (CThostFtdcQryBrokerTradingAlgosField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryBrokerTradingAlgosField_goctp_ef6abdc493ff8ae2(CThostFtdcQryBrokerTradingAlgosField *_swig_go_0) {
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  
  arg1 = *(CThostFtdcQryBrokerTradingAlgosField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcBrokerTradingAlgosField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingAlgosField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerTradingAlgosField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerTradingAlgosField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingAlgosField *_swig_go_0) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerTradingAlgosField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerTradingAlgosField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingAlgosField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerTradingAlgosField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerTradingAlgosField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingAlgosField *_swig_go_0) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerTradingAlgosField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerTradingAlgosField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingAlgosField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerTradingAlgosField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerTradingAlgosField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingAlgosField *_swig_go_0) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerTradingAlgosField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerTradingAlgosField_HandlePositionAlgoID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingAlgosField *_swig_go_0, char _swig_go_1) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  TThostFtdcHandlePositionAlgoIDType arg2 ;
  
  arg1 = *(CThostFtdcBrokerTradingAlgosField **)&_swig_go_0; 
  arg2 = (TThostFtdcHandlePositionAlgoIDType)_swig_go_1; 
  
  if (arg1) (arg1)->HandlePositionAlgoID = arg2;
  
}


char _wrap_CThostFtdcBrokerTradingAlgosField_HandlePositionAlgoID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingAlgosField *_swig_go_0) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  TThostFtdcHandlePositionAlgoIDType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerTradingAlgosField **)&_swig_go_0; 
  
  result = (TThostFtdcHandlePositionAlgoIDType) ((arg1)->HandlePositionAlgoID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerTradingAlgosField_FindMarginRateAlgoID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingAlgosField *_swig_go_0, char _swig_go_1) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  TThostFtdcFindMarginRateAlgoIDType arg2 ;
  
  arg1 = *(CThostFtdcBrokerTradingAlgosField **)&_swig_go_0; 
  arg2 = (TThostFtdcFindMarginRateAlgoIDType)_swig_go_1; 
  
  if (arg1) (arg1)->FindMarginRateAlgoID = arg2;
  
}


char _wrap_CThostFtdcBrokerTradingAlgosField_FindMarginRateAlgoID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingAlgosField *_swig_go_0) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  TThostFtdcFindMarginRateAlgoIDType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerTradingAlgosField **)&_swig_go_0; 
  
  result = (TThostFtdcFindMarginRateAlgoIDType) ((arg1)->FindMarginRateAlgoID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerTradingAlgosField_HandleTradingAccountAlgoID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingAlgosField *_swig_go_0, char _swig_go_1) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  TThostFtdcHandleTradingAccountAlgoIDType arg2 ;
  
  arg1 = *(CThostFtdcBrokerTradingAlgosField **)&_swig_go_0; 
  arg2 = (TThostFtdcHandleTradingAccountAlgoIDType)_swig_go_1; 
  
  if (arg1) (arg1)->HandleTradingAccountAlgoID = arg2;
  
}


char _wrap_CThostFtdcBrokerTradingAlgosField_HandleTradingAccountAlgoID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingAlgosField *_swig_go_0) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  TThostFtdcHandleTradingAccountAlgoIDType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerTradingAlgosField **)&_swig_go_0; 
  
  result = (TThostFtdcHandleTradingAccountAlgoIDType) ((arg1)->HandleTradingAccountAlgoID);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcBrokerTradingAlgosField *_wrap_new_CThostFtdcBrokerTradingAlgosField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcBrokerTradingAlgosField *result = 0 ;
  CThostFtdcBrokerTradingAlgosField *_swig_go_result;
  
  
  result = (CThostFtdcBrokerTradingAlgosField *)new CThostFtdcBrokerTradingAlgosField();
  *(CThostFtdcBrokerTradingAlgosField **)&_swig_go_result = (CThostFtdcBrokerTradingAlgosField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcBrokerTradingAlgosField_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerTradingAlgosField *_swig_go_0) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  
  arg1 = *(CThostFtdcBrokerTradingAlgosField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQueryBrokerDepositField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQueryBrokerDepositField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQueryBrokerDepositField *arg1 = (CThostFtdcQueryBrokerDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQueryBrokerDepositField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQueryBrokerDepositField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQueryBrokerDepositField *_swig_go_0) {
  CThostFtdcQueryBrokerDepositField *arg1 = (CThostFtdcQueryBrokerDepositField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQueryBrokerDepositField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQueryBrokerDepositField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQueryBrokerDepositField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQueryBrokerDepositField *arg1 = (CThostFtdcQueryBrokerDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQueryBrokerDepositField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQueryBrokerDepositField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQueryBrokerDepositField *_swig_go_0) {
  CThostFtdcQueryBrokerDepositField *arg1 = (CThostFtdcQueryBrokerDepositField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQueryBrokerDepositField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQueryBrokerDepositField *_wrap_new_CThostFtdcQueryBrokerDepositField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQueryBrokerDepositField *result = 0 ;
  CThostFtdcQueryBrokerDepositField *_swig_go_result;
  
  
  result = (CThostFtdcQueryBrokerDepositField *)new CThostFtdcQueryBrokerDepositField();
  *(CThostFtdcQueryBrokerDepositField **)&_swig_go_result = (CThostFtdcQueryBrokerDepositField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQueryBrokerDepositField_goctp_ef6abdc493ff8ae2(CThostFtdcQueryBrokerDepositField *_swig_go_0) {
  CThostFtdcQueryBrokerDepositField *arg1 = (CThostFtdcQueryBrokerDepositField *) 0 ;
  
  arg1 = *(CThostFtdcQueryBrokerDepositField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcBrokerDepositField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerDepositField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerDepositField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerDepositField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerDepositField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerDepositField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerDepositField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerDepositField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerDepositField_PreBalance_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0, double _swig_go_1) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PreBalance = arg2;
  
}


double _wrap_CThostFtdcBrokerDepositField_PreBalance_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PreBalance);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerDepositField_CurrMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0, double _swig_go_1) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CurrMargin = arg2;
  
}


double _wrap_CThostFtdcBrokerDepositField_CurrMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CurrMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerDepositField_CloseProfit_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0, double _swig_go_1) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseProfit = arg2;
  
}


double _wrap_CThostFtdcBrokerDepositField_CloseProfit_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerDepositField_Balance_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0, double _swig_go_1) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Balance = arg2;
  
}


double _wrap_CThostFtdcBrokerDepositField_Balance_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Balance);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerDepositField_Deposit_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0, double _swig_go_1) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Deposit = arg2;
  
}


double _wrap_CThostFtdcBrokerDepositField_Deposit_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Deposit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerDepositField_Withdraw_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0, double _swig_go_1) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Withdraw = arg2;
  
}


double _wrap_CThostFtdcBrokerDepositField_Withdraw_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Withdraw);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerDepositField_Available_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0, double _swig_go_1) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Available = arg2;
  
}


double _wrap_CThostFtdcBrokerDepositField_Available_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Available);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerDepositField_Reserve_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0, double _swig_go_1) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Reserve = arg2;
  
}


double _wrap_CThostFtdcBrokerDepositField_Reserve_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Reserve);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerDepositField_FrozenMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0, double _swig_go_1) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FrozenMargin = arg2;
  
}


double _wrap_CThostFtdcBrokerDepositField_FrozenMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FrozenMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcBrokerDepositField *_wrap_new_CThostFtdcBrokerDepositField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcBrokerDepositField *result = 0 ;
  CThostFtdcBrokerDepositField *_swig_go_result;
  
  
  result = (CThostFtdcBrokerDepositField *)new CThostFtdcBrokerDepositField();
  *(CThostFtdcBrokerDepositField **)&_swig_go_result = (CThostFtdcBrokerDepositField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcBrokerDepositField_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerDepositField *_swig_go_0) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  
  arg1 = *(CThostFtdcBrokerDepositField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryCFMMCBrokerKeyField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryCFMMCBrokerKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryCFMMCBrokerKeyField *arg1 = (CThostFtdcQryCFMMCBrokerKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryCFMMCBrokerKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryCFMMCBrokerKeyField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryCFMMCBrokerKeyField *_swig_go_0) {
  CThostFtdcQryCFMMCBrokerKeyField *arg1 = (CThostFtdcQryCFMMCBrokerKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryCFMMCBrokerKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryCFMMCBrokerKeyField *_wrap_new_CThostFtdcQryCFMMCBrokerKeyField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryCFMMCBrokerKeyField *result = 0 ;
  CThostFtdcQryCFMMCBrokerKeyField *_swig_go_result;
  
  
  result = (CThostFtdcQryCFMMCBrokerKeyField *)new CThostFtdcQryCFMMCBrokerKeyField();
  *(CThostFtdcQryCFMMCBrokerKeyField **)&_swig_go_result = (CThostFtdcQryCFMMCBrokerKeyField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryCFMMCBrokerKeyField_goctp_ef6abdc493ff8ae2(CThostFtdcQryCFMMCBrokerKeyField *_swig_go_0) {
  CThostFtdcQryCFMMCBrokerKeyField *arg1 = (CThostFtdcQryCFMMCBrokerKeyField *) 0 ;
  
  arg1 = *(CThostFtdcQryCFMMCBrokerKeyField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcCFMMCBrokerKeyField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCBrokerKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCFMMCBrokerKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCFMMCBrokerKeyField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCBrokerKeyField *_swig_go_0) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCFMMCBrokerKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCFMMCBrokerKeyField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCBrokerKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCFMMCBrokerKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCFMMCBrokerKeyField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCBrokerKeyField *_swig_go_0) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCFMMCBrokerKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCFMMCBrokerKeyField_CreateDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCBrokerKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCFMMCBrokerKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CreateDate, (const char *)arg2, 9-1);
      arg1->CreateDate[9-1] = 0;
    } else {
      arg1->CreateDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCFMMCBrokerKeyField_CreateDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCBrokerKeyField *_swig_go_0) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCFMMCBrokerKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CreateDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCFMMCBrokerKeyField_CreateTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCBrokerKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCFMMCBrokerKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CreateTime, (const char *)arg2, 9-1);
      arg1->CreateTime[9-1] = 0;
    } else {
      arg1->CreateTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCFMMCBrokerKeyField_CreateTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCBrokerKeyField *_swig_go_0) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCFMMCBrokerKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CreateTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCFMMCBrokerKeyField_KeyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCBrokerKeyField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcCFMMCBrokerKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->KeyID = arg2;
  
}


intgo _wrap_CThostFtdcCFMMCBrokerKeyField_KeyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCBrokerKeyField *_swig_go_0) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcCFMMCBrokerKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->KeyID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCFMMCBrokerKeyField_CurrentKey_set_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCBrokerKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCFMMCBrokerKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrentKey, (const char *)arg2, 21-1);
      arg1->CurrentKey[21-1] = 0;
    } else {
      arg1->CurrentKey[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCFMMCBrokerKeyField_CurrentKey_get_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCBrokerKeyField *_swig_go_0) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCFMMCBrokerKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrentKey);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCFMMCBrokerKeyField_KeyKind_set_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCBrokerKeyField *_swig_go_0, char _swig_go_1) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  TThostFtdcCFMMCKeyKindType arg2 ;
  
  arg1 = *(CThostFtdcCFMMCBrokerKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcCFMMCKeyKindType)_swig_go_1; 
  
  if (arg1) (arg1)->KeyKind = arg2;
  
}


char _wrap_CThostFtdcCFMMCBrokerKeyField_KeyKind_get_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCBrokerKeyField *_swig_go_0) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  TThostFtdcCFMMCKeyKindType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcCFMMCBrokerKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcCFMMCKeyKindType) ((arg1)->KeyKind);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcCFMMCBrokerKeyField *_wrap_new_CThostFtdcCFMMCBrokerKeyField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcCFMMCBrokerKeyField *result = 0 ;
  CThostFtdcCFMMCBrokerKeyField *_swig_go_result;
  
  
  result = (CThostFtdcCFMMCBrokerKeyField *)new CThostFtdcCFMMCBrokerKeyField();
  *(CThostFtdcCFMMCBrokerKeyField **)&_swig_go_result = (CThostFtdcCFMMCBrokerKeyField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcCFMMCBrokerKeyField_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCBrokerKeyField *_swig_go_0) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  
  arg1 = *(CThostFtdcCFMMCBrokerKeyField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcCFMMCTradingAccountKeyField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCFMMCTradingAccountKeyField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountKeyField *_swig_go_0) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCFMMCTradingAccountKeyField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCFMMCTradingAccountKeyField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountKeyField *_swig_go_0) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCFMMCTradingAccountKeyField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCFMMCTradingAccountKeyField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountKeyField *_swig_go_0) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCFMMCTradingAccountKeyField_KeyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountKeyField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->KeyID = arg2;
  
}


intgo _wrap_CThostFtdcCFMMCTradingAccountKeyField_KeyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountKeyField *_swig_go_0) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->KeyID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCFMMCTradingAccountKeyField_CurrentKey_set_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrentKey, (const char *)arg2, 21-1);
      arg1->CurrentKey[21-1] = 0;
    } else {
      arg1->CurrentKey[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCFMMCTradingAccountKeyField_CurrentKey_get_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountKeyField *_swig_go_0) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrentKey);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcCFMMCTradingAccountKeyField *_wrap_new_CThostFtdcCFMMCTradingAccountKeyField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcCFMMCTradingAccountKeyField *result = 0 ;
  CThostFtdcCFMMCTradingAccountKeyField *_swig_go_result;
  
  
  result = (CThostFtdcCFMMCTradingAccountKeyField *)new CThostFtdcCFMMCTradingAccountKeyField();
  *(CThostFtdcCFMMCTradingAccountKeyField **)&_swig_go_result = (CThostFtdcCFMMCTradingAccountKeyField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcCFMMCTradingAccountKeyField_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountKeyField *_swig_go_0) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountKeyField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryCFMMCTradingAccountKeyField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryCFMMCTradingAccountKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryCFMMCTradingAccountKeyField *arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryCFMMCTradingAccountKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryCFMMCTradingAccountKeyField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryCFMMCTradingAccountKeyField *_swig_go_0) {
  CThostFtdcQryCFMMCTradingAccountKeyField *arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryCFMMCTradingAccountKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryCFMMCTradingAccountKeyField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryCFMMCTradingAccountKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryCFMMCTradingAccountKeyField *arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryCFMMCTradingAccountKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryCFMMCTradingAccountKeyField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryCFMMCTradingAccountKeyField *_swig_go_0) {
  CThostFtdcQryCFMMCTradingAccountKeyField *arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryCFMMCTradingAccountKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryCFMMCTradingAccountKeyField *_wrap_new_CThostFtdcQryCFMMCTradingAccountKeyField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryCFMMCTradingAccountKeyField *result = 0 ;
  CThostFtdcQryCFMMCTradingAccountKeyField *_swig_go_result;
  
  
  result = (CThostFtdcQryCFMMCTradingAccountKeyField *)new CThostFtdcQryCFMMCTradingAccountKeyField();
  *(CThostFtdcQryCFMMCTradingAccountKeyField **)&_swig_go_result = (CThostFtdcQryCFMMCTradingAccountKeyField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryCFMMCTradingAccountKeyField_goctp_ef6abdc493ff8ae2(CThostFtdcQryCFMMCTradingAccountKeyField *_swig_go_0) {
  CThostFtdcQryCFMMCTradingAccountKeyField *arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *) 0 ;
  
  arg1 = *(CThostFtdcQryCFMMCTradingAccountKeyField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcBrokerUserOTPParamField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserOTPParamField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserOTPParamField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerUserOTPParamField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserOTPParamField *_swig_go_0) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserOTPParamField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserOTPParamField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserOTPParamField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserOTPParamField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerUserOTPParamField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserOTPParamField *_swig_go_0) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserOTPParamField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserOTPParamField_OTPVendorsID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserOTPParamField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserOTPParamField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OTPVendorsID, (const char *)arg2, 2-1);
      arg1->OTPVendorsID[2-1] = 0;
    } else {
      arg1->OTPVendorsID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerUserOTPParamField_OTPVendorsID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserOTPParamField *_swig_go_0) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserOTPParamField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OTPVendorsID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserOTPParamField_SerialNumber_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserOTPParamField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserOTPParamField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SerialNumber, (const char *)arg2, 17-1);
      arg1->SerialNumber[17-1] = 0;
    } else {
      arg1->SerialNumber[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerUserOTPParamField_SerialNumber_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserOTPParamField *_swig_go_0) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserOTPParamField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->SerialNumber);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserOTPParamField_AuthKey_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserOTPParamField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserOTPParamField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AuthKey, (const char *)arg2, 41-1);
      arg1->AuthKey[41-1] = 0;
    } else {
      arg1->AuthKey[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerUserOTPParamField_AuthKey_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserOTPParamField *_swig_go_0) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserOTPParamField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AuthKey);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserOTPParamField_LastDrift_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserOTPParamField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  TThostFtdcLastDriftType arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserOTPParamField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastDriftType)_swig_go_1; 
  
  if (arg1) (arg1)->LastDrift = arg2;
  
}


intgo _wrap_CThostFtdcBrokerUserOTPParamField_LastDrift_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserOTPParamField *_swig_go_0) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  TThostFtdcLastDriftType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserOTPParamField **)&_swig_go_0; 
  
  result = (TThostFtdcLastDriftType) ((arg1)->LastDrift);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserOTPParamField_LastSuccess_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserOTPParamField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  TThostFtdcLastSuccessType arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserOTPParamField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastSuccessType)_swig_go_1; 
  
  if (arg1) (arg1)->LastSuccess = arg2;
  
}


intgo _wrap_CThostFtdcBrokerUserOTPParamField_LastSuccess_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserOTPParamField *_swig_go_0) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  TThostFtdcLastSuccessType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserOTPParamField **)&_swig_go_0; 
  
  result = (TThostFtdcLastSuccessType) ((arg1)->LastSuccess);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserOTPParamField_OTPType_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserOTPParamField *_swig_go_0, char _swig_go_1) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  TThostFtdcOTPTypeType arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserOTPParamField **)&_swig_go_0; 
  arg2 = (TThostFtdcOTPTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->OTPType = arg2;
  
}


char _wrap_CThostFtdcBrokerUserOTPParamField_OTPType_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserOTPParamField *_swig_go_0) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  TThostFtdcOTPTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserOTPParamField **)&_swig_go_0; 
  
  result = (TThostFtdcOTPTypeType) ((arg1)->OTPType);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcBrokerUserOTPParamField *_wrap_new_CThostFtdcBrokerUserOTPParamField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcBrokerUserOTPParamField *result = 0 ;
  CThostFtdcBrokerUserOTPParamField *_swig_go_result;
  
  
  result = (CThostFtdcBrokerUserOTPParamField *)new CThostFtdcBrokerUserOTPParamField();
  *(CThostFtdcBrokerUserOTPParamField **)&_swig_go_result = (CThostFtdcBrokerUserOTPParamField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcBrokerUserOTPParamField_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserOTPParamField *_swig_go_0) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  
  arg1 = *(CThostFtdcBrokerUserOTPParamField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcManualSyncBrokerUserOTPField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcManualSyncBrokerUserOTPField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcManualSyncBrokerUserOTPField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcManualSyncBrokerUserOTPField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcManualSyncBrokerUserOTPField *_swig_go_0) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcManualSyncBrokerUserOTPField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcManualSyncBrokerUserOTPField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcManualSyncBrokerUserOTPField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcManualSyncBrokerUserOTPField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcManualSyncBrokerUserOTPField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcManualSyncBrokerUserOTPField *_swig_go_0) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcManualSyncBrokerUserOTPField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcManualSyncBrokerUserOTPField_OTPType_set_goctp_ef6abdc493ff8ae2(CThostFtdcManualSyncBrokerUserOTPField *_swig_go_0, char _swig_go_1) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  TThostFtdcOTPTypeType arg2 ;
  
  arg1 = *(CThostFtdcManualSyncBrokerUserOTPField **)&_swig_go_0; 
  arg2 = (TThostFtdcOTPTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->OTPType = arg2;
  
}


char _wrap_CThostFtdcManualSyncBrokerUserOTPField_OTPType_get_goctp_ef6abdc493ff8ae2(CThostFtdcManualSyncBrokerUserOTPField *_swig_go_0) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  TThostFtdcOTPTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcManualSyncBrokerUserOTPField **)&_swig_go_0; 
  
  result = (TThostFtdcOTPTypeType) ((arg1)->OTPType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcManualSyncBrokerUserOTPField_FirstOTP_set_goctp_ef6abdc493ff8ae2(CThostFtdcManualSyncBrokerUserOTPField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcManualSyncBrokerUserOTPField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->FirstOTP, (const char *)arg2, 41-1);
      arg1->FirstOTP[41-1] = 0;
    } else {
      arg1->FirstOTP[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcManualSyncBrokerUserOTPField_FirstOTP_get_goctp_ef6abdc493ff8ae2(CThostFtdcManualSyncBrokerUserOTPField *_swig_go_0) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcManualSyncBrokerUserOTPField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->FirstOTP);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcManualSyncBrokerUserOTPField_SecondOTP_set_goctp_ef6abdc493ff8ae2(CThostFtdcManualSyncBrokerUserOTPField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcManualSyncBrokerUserOTPField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SecondOTP, (const char *)arg2, 41-1);
      arg1->SecondOTP[41-1] = 0;
    } else {
      arg1->SecondOTP[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcManualSyncBrokerUserOTPField_SecondOTP_get_goctp_ef6abdc493ff8ae2(CThostFtdcManualSyncBrokerUserOTPField *_swig_go_0) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcManualSyncBrokerUserOTPField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->SecondOTP);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcManualSyncBrokerUserOTPField *_wrap_new_CThostFtdcManualSyncBrokerUserOTPField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcManualSyncBrokerUserOTPField *result = 0 ;
  CThostFtdcManualSyncBrokerUserOTPField *_swig_go_result;
  
  
  result = (CThostFtdcManualSyncBrokerUserOTPField *)new CThostFtdcManualSyncBrokerUserOTPField();
  *(CThostFtdcManualSyncBrokerUserOTPField **)&_swig_go_result = (CThostFtdcManualSyncBrokerUserOTPField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcManualSyncBrokerUserOTPField_goctp_ef6abdc493ff8ae2(CThostFtdcManualSyncBrokerUserOTPField *_swig_go_0) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  
  arg1 = *(CThostFtdcManualSyncBrokerUserOTPField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcCommRateModelField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCommRateModelField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCommRateModelField *arg1 = (CThostFtdcCommRateModelField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCommRateModelField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCommRateModelField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCommRateModelField *_swig_go_0) {
  CThostFtdcCommRateModelField *arg1 = (CThostFtdcCommRateModelField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCommRateModelField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCommRateModelField_CommModelID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCommRateModelField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCommRateModelField *arg1 = (CThostFtdcCommRateModelField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCommRateModelField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CommModelID, (const char *)arg2, 13-1);
      arg1->CommModelID[13-1] = 0;
    } else {
      arg1->CommModelID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCommRateModelField_CommModelID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCommRateModelField *_swig_go_0) {
  CThostFtdcCommRateModelField *arg1 = (CThostFtdcCommRateModelField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCommRateModelField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CommModelID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCommRateModelField_CommModelName_set_goctp_ef6abdc493ff8ae2(CThostFtdcCommRateModelField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCommRateModelField *arg1 = (CThostFtdcCommRateModelField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCommRateModelField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CommModelName, (const char *)arg2, 161-1);
      arg1->CommModelName[161-1] = 0;
    } else {
      arg1->CommModelName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCommRateModelField_CommModelName_get_goctp_ef6abdc493ff8ae2(CThostFtdcCommRateModelField *_swig_go_0) {
  CThostFtdcCommRateModelField *arg1 = (CThostFtdcCommRateModelField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCommRateModelField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CommModelName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcCommRateModelField *_wrap_new_CThostFtdcCommRateModelField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcCommRateModelField *result = 0 ;
  CThostFtdcCommRateModelField *_swig_go_result;
  
  
  result = (CThostFtdcCommRateModelField *)new CThostFtdcCommRateModelField();
  *(CThostFtdcCommRateModelField **)&_swig_go_result = (CThostFtdcCommRateModelField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcCommRateModelField_goctp_ef6abdc493ff8ae2(CThostFtdcCommRateModelField *_swig_go_0) {
  CThostFtdcCommRateModelField *arg1 = (CThostFtdcCommRateModelField *) 0 ;
  
  arg1 = *(CThostFtdcCommRateModelField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryCommRateModelField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryCommRateModelField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryCommRateModelField *arg1 = (CThostFtdcQryCommRateModelField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryCommRateModelField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryCommRateModelField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryCommRateModelField *_swig_go_0) {
  CThostFtdcQryCommRateModelField *arg1 = (CThostFtdcQryCommRateModelField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryCommRateModelField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryCommRateModelField_CommModelID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryCommRateModelField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryCommRateModelField *arg1 = (CThostFtdcQryCommRateModelField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryCommRateModelField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CommModelID, (const char *)arg2, 13-1);
      arg1->CommModelID[13-1] = 0;
    } else {
      arg1->CommModelID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryCommRateModelField_CommModelID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryCommRateModelField *_swig_go_0) {
  CThostFtdcQryCommRateModelField *arg1 = (CThostFtdcQryCommRateModelField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryCommRateModelField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CommModelID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryCommRateModelField *_wrap_new_CThostFtdcQryCommRateModelField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryCommRateModelField *result = 0 ;
  CThostFtdcQryCommRateModelField *_swig_go_result;
  
  
  result = (CThostFtdcQryCommRateModelField *)new CThostFtdcQryCommRateModelField();
  *(CThostFtdcQryCommRateModelField **)&_swig_go_result = (CThostFtdcQryCommRateModelField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryCommRateModelField_goctp_ef6abdc493ff8ae2(CThostFtdcQryCommRateModelField *_swig_go_0) {
  CThostFtdcQryCommRateModelField *arg1 = (CThostFtdcQryCommRateModelField *) 0 ;
  
  arg1 = *(CThostFtdcQryCommRateModelField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcMarginModelField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarginModelField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMarginModelField *arg1 = (CThostFtdcMarginModelField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMarginModelField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMarginModelField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarginModelField *_swig_go_0) {
  CThostFtdcMarginModelField *arg1 = (CThostFtdcMarginModelField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMarginModelField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarginModelField_MarginModelID_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarginModelField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMarginModelField *arg1 = (CThostFtdcMarginModelField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMarginModelField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MarginModelID, (const char *)arg2, 13-1);
      arg1->MarginModelID[13-1] = 0;
    } else {
      arg1->MarginModelID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMarginModelField_MarginModelID_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarginModelField *_swig_go_0) {
  CThostFtdcMarginModelField *arg1 = (CThostFtdcMarginModelField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMarginModelField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MarginModelID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMarginModelField_MarginModelName_set_goctp_ef6abdc493ff8ae2(CThostFtdcMarginModelField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMarginModelField *arg1 = (CThostFtdcMarginModelField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMarginModelField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MarginModelName, (const char *)arg2, 161-1);
      arg1->MarginModelName[161-1] = 0;
    } else {
      arg1->MarginModelName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMarginModelField_MarginModelName_get_goctp_ef6abdc493ff8ae2(CThostFtdcMarginModelField *_swig_go_0) {
  CThostFtdcMarginModelField *arg1 = (CThostFtdcMarginModelField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMarginModelField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MarginModelName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcMarginModelField *_wrap_new_CThostFtdcMarginModelField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcMarginModelField *result = 0 ;
  CThostFtdcMarginModelField *_swig_go_result;
  
  
  result = (CThostFtdcMarginModelField *)new CThostFtdcMarginModelField();
  *(CThostFtdcMarginModelField **)&_swig_go_result = (CThostFtdcMarginModelField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcMarginModelField_goctp_ef6abdc493ff8ae2(CThostFtdcMarginModelField *_swig_go_0) {
  CThostFtdcMarginModelField *arg1 = (CThostFtdcMarginModelField *) 0 ;
  
  arg1 = *(CThostFtdcMarginModelField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryMarginModelField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryMarginModelField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryMarginModelField *arg1 = (CThostFtdcQryMarginModelField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryMarginModelField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryMarginModelField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryMarginModelField *_swig_go_0) {
  CThostFtdcQryMarginModelField *arg1 = (CThostFtdcQryMarginModelField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryMarginModelField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryMarginModelField_MarginModelID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryMarginModelField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryMarginModelField *arg1 = (CThostFtdcQryMarginModelField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryMarginModelField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MarginModelID, (const char *)arg2, 13-1);
      arg1->MarginModelID[13-1] = 0;
    } else {
      arg1->MarginModelID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryMarginModelField_MarginModelID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryMarginModelField *_swig_go_0) {
  CThostFtdcQryMarginModelField *arg1 = (CThostFtdcQryMarginModelField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryMarginModelField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MarginModelID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryMarginModelField *_wrap_new_CThostFtdcQryMarginModelField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryMarginModelField *result = 0 ;
  CThostFtdcQryMarginModelField *_swig_go_result;
  
  
  result = (CThostFtdcQryMarginModelField *)new CThostFtdcQryMarginModelField();
  *(CThostFtdcQryMarginModelField **)&_swig_go_result = (CThostFtdcQryMarginModelField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryMarginModelField_goctp_ef6abdc493ff8ae2(CThostFtdcQryMarginModelField *_swig_go_0) {
  CThostFtdcQryMarginModelField *arg1 = (CThostFtdcQryMarginModelField *) 0 ;
  
  arg1 = *(CThostFtdcQryMarginModelField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcEWarrantOffsetField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcEWarrantOffsetField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcEWarrantOffsetField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcEWarrantOffsetField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcEWarrantOffsetField *_swig_go_0) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcEWarrantOffsetField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcEWarrantOffsetField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcEWarrantOffsetField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcEWarrantOffsetField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcEWarrantOffsetField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcEWarrantOffsetField *_swig_go_0) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcEWarrantOffsetField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcEWarrantOffsetField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcEWarrantOffsetField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcEWarrantOffsetField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcEWarrantOffsetField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcEWarrantOffsetField *_swig_go_0) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcEWarrantOffsetField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcEWarrantOffsetField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcEWarrantOffsetField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcEWarrantOffsetField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcEWarrantOffsetField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcEWarrantOffsetField *_swig_go_0) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcEWarrantOffsetField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcEWarrantOffsetField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcEWarrantOffsetField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcEWarrantOffsetField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcEWarrantOffsetField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcEWarrantOffsetField *_swig_go_0) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcEWarrantOffsetField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcEWarrantOffsetField_Direction_set_goctp_ef6abdc493ff8ae2(CThostFtdcEWarrantOffsetField *_swig_go_0, char _swig_go_1) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = *(CThostFtdcEWarrantOffsetField **)&_swig_go_0; 
  arg2 = (TThostFtdcDirectionType)_swig_go_1; 
  
  if (arg1) (arg1)->Direction = arg2;
  
}


char _wrap_CThostFtdcEWarrantOffsetField_Direction_get_goctp_ef6abdc493ff8ae2(CThostFtdcEWarrantOffsetField *_swig_go_0) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  TThostFtdcDirectionType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcEWarrantOffsetField **)&_swig_go_0; 
  
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcEWarrantOffsetField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcEWarrantOffsetField *_swig_go_0, char _swig_go_1) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcEWarrantOffsetField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcEWarrantOffsetField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcEWarrantOffsetField *_swig_go_0) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcEWarrantOffsetField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcEWarrantOffsetField_Volume_set_goctp_ef6abdc493ff8ae2(CThostFtdcEWarrantOffsetField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = *(CThostFtdcEWarrantOffsetField **)&_swig_go_0; 
  arg2 = (TThostFtdcVolumeType)_swig_go_1; 
  
  if (arg1) (arg1)->Volume = arg2;
  
}


intgo _wrap_CThostFtdcEWarrantOffsetField_Volume_get_goctp_ef6abdc493ff8ae2(CThostFtdcEWarrantOffsetField *_swig_go_0) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  TThostFtdcVolumeType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcEWarrantOffsetField **)&_swig_go_0; 
  
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcEWarrantOffsetField *_wrap_new_CThostFtdcEWarrantOffsetField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcEWarrantOffsetField *result = 0 ;
  CThostFtdcEWarrantOffsetField *_swig_go_result;
  
  
  result = (CThostFtdcEWarrantOffsetField *)new CThostFtdcEWarrantOffsetField();
  *(CThostFtdcEWarrantOffsetField **)&_swig_go_result = (CThostFtdcEWarrantOffsetField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcEWarrantOffsetField_goctp_ef6abdc493ff8ae2(CThostFtdcEWarrantOffsetField *_swig_go_0) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  
  arg1 = *(CThostFtdcEWarrantOffsetField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryEWarrantOffsetField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryEWarrantOffsetField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryEWarrantOffsetField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryEWarrantOffsetField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryEWarrantOffsetField *_swig_go_0) {
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryEWarrantOffsetField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryEWarrantOffsetField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryEWarrantOffsetField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryEWarrantOffsetField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryEWarrantOffsetField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryEWarrantOffsetField *_swig_go_0) {
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryEWarrantOffsetField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryEWarrantOffsetField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryEWarrantOffsetField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryEWarrantOffsetField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryEWarrantOffsetField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryEWarrantOffsetField *_swig_go_0) {
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryEWarrantOffsetField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryEWarrantOffsetField_InstrumentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryEWarrantOffsetField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryEWarrantOffsetField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryEWarrantOffsetField_InstrumentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryEWarrantOffsetField *_swig_go_0) {
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryEWarrantOffsetField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InstrumentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryEWarrantOffsetField *_wrap_new_CThostFtdcQryEWarrantOffsetField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryEWarrantOffsetField *result = 0 ;
  CThostFtdcQryEWarrantOffsetField *_swig_go_result;
  
  
  result = (CThostFtdcQryEWarrantOffsetField *)new CThostFtdcQryEWarrantOffsetField();
  *(CThostFtdcQryEWarrantOffsetField **)&_swig_go_result = (CThostFtdcQryEWarrantOffsetField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryEWarrantOffsetField_goctp_ef6abdc493ff8ae2(CThostFtdcQryEWarrantOffsetField *_swig_go_0) {
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  
  arg1 = *(CThostFtdcQryEWarrantOffsetField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryInvestorProductGroupMarginField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorProductGroupMarginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInvestorProductGroupMarginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInvestorProductGroupMarginField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInvestorProductGroupMarginField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorProductGroupMarginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInvestorProductGroupMarginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInvestorProductGroupMarginField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInvestorProductGroupMarginField_ProductGroupID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorProductGroupMarginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryInvestorProductGroupMarginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ProductGroupID, (const char *)arg2, 31-1);
      arg1->ProductGroupID[31-1] = 0;
    } else {
      arg1->ProductGroupID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryInvestorProductGroupMarginField_ProductGroupID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ProductGroupID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryInvestorProductGroupMarginField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorProductGroupMarginField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcQryInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcQryInvestorProductGroupMarginField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQryInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcQryInvestorProductGroupMarginField *_wrap_new_CThostFtdcQryInvestorProductGroupMarginField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryInvestorProductGroupMarginField *result = 0 ;
  CThostFtdcQryInvestorProductGroupMarginField *_swig_go_result;
  
  
  result = (CThostFtdcQryInvestorProductGroupMarginField *)new CThostFtdcQryInvestorProductGroupMarginField();
  *(CThostFtdcQryInvestorProductGroupMarginField **)&_swig_go_result = (CThostFtdcQryInvestorProductGroupMarginField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryInvestorProductGroupMarginField_goctp_ef6abdc493ff8ae2(CThostFtdcQryInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  
  arg1 = *(CThostFtdcQryInvestorProductGroupMarginField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_ProductGroupID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ProductGroupID, (const char *)arg2, 31-1);
      arg1->ProductGroupID[31-1] = 0;
    } else {
      arg1->ProductGroupID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorProductGroupMarginField_ProductGroupID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ProductGroupID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorProductGroupMarginField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorProductGroupMarginField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcInvestorProductGroupMarginField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_SettlementID_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcSettlementIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SettlementID = arg2;
  
}


intgo _wrap_CThostFtdcInvestorProductGroupMarginField_SettlementID_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcSettlementIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_FrozenMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FrozenMargin = arg2;
  
}


double _wrap_CThostFtdcInvestorProductGroupMarginField_FrozenMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FrozenMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_LongFrozenMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->LongFrozenMargin = arg2;
  
}


double _wrap_CThostFtdcInvestorProductGroupMarginField_LongFrozenMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->LongFrozenMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_ShortFrozenMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ShortFrozenMargin = arg2;
  
}


double _wrap_CThostFtdcInvestorProductGroupMarginField_ShortFrozenMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ShortFrozenMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_UseMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->UseMargin = arg2;
  
}


double _wrap_CThostFtdcInvestorProductGroupMarginField_UseMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->UseMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_LongUseMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->LongUseMargin = arg2;
  
}


double _wrap_CThostFtdcInvestorProductGroupMarginField_LongUseMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->LongUseMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_ShortUseMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ShortUseMargin = arg2;
  
}


double _wrap_CThostFtdcInvestorProductGroupMarginField_ShortUseMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ShortUseMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_ExchMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ExchMargin = arg2;
  
}


double _wrap_CThostFtdcInvestorProductGroupMarginField_ExchMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ExchMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_LongExchMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->LongExchMargin = arg2;
  
}


double _wrap_CThostFtdcInvestorProductGroupMarginField_LongExchMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->LongExchMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_ShortExchMargin_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ShortExchMargin = arg2;
  
}


double _wrap_CThostFtdcInvestorProductGroupMarginField_ShortExchMargin_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ShortExchMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_CloseProfit_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CloseProfit = arg2;
  
}


double _wrap_CThostFtdcInvestorProductGroupMarginField_CloseProfit_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_FrozenCommission_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FrozenCommission = arg2;
  
}


double _wrap_CThostFtdcInvestorProductGroupMarginField_FrozenCommission_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCommission);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_Commission_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Commission = arg2;
  
}


double _wrap_CThostFtdcInvestorProductGroupMarginField_Commission_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Commission);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_FrozenCash_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->FrozenCash = arg2;
  
}


double _wrap_CThostFtdcInvestorProductGroupMarginField_FrozenCash_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCash);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_CashIn_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->CashIn = arg2;
  
}


double _wrap_CThostFtdcInvestorProductGroupMarginField_CashIn_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->CashIn);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_PositionProfit_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->PositionProfit = arg2;
  
}


double _wrap_CThostFtdcInvestorProductGroupMarginField_PositionProfit_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->PositionProfit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_OffsetAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->OffsetAmount = arg2;
  
}


double _wrap_CThostFtdcInvestorProductGroupMarginField_OffsetAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->OffsetAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_LongOffsetAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->LongOffsetAmount = arg2;
  
}


double _wrap_CThostFtdcInvestorProductGroupMarginField_LongOffsetAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->LongOffsetAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_ShortOffsetAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ShortOffsetAmount = arg2;
  
}


double _wrap_CThostFtdcInvestorProductGroupMarginField_ShortOffsetAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ShortOffsetAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_ExchOffsetAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ExchOffsetAmount = arg2;
  
}


double _wrap_CThostFtdcInvestorProductGroupMarginField_ExchOffsetAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ExchOffsetAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_LongExchOffsetAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->LongExchOffsetAmount = arg2;
  
}


double _wrap_CThostFtdcInvestorProductGroupMarginField_LongExchOffsetAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->LongExchOffsetAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_ShortExchOffsetAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, double _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->ShortExchOffsetAmount = arg2;
  
}


double _wrap_CThostFtdcInvestorProductGroupMarginField_ShortExchOffsetAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->ShortExchOffsetAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcInvestorProductGroupMarginField_HedgeFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0, char _swig_go_1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  arg2 = (TThostFtdcHedgeFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->HedgeFlag = arg2;
  
}


char _wrap_CThostFtdcInvestorProductGroupMarginField_HedgeFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcHedgeFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcInvestorProductGroupMarginField *_wrap_new_CThostFtdcInvestorProductGroupMarginField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcInvestorProductGroupMarginField *result = 0 ;
  CThostFtdcInvestorProductGroupMarginField *_swig_go_result;
  
  
  result = (CThostFtdcInvestorProductGroupMarginField *)new CThostFtdcInvestorProductGroupMarginField();
  *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_result = (CThostFtdcInvestorProductGroupMarginField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcInvestorProductGroupMarginField_goctp_ef6abdc493ff8ae2(CThostFtdcInvestorProductGroupMarginField *_swig_go_0) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  
  arg1 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQueryCFMMCTradingAccountTokenField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQueryCFMMCTradingAccountTokenField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQueryCFMMCTradingAccountTokenField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQueryCFMMCTradingAccountTokenField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQueryCFMMCTradingAccountTokenField *_swig_go_0) {
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQueryCFMMCTradingAccountTokenField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQueryCFMMCTradingAccountTokenField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQueryCFMMCTradingAccountTokenField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQueryCFMMCTradingAccountTokenField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQueryCFMMCTradingAccountTokenField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQueryCFMMCTradingAccountTokenField *_swig_go_0) {
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQueryCFMMCTradingAccountTokenField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQueryCFMMCTradingAccountTokenField *_wrap_new_CThostFtdcQueryCFMMCTradingAccountTokenField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQueryCFMMCTradingAccountTokenField *result = 0 ;
  CThostFtdcQueryCFMMCTradingAccountTokenField *_swig_go_result;
  
  
  result = (CThostFtdcQueryCFMMCTradingAccountTokenField *)new CThostFtdcQueryCFMMCTradingAccountTokenField();
  *(CThostFtdcQueryCFMMCTradingAccountTokenField **)&_swig_go_result = (CThostFtdcQueryCFMMCTradingAccountTokenField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQueryCFMMCTradingAccountTokenField_goctp_ef6abdc493ff8ae2(CThostFtdcQueryCFMMCTradingAccountTokenField *_swig_go_0) {
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  
  arg1 = *(CThostFtdcQueryCFMMCTradingAccountTokenField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcCFMMCTradingAccountTokenField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountTokenField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountTokenField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCFMMCTradingAccountTokenField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountTokenField *_swig_go_0) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountTokenField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCFMMCTradingAccountTokenField_ParticipantID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountTokenField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountTokenField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCFMMCTradingAccountTokenField_ParticipantID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountTokenField *_swig_go_0) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountTokenField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ParticipantID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCFMMCTradingAccountTokenField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountTokenField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountTokenField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCFMMCTradingAccountTokenField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountTokenField *_swig_go_0) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountTokenField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCFMMCTradingAccountTokenField_KeyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountTokenField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountTokenField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->KeyID = arg2;
  
}


intgo _wrap_CThostFtdcCFMMCTradingAccountTokenField_KeyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountTokenField *_swig_go_0) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountTokenField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->KeyID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCFMMCTradingAccountTokenField_Token_set_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountTokenField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountTokenField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Token, (const char *)arg2, 21-1);
      arg1->Token[21-1] = 0;
    } else {
      arg1->Token[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCFMMCTradingAccountTokenField_Token_get_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountTokenField *_swig_go_0) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountTokenField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Token);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcCFMMCTradingAccountTokenField *_wrap_new_CThostFtdcCFMMCTradingAccountTokenField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcCFMMCTradingAccountTokenField *result = 0 ;
  CThostFtdcCFMMCTradingAccountTokenField *_swig_go_result;
  
  
  result = (CThostFtdcCFMMCTradingAccountTokenField *)new CThostFtdcCFMMCTradingAccountTokenField();
  *(CThostFtdcCFMMCTradingAccountTokenField **)&_swig_go_result = (CThostFtdcCFMMCTradingAccountTokenField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcCFMMCTradingAccountTokenField_goctp_ef6abdc493ff8ae2(CThostFtdcCFMMCTradingAccountTokenField *_swig_go_0) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  
  arg1 = *(CThostFtdcCFMMCTradingAccountTokenField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryProductGroupField_ProductID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryProductGroupField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryProductGroupField *arg1 = (CThostFtdcQryProductGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryProductGroupField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 31-1);
      arg1->ProductID[31-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryProductGroupField_ProductID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryProductGroupField *_swig_go_0) {
  CThostFtdcQryProductGroupField *arg1 = (CThostFtdcQryProductGroupField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryProductGroupField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ProductID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryProductGroupField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryProductGroupField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryProductGroupField *arg1 = (CThostFtdcQryProductGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryProductGroupField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryProductGroupField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryProductGroupField *_swig_go_0) {
  CThostFtdcQryProductGroupField *arg1 = (CThostFtdcQryProductGroupField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryProductGroupField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryProductGroupField *_wrap_new_CThostFtdcQryProductGroupField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryProductGroupField *result = 0 ;
  CThostFtdcQryProductGroupField *_swig_go_result;
  
  
  result = (CThostFtdcQryProductGroupField *)new CThostFtdcQryProductGroupField();
  *(CThostFtdcQryProductGroupField **)&_swig_go_result = (CThostFtdcQryProductGroupField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryProductGroupField_goctp_ef6abdc493ff8ae2(CThostFtdcQryProductGroupField *_swig_go_0) {
  CThostFtdcQryProductGroupField *arg1 = (CThostFtdcQryProductGroupField *) 0 ;
  
  arg1 = *(CThostFtdcQryProductGroupField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcProductGroupField_ProductID_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductGroupField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcProductGroupField *arg1 = (CThostFtdcProductGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcProductGroupField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 31-1);
      arg1->ProductID[31-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcProductGroupField_ProductID_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductGroupField *_swig_go_0) {
  CThostFtdcProductGroupField *arg1 = (CThostFtdcProductGroupField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcProductGroupField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ProductID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcProductGroupField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductGroupField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcProductGroupField *arg1 = (CThostFtdcProductGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcProductGroupField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcProductGroupField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductGroupField *_swig_go_0) {
  CThostFtdcProductGroupField *arg1 = (CThostFtdcProductGroupField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcProductGroupField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcProductGroupField_ProductGroupID_set_goctp_ef6abdc493ff8ae2(CThostFtdcProductGroupField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcProductGroupField *arg1 = (CThostFtdcProductGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcProductGroupField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ProductGroupID, (const char *)arg2, 31-1);
      arg1->ProductGroupID[31-1] = 0;
    } else {
      arg1->ProductGroupID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcProductGroupField_ProductGroupID_get_goctp_ef6abdc493ff8ae2(CThostFtdcProductGroupField *_swig_go_0) {
  CThostFtdcProductGroupField *arg1 = (CThostFtdcProductGroupField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcProductGroupField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ProductGroupID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcProductGroupField *_wrap_new_CThostFtdcProductGroupField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcProductGroupField *result = 0 ;
  CThostFtdcProductGroupField *_swig_go_result;
  
  
  result = (CThostFtdcProductGroupField *)new CThostFtdcProductGroupField();
  *(CThostFtdcProductGroupField **)&_swig_go_result = (CThostFtdcProductGroupField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcProductGroupField_goctp_ef6abdc493ff8ae2(CThostFtdcProductGroupField *_swig_go_0) {
  CThostFtdcProductGroupField *arg1 = (CThostFtdcProductGroupField *) 0 ;
  
  arg1 = *(CThostFtdcProductGroupField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcBulletinField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBulletinField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBulletinField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBulletinField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBulletinField_BulletinID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  TThostFtdcBulletinIDType arg2 ;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  arg2 = (TThostFtdcBulletinIDType)_swig_go_1; 
  
  if (arg1) (arg1)->BulletinID = arg2;
  
}


intgo _wrap_CThostFtdcBulletinField_BulletinID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  TThostFtdcBulletinIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  result = (TThostFtdcBulletinIDType) ((arg1)->BulletinID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBulletinField_SequenceNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->SequenceNo = arg2;
  
}


intgo _wrap_CThostFtdcBulletinField_SequenceNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBulletinField_NewsType_set_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->NewsType, (const char *)arg2, 3-1);
      arg1->NewsType[3-1] = 0;
    } else {
      arg1->NewsType[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBulletinField_NewsType_get_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->NewsType);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBulletinField_NewsUrgency_set_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0, char _swig_go_1) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  TThostFtdcNewsUrgencyType arg2 ;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  arg2 = (TThostFtdcNewsUrgencyType)_swig_go_1; 
  
  if (arg1) (arg1)->NewsUrgency = arg2;
  
}


char _wrap_CThostFtdcBulletinField_NewsUrgency_get_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  TThostFtdcNewsUrgencyType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  result = (TThostFtdcNewsUrgencyType) ((arg1)->NewsUrgency);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBulletinField_SendTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SendTime, (const char *)arg2, 9-1);
      arg1->SendTime[9-1] = 0;
    } else {
      arg1->SendTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBulletinField_SendTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->SendTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBulletinField_Abstract_set_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Abstract, (const char *)arg2, 81-1);
      arg1->Abstract[81-1] = 0;
    } else {
      arg1->Abstract[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBulletinField_Abstract_get_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Abstract);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBulletinField_ComeFrom_set_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ComeFrom, (const char *)arg2, 21-1);
      arg1->ComeFrom[21-1] = 0;
    } else {
      arg1->ComeFrom[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBulletinField_ComeFrom_get_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ComeFrom);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBulletinField_Content_set_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Content, (const char *)arg2, 501-1);
      arg1->Content[501-1] = 0;
    } else {
      arg1->Content[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBulletinField_Content_get_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Content);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBulletinField_URLLink_set_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->URLLink, (const char *)arg2, 201-1);
      arg1->URLLink[201-1] = 0;
    } else {
      arg1->URLLink[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBulletinField_URLLink_get_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->URLLink);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBulletinField_MarketID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MarketID, (const char *)arg2, 31-1);
      arg1->MarketID[31-1] = 0;
    } else {
      arg1->MarketID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBulletinField_MarketID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MarketID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcBulletinField *_wrap_new_CThostFtdcBulletinField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcBulletinField *result = 0 ;
  CThostFtdcBulletinField *_swig_go_result;
  
  
  result = (CThostFtdcBulletinField *)new CThostFtdcBulletinField();
  *(CThostFtdcBulletinField **)&_swig_go_result = (CThostFtdcBulletinField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcBulletinField_goctp_ef6abdc493ff8ae2(CThostFtdcBulletinField *_swig_go_0) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  
  arg1 = *(CThostFtdcBulletinField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryBulletinField_ExchangeID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBulletinField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryBulletinField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryBulletinField_ExchangeID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBulletinField *_swig_go_0) {
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryBulletinField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ExchangeID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryBulletinField_BulletinID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBulletinField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  TThostFtdcBulletinIDType arg2 ;
  
  arg1 = *(CThostFtdcQryBulletinField **)&_swig_go_0; 
  arg2 = (TThostFtdcBulletinIDType)_swig_go_1; 
  
  if (arg1) (arg1)->BulletinID = arg2;
  
}


intgo _wrap_CThostFtdcQryBulletinField_BulletinID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBulletinField *_swig_go_0) {
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  TThostFtdcBulletinIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQryBulletinField **)&_swig_go_0; 
  
  result = (TThostFtdcBulletinIDType) ((arg1)->BulletinID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryBulletinField_SequenceNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBulletinField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = *(CThostFtdcQryBulletinField **)&_swig_go_0; 
  arg2 = (TThostFtdcSequenceNoType)_swig_go_1; 
  
  if (arg1) (arg1)->SequenceNo = arg2;
  
}


intgo _wrap_CThostFtdcQryBulletinField_SequenceNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBulletinField *_swig_go_0) {
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  TThostFtdcSequenceNoType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcQryBulletinField **)&_swig_go_0; 
  
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryBulletinField_NewsType_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBulletinField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryBulletinField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->NewsType, (const char *)arg2, 3-1);
      arg1->NewsType[3-1] = 0;
    } else {
      arg1->NewsType[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryBulletinField_NewsType_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBulletinField *_swig_go_0) {
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryBulletinField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->NewsType);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryBulletinField_NewsUrgency_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryBulletinField *_swig_go_0, char _swig_go_1) {
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  TThostFtdcNewsUrgencyType arg2 ;
  
  arg1 = *(CThostFtdcQryBulletinField **)&_swig_go_0; 
  arg2 = (TThostFtdcNewsUrgencyType)_swig_go_1; 
  
  if (arg1) (arg1)->NewsUrgency = arg2;
  
}


char _wrap_CThostFtdcQryBulletinField_NewsUrgency_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryBulletinField *_swig_go_0) {
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  TThostFtdcNewsUrgencyType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcQryBulletinField **)&_swig_go_0; 
  
  result = (TThostFtdcNewsUrgencyType) ((arg1)->NewsUrgency);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcQryBulletinField *_wrap_new_CThostFtdcQryBulletinField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryBulletinField *result = 0 ;
  CThostFtdcQryBulletinField *_swig_go_result;
  
  
  result = (CThostFtdcQryBulletinField *)new CThostFtdcQryBulletinField();
  *(CThostFtdcQryBulletinField **)&_swig_go_result = (CThostFtdcQryBulletinField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryBulletinField_goctp_ef6abdc493ff8ae2(CThostFtdcQryBulletinField *_swig_go_0) {
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  
  arg1 = *(CThostFtdcQryBulletinField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcReqOpenAccountField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcReqOpenAccountField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcReqOpenAccountField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcReqOpenAccountField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_CustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_CustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_IdCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdCardType = arg2;
  
}


char _wrap_CThostFtdcReqOpenAccountField_IdCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_Gender_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcGenderType)_swig_go_1; 
  
  if (arg1) (arg1)->Gender = arg2;
  
}


char _wrap_CThostFtdcReqOpenAccountField_Gender_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcGenderType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_CountryCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_CountryCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CountryCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_CustType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustType = arg2;
  
}


char _wrap_CThostFtdcReqOpenAccountField_CustType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_Address_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_Address_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Address);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_ZipCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_ZipCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ZipCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_Telephone_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_Telephone_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Telephone);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_MobilePhone_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_MobilePhone_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MobilePhone);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_Fax_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_Fax_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Fax);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_EMail_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_EMail_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->EMail);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_MoneyAccountStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyAccountStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
  
}


char _wrap_CThostFtdcReqOpenAccountField_MoneyAccountStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_BankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_BankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_BankPassWord_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_BankPassWord_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankPassWord);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcReqOpenAccountField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_VerifyCertNoFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcYesNoIndicatorType)_swig_go_1; 
  
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
  
}


char _wrap_CThostFtdcReqOpenAccountField_VerifyCertNoFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_CashExchangeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcCashExchangeCodeType)_swig_go_1; 
  
  if (arg1) (arg1)->CashExchangeCode = arg2;
  
}


char _wrap_CThostFtdcReqOpenAccountField_CashExchangeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcCashExchangeCodeType) ((arg1)->CashExchangeCode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_BankAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankAccType = arg2;
  
}


char _wrap_CThostFtdcReqOpenAccountField_BankAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_DeviceID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_DeviceID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DeviceID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_BankSecuAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankSecuAccType = arg2;
  
}


char _wrap_CThostFtdcReqOpenAccountField_BankSecuAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_BankSecuAcc_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_BankSecuAcc_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSecuAcc);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_BankPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BankPwdFlag = arg2;
  
}


char _wrap_CThostFtdcReqOpenAccountField_BankPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_SecuPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->SecuPwdFlag = arg2;
  
}


char _wrap_CThostFtdcReqOpenAccountField_SecuPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_OperNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_OperNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcReqOpenAccountField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqOpenAccountField_LongCustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqOpenAccountField_LongCustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LongCustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcReqOpenAccountField *_wrap_new_CThostFtdcReqOpenAccountField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcReqOpenAccountField *result = 0 ;
  CThostFtdcReqOpenAccountField *_swig_go_result;
  
  
  result = (CThostFtdcReqOpenAccountField *)new CThostFtdcReqOpenAccountField();
  *(CThostFtdcReqOpenAccountField **)&_swig_go_result = (CThostFtdcReqOpenAccountField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcReqOpenAccountField_goctp_ef6abdc493ff8ae2(CThostFtdcReqOpenAccountField *_swig_go_0) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  
  arg1 = *(CThostFtdcReqOpenAccountField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcReqCancelAccountField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcReqCancelAccountField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcReqCancelAccountField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcReqCancelAccountField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_CustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_CustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_IdCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdCardType = arg2;
  
}


char _wrap_CThostFtdcReqCancelAccountField_IdCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_Gender_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcGenderType)_swig_go_1; 
  
  if (arg1) (arg1)->Gender = arg2;
  
}


char _wrap_CThostFtdcReqCancelAccountField_Gender_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcGenderType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_CountryCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_CountryCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CountryCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_CustType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustType = arg2;
  
}


char _wrap_CThostFtdcReqCancelAccountField_CustType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_Address_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_Address_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Address);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_ZipCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_ZipCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ZipCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_Telephone_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_Telephone_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Telephone);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_MobilePhone_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_MobilePhone_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MobilePhone);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_Fax_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_Fax_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Fax);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_EMail_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_EMail_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->EMail);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_MoneyAccountStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyAccountStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
  
}


char _wrap_CThostFtdcReqCancelAccountField_MoneyAccountStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_BankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_BankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_BankPassWord_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_BankPassWord_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankPassWord);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcReqCancelAccountField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_VerifyCertNoFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcYesNoIndicatorType)_swig_go_1; 
  
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
  
}


char _wrap_CThostFtdcReqCancelAccountField_VerifyCertNoFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_CashExchangeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcCashExchangeCodeType)_swig_go_1; 
  
  if (arg1) (arg1)->CashExchangeCode = arg2;
  
}


char _wrap_CThostFtdcReqCancelAccountField_CashExchangeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcCashExchangeCodeType) ((arg1)->CashExchangeCode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_BankAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankAccType = arg2;
  
}


char _wrap_CThostFtdcReqCancelAccountField_BankAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_DeviceID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_DeviceID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DeviceID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_BankSecuAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankSecuAccType = arg2;
  
}


char _wrap_CThostFtdcReqCancelAccountField_BankSecuAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_BankSecuAcc_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_BankSecuAcc_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSecuAcc);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_BankPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BankPwdFlag = arg2;
  
}


char _wrap_CThostFtdcReqCancelAccountField_BankPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_SecuPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->SecuPwdFlag = arg2;
  
}


char _wrap_CThostFtdcReqCancelAccountField_SecuPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_OperNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_OperNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcReqCancelAccountField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqCancelAccountField_LongCustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqCancelAccountField_LongCustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LongCustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcReqCancelAccountField *_wrap_new_CThostFtdcReqCancelAccountField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcReqCancelAccountField *result = 0 ;
  CThostFtdcReqCancelAccountField *_swig_go_result;
  
  
  result = (CThostFtdcReqCancelAccountField *)new CThostFtdcReqCancelAccountField();
  *(CThostFtdcReqCancelAccountField **)&_swig_go_result = (CThostFtdcReqCancelAccountField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcReqCancelAccountField_goctp_ef6abdc493ff8ae2(CThostFtdcReqCancelAccountField *_swig_go_0) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  
  arg1 = *(CThostFtdcReqCancelAccountField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcReqChangeAccountField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcReqChangeAccountField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcReqChangeAccountField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcReqChangeAccountField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_CustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_CustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_IdCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdCardType = arg2;
  
}


char _wrap_CThostFtdcReqChangeAccountField_IdCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_Gender_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcGenderType)_swig_go_1; 
  
  if (arg1) (arg1)->Gender = arg2;
  
}


char _wrap_CThostFtdcReqChangeAccountField_Gender_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcGenderType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_CountryCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_CountryCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CountryCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_CustType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustType = arg2;
  
}


char _wrap_CThostFtdcReqChangeAccountField_CustType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_Address_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_Address_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Address);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_ZipCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_ZipCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ZipCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_Telephone_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_Telephone_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Telephone);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_MobilePhone_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_MobilePhone_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MobilePhone);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_Fax_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_Fax_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Fax);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_EMail_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_EMail_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->EMail);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_MoneyAccountStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyAccountStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
  
}


char _wrap_CThostFtdcReqChangeAccountField_MoneyAccountStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_BankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_BankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_BankPassWord_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_BankPassWord_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankPassWord);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_NewBankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->NewBankAccount, (const char *)arg2, 41-1);
      arg1->NewBankAccount[41-1] = 0;
    } else {
      arg1->NewBankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_NewBankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->NewBankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_NewBankPassWord_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->NewBankPassWord, (const char *)arg2, 41-1);
      arg1->NewBankPassWord[41-1] = 0;
    } else {
      arg1->NewBankPassWord[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_NewBankPassWord_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->NewBankPassWord);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_BankAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankAccType = arg2;
  
}


char _wrap_CThostFtdcReqChangeAccountField_BankAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcReqChangeAccountField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_VerifyCertNoFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcYesNoIndicatorType)_swig_go_1; 
  
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
  
}


char _wrap_CThostFtdcReqChangeAccountField_VerifyCertNoFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_BankPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BankPwdFlag = arg2;
  
}


char _wrap_CThostFtdcReqChangeAccountField_BankPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_SecuPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->SecuPwdFlag = arg2;
  
}


char _wrap_CThostFtdcReqChangeAccountField_SecuPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcReqChangeAccountField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqChangeAccountField_LongCustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqChangeAccountField_LongCustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LongCustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcReqChangeAccountField *_wrap_new_CThostFtdcReqChangeAccountField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcReqChangeAccountField *result = 0 ;
  CThostFtdcReqChangeAccountField *_swig_go_result;
  
  
  result = (CThostFtdcReqChangeAccountField *)new CThostFtdcReqChangeAccountField();
  *(CThostFtdcReqChangeAccountField **)&_swig_go_result = (CThostFtdcReqChangeAccountField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcReqChangeAccountField_goctp_ef6abdc493ff8ae2(CThostFtdcReqChangeAccountField *_swig_go_0) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  
  arg1 = *(CThostFtdcReqChangeAccountField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcReqTransferField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcReqTransferField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcReqTransferField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcReqTransferField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_CustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_CustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_IdCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdCardType = arg2;
  
}


char _wrap_CThostFtdcReqTransferField_IdCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_CustType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustType = arg2;
  
}


char _wrap_CThostFtdcReqTransferField_CustType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcCustTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_BankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_BankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_BankPassWord_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_BankPassWord_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankPassWord);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcReqTransferField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_FutureSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcFutureSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->FutureSerial = arg2;
  
}


intgo _wrap_CThostFtdcReqTransferField_FutureSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcFutureSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_VerifyCertNoFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcYesNoIndicatorType)_swig_go_1; 
  
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
  
}


char _wrap_CThostFtdcReqTransferField_VerifyCertNoFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_TradeAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, double _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeAmountType)_swig_go_1; 
  
  if (arg1) (arg1)->TradeAmount = arg2;
  
}


double _wrap_CThostFtdcReqTransferField_TradeAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTradeAmountType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeAmountType) ((arg1)->TradeAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_FutureFetchAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, double _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeAmountType)_swig_go_1; 
  
  if (arg1) (arg1)->FutureFetchAmount = arg2;
  
}


double _wrap_CThostFtdcReqTransferField_FutureFetchAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTradeAmountType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeAmountType) ((arg1)->FutureFetchAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_FeePayFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcFeePayFlagType arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcFeePayFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->FeePayFlag = arg2;
  
}


char _wrap_CThostFtdcReqTransferField_FeePayFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcFeePayFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcFeePayFlagType) ((arg1)->FeePayFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_CustFee_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, double _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcCustFeeType arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustFeeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustFee = arg2;
  
}


double _wrap_CThostFtdcReqTransferField_CustFee_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcCustFeeType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcCustFeeType) ((arg1)->CustFee);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_BrokerFee_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, double _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcFutureFeeType arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcFutureFeeType)_swig_go_1; 
  
  if (arg1) (arg1)->BrokerFee = arg2;
  
}


double _wrap_CThostFtdcReqTransferField_BrokerFee_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcFutureFeeType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcFutureFeeType) ((arg1)->BrokerFee);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_Message_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Message, (const char *)arg2, 129-1);
      arg1->Message[129-1] = 0;
    } else {
      arg1->Message[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_Message_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Message);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_BankAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankAccType = arg2;
  
}


char _wrap_CThostFtdcReqTransferField_BankAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_DeviceID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_DeviceID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DeviceID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_BankSecuAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankSecuAccType = arg2;
  
}


char _wrap_CThostFtdcReqTransferField_BankSecuAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_BankSecuAcc_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_BankSecuAcc_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSecuAcc);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_BankPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BankPwdFlag = arg2;
  
}


char _wrap_CThostFtdcReqTransferField_BankPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_SecuPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->SecuPwdFlag = arg2;
  
}


char _wrap_CThostFtdcReqTransferField_SecuPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_OperNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_OperNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcReqTransferField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcReqTransferField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_TransferStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTransferStatusType arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcTransferStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->TransferStatus = arg2;
  
}


char _wrap_CThostFtdcReqTransferField_TransferStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTransferStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcTransferStatusType) ((arg1)->TransferStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqTransferField_LongCustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqTransferField_LongCustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LongCustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcReqTransferField *_wrap_new_CThostFtdcReqTransferField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcReqTransferField *result = 0 ;
  CThostFtdcReqTransferField *_swig_go_result;
  
  
  result = (CThostFtdcReqTransferField *)new CThostFtdcReqTransferField();
  *(CThostFtdcReqTransferField **)&_swig_go_result = (CThostFtdcReqTransferField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcReqTransferField_goctp_ef6abdc493ff8ae2(CThostFtdcReqTransferField *_swig_go_0) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  
  arg1 = *(CThostFtdcReqTransferField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcRspTransferField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcRspTransferField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcRspTransferField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcRspTransferField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_CustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_CustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_IdCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdCardType = arg2;
  
}


char _wrap_CThostFtdcRspTransferField_IdCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_CustType_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustType = arg2;
  
}


char _wrap_CThostFtdcRspTransferField_CustType_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcCustTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_BankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_BankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_BankPassWord_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_BankPassWord_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankPassWord);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcRspTransferField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_FutureSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcFutureSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->FutureSerial = arg2;
  
}


intgo _wrap_CThostFtdcRspTransferField_FutureSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcFutureSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_VerifyCertNoFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcYesNoIndicatorType)_swig_go_1; 
  
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
  
}


char _wrap_CThostFtdcRspTransferField_VerifyCertNoFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_TradeAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, double _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeAmountType)_swig_go_1; 
  
  if (arg1) (arg1)->TradeAmount = arg2;
  
}


double _wrap_CThostFtdcRspTransferField_TradeAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTradeAmountType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeAmountType) ((arg1)->TradeAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_FutureFetchAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, double _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeAmountType)_swig_go_1; 
  
  if (arg1) (arg1)->FutureFetchAmount = arg2;
  
}


double _wrap_CThostFtdcRspTransferField_FutureFetchAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTradeAmountType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeAmountType) ((arg1)->FutureFetchAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_FeePayFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcFeePayFlagType arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcFeePayFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->FeePayFlag = arg2;
  
}


char _wrap_CThostFtdcRspTransferField_FeePayFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcFeePayFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcFeePayFlagType) ((arg1)->FeePayFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_CustFee_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, double _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcCustFeeType arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustFeeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustFee = arg2;
  
}


double _wrap_CThostFtdcRspTransferField_CustFee_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcCustFeeType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcCustFeeType) ((arg1)->CustFee);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_BrokerFee_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, double _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcFutureFeeType arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcFutureFeeType)_swig_go_1; 
  
  if (arg1) (arg1)->BrokerFee = arg2;
  
}


double _wrap_CThostFtdcRspTransferField_BrokerFee_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcFutureFeeType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcFutureFeeType) ((arg1)->BrokerFee);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_Message_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Message, (const char *)arg2, 129-1);
      arg1->Message[129-1] = 0;
    } else {
      arg1->Message[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_Message_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Message);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_BankAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankAccType = arg2;
  
}


char _wrap_CThostFtdcRspTransferField_BankAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_DeviceID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_DeviceID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DeviceID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_BankSecuAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankSecuAccType = arg2;
  
}


char _wrap_CThostFtdcRspTransferField_BankSecuAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_BankSecuAcc_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_BankSecuAcc_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSecuAcc);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_BankPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BankPwdFlag = arg2;
  
}


char _wrap_CThostFtdcRspTransferField_BankPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_SecuPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->SecuPwdFlag = arg2;
  
}


char _wrap_CThostFtdcRspTransferField_SecuPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_OperNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_OperNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcRspTransferField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcRspTransferField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_TransferStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTransferStatusType arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcTransferStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->TransferStatus = arg2;
  
}


char _wrap_CThostFtdcRspTransferField_TransferStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTransferStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcTransferStatusType) ((arg1)->TransferStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcRspTransferField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspTransferField_LongCustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspTransferField_LongCustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LongCustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcRspTransferField *_wrap_new_CThostFtdcRspTransferField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcRspTransferField *result = 0 ;
  CThostFtdcRspTransferField *_swig_go_result;
  
  
  result = (CThostFtdcRspTransferField *)new CThostFtdcRspTransferField();
  *(CThostFtdcRspTransferField **)&_swig_go_result = (CThostFtdcRspTransferField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcRspTransferField_goctp_ef6abdc493ff8ae2(CThostFtdcRspTransferField *_swig_go_0) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  
  arg1 = *(CThostFtdcRspTransferField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcReqRepealField_RepealTimeInterval_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcRepealTimeIntervalType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcRepealTimeIntervalType)_swig_go_1; 
  
  if (arg1) (arg1)->RepealTimeInterval = arg2;
  
}


intgo _wrap_CThostFtdcReqRepealField_RepealTimeInterval_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcRepealTimeIntervalType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcRepealTimeIntervalType) ((arg1)->RepealTimeInterval);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_RepealedTimes_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcRepealedTimesType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcRepealedTimesType)_swig_go_1; 
  
  if (arg1) (arg1)->RepealedTimes = arg2;
  
}


intgo _wrap_CThostFtdcReqRepealField_RepealedTimes_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcRepealedTimesType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcRepealedTimesType) ((arg1)->RepealedTimes);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_BankRepealFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBankRepealFlagType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankRepealFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BankRepealFlag = arg2;
  
}


char _wrap_CThostFtdcReqRepealField_BankRepealFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBankRepealFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcBankRepealFlagType) ((arg1)->BankRepealFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_BrokerRepealFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBrokerRepealFlagType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcBrokerRepealFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BrokerRepealFlag = arg2;
  
}


char _wrap_CThostFtdcReqRepealField_BrokerRepealFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBrokerRepealFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcBrokerRepealFlagType) ((arg1)->BrokerRepealFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_PlateRepealSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcPlateSerialType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcPlateSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateRepealSerial = arg2;
  
}


intgo _wrap_CThostFtdcReqRepealField_PlateRepealSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcPlateSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcPlateSerialType) ((arg1)->PlateRepealSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_BankRepealSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankRepealSerial, (const char *)arg2, 13-1);
      arg1->BankRepealSerial[13-1] = 0;
    } else {
      arg1->BankRepealSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_BankRepealSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankRepealSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_FutureRepealSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcFutureSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->FutureRepealSerial = arg2;
  
}


intgo _wrap_CThostFtdcReqRepealField_FutureRepealSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFutureSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureRepealSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcReqRepealField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcReqRepealField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcReqRepealField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_CustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_CustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_IdCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdCardType = arg2;
  
}


char _wrap_CThostFtdcReqRepealField_IdCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_CustType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustType = arg2;
  
}


char _wrap_CThostFtdcReqRepealField_CustType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcCustTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_BankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_BankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_BankPassWord_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_BankPassWord_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankPassWord);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcReqRepealField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_FutureSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcFutureSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->FutureSerial = arg2;
  
}


intgo _wrap_CThostFtdcReqRepealField_FutureSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFutureSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_VerifyCertNoFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcYesNoIndicatorType)_swig_go_1; 
  
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
  
}


char _wrap_CThostFtdcReqRepealField_VerifyCertNoFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_TradeAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, double _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeAmountType)_swig_go_1; 
  
  if (arg1) (arg1)->TradeAmount = arg2;
  
}


double _wrap_CThostFtdcReqRepealField_TradeAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTradeAmountType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeAmountType) ((arg1)->TradeAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_FutureFetchAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, double _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeAmountType)_swig_go_1; 
  
  if (arg1) (arg1)->FutureFetchAmount = arg2;
  
}


double _wrap_CThostFtdcReqRepealField_FutureFetchAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTradeAmountType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeAmountType) ((arg1)->FutureFetchAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_FeePayFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFeePayFlagType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcFeePayFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->FeePayFlag = arg2;
  
}


char _wrap_CThostFtdcReqRepealField_FeePayFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFeePayFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcFeePayFlagType) ((arg1)->FeePayFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_CustFee_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, double _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcCustFeeType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustFeeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustFee = arg2;
  
}


double _wrap_CThostFtdcReqRepealField_CustFee_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcCustFeeType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcCustFeeType) ((arg1)->CustFee);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_BrokerFee_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, double _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFutureFeeType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcFutureFeeType)_swig_go_1; 
  
  if (arg1) (arg1)->BrokerFee = arg2;
  
}


double _wrap_CThostFtdcReqRepealField_BrokerFee_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFutureFeeType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcFutureFeeType) ((arg1)->BrokerFee);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_Message_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Message, (const char *)arg2, 129-1);
      arg1->Message[129-1] = 0;
    } else {
      arg1->Message[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_Message_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Message);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_BankAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankAccType = arg2;
  
}


char _wrap_CThostFtdcReqRepealField_BankAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_DeviceID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_DeviceID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DeviceID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_BankSecuAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankSecuAccType = arg2;
  
}


char _wrap_CThostFtdcReqRepealField_BankSecuAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_BankSecuAcc_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_BankSecuAcc_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSecuAcc);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_BankPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BankPwdFlag = arg2;
  
}


char _wrap_CThostFtdcReqRepealField_BankPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_SecuPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->SecuPwdFlag = arg2;
  
}


char _wrap_CThostFtdcReqRepealField_SecuPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_OperNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_OperNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcReqRepealField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcReqRepealField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_TransferStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTransferStatusType arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcTransferStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->TransferStatus = arg2;
  
}


char _wrap_CThostFtdcReqRepealField_TransferStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTransferStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcTransferStatusType) ((arg1)->TransferStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqRepealField_LongCustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqRepealField_LongCustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LongCustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcReqRepealField *_wrap_new_CThostFtdcReqRepealField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcReqRepealField *result = 0 ;
  CThostFtdcReqRepealField *_swig_go_result;
  
  
  result = (CThostFtdcReqRepealField *)new CThostFtdcReqRepealField();
  *(CThostFtdcReqRepealField **)&_swig_go_result = (CThostFtdcReqRepealField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcReqRepealField_goctp_ef6abdc493ff8ae2(CThostFtdcReqRepealField *_swig_go_0) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  
  arg1 = *(CThostFtdcReqRepealField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcRspRepealField_RepealTimeInterval_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcRepealTimeIntervalType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcRepealTimeIntervalType)_swig_go_1; 
  
  if (arg1) (arg1)->RepealTimeInterval = arg2;
  
}


intgo _wrap_CThostFtdcRspRepealField_RepealTimeInterval_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcRepealTimeIntervalType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcRepealTimeIntervalType) ((arg1)->RepealTimeInterval);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_RepealedTimes_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcRepealedTimesType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcRepealedTimesType)_swig_go_1; 
  
  if (arg1) (arg1)->RepealedTimes = arg2;
  
}


intgo _wrap_CThostFtdcRspRepealField_RepealedTimes_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcRepealedTimesType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcRepealedTimesType) ((arg1)->RepealedTimes);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_BankRepealFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBankRepealFlagType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankRepealFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BankRepealFlag = arg2;
  
}


char _wrap_CThostFtdcRspRepealField_BankRepealFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBankRepealFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcBankRepealFlagType) ((arg1)->BankRepealFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_BrokerRepealFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBrokerRepealFlagType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcBrokerRepealFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BrokerRepealFlag = arg2;
  
}


char _wrap_CThostFtdcRspRepealField_BrokerRepealFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBrokerRepealFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcBrokerRepealFlagType) ((arg1)->BrokerRepealFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_PlateRepealSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcPlateSerialType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcPlateSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateRepealSerial = arg2;
  
}


intgo _wrap_CThostFtdcRspRepealField_PlateRepealSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcPlateSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcPlateSerialType) ((arg1)->PlateRepealSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_BankRepealSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankRepealSerial, (const char *)arg2, 13-1);
      arg1->BankRepealSerial[13-1] = 0;
    } else {
      arg1->BankRepealSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_BankRepealSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankRepealSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_FutureRepealSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcFutureSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->FutureRepealSerial = arg2;
  
}


intgo _wrap_CThostFtdcRspRepealField_FutureRepealSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFutureSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureRepealSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcRspRepealField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcRspRepealField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcRspRepealField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_CustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_CustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_IdCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdCardType = arg2;
  
}


char _wrap_CThostFtdcRspRepealField_IdCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_CustType_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustType = arg2;
  
}


char _wrap_CThostFtdcRspRepealField_CustType_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcCustTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_BankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_BankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_BankPassWord_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_BankPassWord_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankPassWord);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcRspRepealField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_FutureSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcFutureSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->FutureSerial = arg2;
  
}


intgo _wrap_CThostFtdcRspRepealField_FutureSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFutureSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_VerifyCertNoFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcYesNoIndicatorType)_swig_go_1; 
  
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
  
}


char _wrap_CThostFtdcRspRepealField_VerifyCertNoFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_TradeAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, double _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeAmountType)_swig_go_1; 
  
  if (arg1) (arg1)->TradeAmount = arg2;
  
}


double _wrap_CThostFtdcRspRepealField_TradeAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTradeAmountType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeAmountType) ((arg1)->TradeAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_FutureFetchAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, double _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeAmountType)_swig_go_1; 
  
  if (arg1) (arg1)->FutureFetchAmount = arg2;
  
}


double _wrap_CThostFtdcRspRepealField_FutureFetchAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTradeAmountType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeAmountType) ((arg1)->FutureFetchAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_FeePayFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFeePayFlagType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcFeePayFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->FeePayFlag = arg2;
  
}


char _wrap_CThostFtdcRspRepealField_FeePayFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFeePayFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcFeePayFlagType) ((arg1)->FeePayFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_CustFee_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, double _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcCustFeeType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustFeeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustFee = arg2;
  
}


double _wrap_CThostFtdcRspRepealField_CustFee_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcCustFeeType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcCustFeeType) ((arg1)->CustFee);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_BrokerFee_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, double _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFutureFeeType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcFutureFeeType)_swig_go_1; 
  
  if (arg1) (arg1)->BrokerFee = arg2;
  
}


double _wrap_CThostFtdcRspRepealField_BrokerFee_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFutureFeeType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcFutureFeeType) ((arg1)->BrokerFee);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_Message_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Message, (const char *)arg2, 129-1);
      arg1->Message[129-1] = 0;
    } else {
      arg1->Message[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_Message_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Message);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_BankAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankAccType = arg2;
  
}


char _wrap_CThostFtdcRspRepealField_BankAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_DeviceID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_DeviceID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DeviceID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_BankSecuAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankSecuAccType = arg2;
  
}


char _wrap_CThostFtdcRspRepealField_BankSecuAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_BankSecuAcc_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_BankSecuAcc_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSecuAcc);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_BankPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BankPwdFlag = arg2;
  
}


char _wrap_CThostFtdcRspRepealField_BankPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_SecuPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->SecuPwdFlag = arg2;
  
}


char _wrap_CThostFtdcRspRepealField_SecuPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_OperNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_OperNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcRspRepealField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcRspRepealField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_TransferStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTransferStatusType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcTransferStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->TransferStatus = arg2;
  
}


char _wrap_CThostFtdcRspRepealField_TransferStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTransferStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcTransferStatusType) ((arg1)->TransferStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcRspRepealField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspRepealField_LongCustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspRepealField_LongCustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LongCustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcRspRepealField *_wrap_new_CThostFtdcRspRepealField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcRspRepealField *result = 0 ;
  CThostFtdcRspRepealField *_swig_go_result;
  
  
  result = (CThostFtdcRspRepealField *)new CThostFtdcRspRepealField();
  *(CThostFtdcRspRepealField **)&_swig_go_result = (CThostFtdcRspRepealField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcRspRepealField_goctp_ef6abdc493ff8ae2(CThostFtdcRspRepealField *_swig_go_0) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = *(CThostFtdcRspRepealField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcReqQueryAccountField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcReqQueryAccountField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcReqQueryAccountField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcReqQueryAccountField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_CustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_CustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_IdCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdCardType = arg2;
  
}


char _wrap_CThostFtdcReqQueryAccountField_IdCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_CustType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustType = arg2;
  
}


char _wrap_CThostFtdcReqQueryAccountField_CustType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_BankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_BankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_BankPassWord_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_BankPassWord_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankPassWord);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_FutureSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcFutureSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->FutureSerial = arg2;
  
}


intgo _wrap_CThostFtdcReqQueryAccountField_FutureSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcFutureSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcReqQueryAccountField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_VerifyCertNoFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcYesNoIndicatorType)_swig_go_1; 
  
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
  
}


char _wrap_CThostFtdcReqQueryAccountField_VerifyCertNoFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_BankAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankAccType = arg2;
  
}


char _wrap_CThostFtdcReqQueryAccountField_BankAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_DeviceID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_DeviceID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DeviceID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_BankSecuAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankSecuAccType = arg2;
  
}


char _wrap_CThostFtdcReqQueryAccountField_BankSecuAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_BankSecuAcc_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_BankSecuAcc_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSecuAcc);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_BankPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BankPwdFlag = arg2;
  
}


char _wrap_CThostFtdcReqQueryAccountField_BankPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_SecuPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->SecuPwdFlag = arg2;
  
}


char _wrap_CThostFtdcReqQueryAccountField_SecuPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_OperNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_OperNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcReqQueryAccountField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcReqQueryAccountField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryAccountField_LongCustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryAccountField_LongCustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LongCustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcReqQueryAccountField *_wrap_new_CThostFtdcReqQueryAccountField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcReqQueryAccountField *result = 0 ;
  CThostFtdcReqQueryAccountField *_swig_go_result;
  
  
  result = (CThostFtdcReqQueryAccountField *)new CThostFtdcReqQueryAccountField();
  *(CThostFtdcReqQueryAccountField **)&_swig_go_result = (CThostFtdcReqQueryAccountField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcReqQueryAccountField_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryAccountField *_swig_go_0) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  
  arg1 = *(CThostFtdcReqQueryAccountField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcRspQueryAccountField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcRspQueryAccountField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcRspQueryAccountField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcRspQueryAccountField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_CustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_CustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_IdCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdCardType = arg2;
  
}


char _wrap_CThostFtdcRspQueryAccountField_IdCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_CustType_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustType = arg2;
  
}


char _wrap_CThostFtdcRspQueryAccountField_CustType_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_BankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_BankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_BankPassWord_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_BankPassWord_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankPassWord);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_FutureSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcFutureSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->FutureSerial = arg2;
  
}


intgo _wrap_CThostFtdcRspQueryAccountField_FutureSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcFutureSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcRspQueryAccountField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_VerifyCertNoFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcYesNoIndicatorType)_swig_go_1; 
  
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
  
}


char _wrap_CThostFtdcRspQueryAccountField_VerifyCertNoFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_BankAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankAccType = arg2;
  
}


char _wrap_CThostFtdcRspQueryAccountField_BankAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_DeviceID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_DeviceID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DeviceID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_BankSecuAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankSecuAccType = arg2;
  
}


char _wrap_CThostFtdcRspQueryAccountField_BankSecuAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_BankSecuAcc_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_BankSecuAcc_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSecuAcc);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_BankPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BankPwdFlag = arg2;
  
}


char _wrap_CThostFtdcRspQueryAccountField_BankPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_SecuPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->SecuPwdFlag = arg2;
  
}


char _wrap_CThostFtdcRspQueryAccountField_SecuPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_OperNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_OperNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcRspQueryAccountField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcRspQueryAccountField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_BankUseAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeAmountType)_swig_go_1; 
  
  if (arg1) (arg1)->BankUseAmount = arg2;
  
}


double _wrap_CThostFtdcRspQueryAccountField_BankUseAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeAmountType) ((arg1)->BankUseAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_BankFetchAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeAmountType)_swig_go_1; 
  
  if (arg1) (arg1)->BankFetchAmount = arg2;
  
}


double _wrap_CThostFtdcRspQueryAccountField_BankFetchAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeAmountType) ((arg1)->BankFetchAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryAccountField_LongCustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryAccountField_LongCustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LongCustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcRspQueryAccountField *_wrap_new_CThostFtdcRspQueryAccountField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcRspQueryAccountField *result = 0 ;
  CThostFtdcRspQueryAccountField *_swig_go_result;
  
  
  result = (CThostFtdcRspQueryAccountField *)new CThostFtdcRspQueryAccountField();
  *(CThostFtdcRspQueryAccountField **)&_swig_go_result = (CThostFtdcRspQueryAccountField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcRspQueryAccountField_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryAccountField *_swig_go_0) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  
  arg1 = *(CThostFtdcRspQueryAccountField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcFutureSignIOField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcFutureSignIOField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcFutureSignIOField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcFutureSignIOField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcFutureSignIOField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcFutureSignIOField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcFutureSignIOField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcFutureSignIOField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcFutureSignIOField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcFutureSignIOField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcFutureSignIOField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcFutureSignIOField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcFutureSignIOField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcFutureSignIOField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcFutureSignIOField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcFutureSignIOField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcFutureSignIOField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcFutureSignIOField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcFutureSignIOField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcFutureSignIOField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcFutureSignIOField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0, char _swig_go_1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcFutureSignIOField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcFutureSignIOField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcFutureSignIOField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcFutureSignIOField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcFutureSignIOField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcFutureSignIOField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcFutureSignIOField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcFutureSignIOField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcFutureSignIOField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcFutureSignIOField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcFutureSignIOField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcFutureSignIOField_DeviceID_set_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcFutureSignIOField_DeviceID_get_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DeviceID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcFutureSignIOField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcFutureSignIOField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcFutureSignIOField_OperNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcFutureSignIOField_OperNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcFutureSignIOField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcFutureSignIOField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcFutureSignIOField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcFutureSignIOField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcFutureSignIOField *_wrap_new_CThostFtdcFutureSignIOField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcFutureSignIOField *result = 0 ;
  CThostFtdcFutureSignIOField *_swig_go_result;
  
  
  result = (CThostFtdcFutureSignIOField *)new CThostFtdcFutureSignIOField();
  *(CThostFtdcFutureSignIOField **)&_swig_go_result = (CThostFtdcFutureSignIOField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcFutureSignIOField_goctp_ef6abdc493ff8ae2(CThostFtdcFutureSignIOField *_swig_go_0) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  
  arg1 = *(CThostFtdcFutureSignIOField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcRspFutureSignInField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignInField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignInField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignInField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignInField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignInField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignInField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignInField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignInField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignInField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcRspFutureSignInField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcRspFutureSignInField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcRspFutureSignInField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcRspFutureSignInField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignInField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignInField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignInField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_DeviceID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignInField_DeviceID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DeviceID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignInField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_OperNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignInField_OperNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcRspFutureSignInField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcRspFutureSignInField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcRspFutureSignInField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignInField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_PinKey_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->PinKey, (const char *)arg2, 129-1);
      arg1->PinKey[129-1] = 0;
    } else {
      arg1->PinKey[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignInField_PinKey_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->PinKey);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignInField_MacKey_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacKey, (const char *)arg2, 129-1);
      arg1->MacKey[129-1] = 0;
    } else {
      arg1->MacKey[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignInField_MacKey_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacKey);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcRspFutureSignInField *_wrap_new_CThostFtdcRspFutureSignInField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcRspFutureSignInField *result = 0 ;
  CThostFtdcRspFutureSignInField *_swig_go_result;
  
  
  result = (CThostFtdcRspFutureSignInField *)new CThostFtdcRspFutureSignInField();
  *(CThostFtdcRspFutureSignInField **)&_swig_go_result = (CThostFtdcRspFutureSignInField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcRspFutureSignInField_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignInField *_swig_go_0) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  
  arg1 = *(CThostFtdcRspFutureSignInField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcReqFutureSignOutField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqFutureSignOutField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqFutureSignOutField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqFutureSignOutField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqFutureSignOutField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqFutureSignOutField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqFutureSignOutField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqFutureSignOutField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqFutureSignOutField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqFutureSignOutField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqFutureSignOutField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqFutureSignOutField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqFutureSignOutField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqFutureSignOutField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqFutureSignOutField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqFutureSignOutField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqFutureSignOutField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqFutureSignOutField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqFutureSignOutField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcReqFutureSignOutField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqFutureSignOutField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcReqFutureSignOutField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqFutureSignOutField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcReqFutureSignOutField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqFutureSignOutField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcReqFutureSignOutField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqFutureSignOutField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqFutureSignOutField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqFutureSignOutField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqFutureSignOutField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqFutureSignOutField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqFutureSignOutField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqFutureSignOutField_DeviceID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqFutureSignOutField_DeviceID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DeviceID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqFutureSignOutField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqFutureSignOutField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqFutureSignOutField_OperNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqFutureSignOutField_OperNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqFutureSignOutField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcReqFutureSignOutField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqFutureSignOutField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcReqFutureSignOutField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcReqFutureSignOutField *_wrap_new_CThostFtdcReqFutureSignOutField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcReqFutureSignOutField *result = 0 ;
  CThostFtdcReqFutureSignOutField *_swig_go_result;
  
  
  result = (CThostFtdcReqFutureSignOutField *)new CThostFtdcReqFutureSignOutField();
  *(CThostFtdcReqFutureSignOutField **)&_swig_go_result = (CThostFtdcReqFutureSignOutField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcReqFutureSignOutField_goctp_ef6abdc493ff8ae2(CThostFtdcReqFutureSignOutField *_swig_go_0) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  
  arg1 = *(CThostFtdcReqFutureSignOutField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcRspFutureSignOutField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignOutField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignOutField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignOutField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignOutField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignOutField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignOutField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignOutField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignOutField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignOutField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcRspFutureSignOutField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcRspFutureSignOutField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcRspFutureSignOutField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcRspFutureSignOutField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignOutField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignOutField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignOutField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_DeviceID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignOutField_DeviceID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DeviceID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignOutField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_OperNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignOutField_OperNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcRspFutureSignOutField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcRspFutureSignOutField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcRspFutureSignOutField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspFutureSignOutField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspFutureSignOutField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcRspFutureSignOutField *_wrap_new_CThostFtdcRspFutureSignOutField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcRspFutureSignOutField *result = 0 ;
  CThostFtdcRspFutureSignOutField *_swig_go_result;
  
  
  result = (CThostFtdcRspFutureSignOutField *)new CThostFtdcRspFutureSignOutField();
  *(CThostFtdcRspFutureSignOutField **)&_swig_go_result = (CThostFtdcRspFutureSignOutField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcRspFutureSignOutField_goctp_ef6abdc493ff8ae2(CThostFtdcRspFutureSignOutField *_swig_go_0) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  
  arg1 = *(CThostFtdcRspFutureSignOutField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryTradeResultBySerialField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryTradeResultBySerialField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryTradeResultBySerialField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryTradeResultBySerialField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryTradeResultBySerialField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryTradeResultBySerialField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryTradeResultBySerialField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryTradeResultBySerialField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryTradeResultBySerialField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcReqQueryTradeResultBySerialField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcReqQueryTradeResultBySerialField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcReqQueryTradeResultBySerialField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_Reference_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->Reference = arg2;
  
}


intgo _wrap_CThostFtdcReqQueryTradeResultBySerialField_Reference_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->Reference);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssureType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcInstitutionTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstitutionTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->RefrenceIssureType = arg2;
  
}


char _wrap_CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssureType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcInstitutionTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (TThostFtdcInstitutionTypeType) ((arg1)->RefrenceIssureType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssure_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->RefrenceIssure, (const char *)arg2, 36-1);
      arg1->RefrenceIssure[36-1] = 0;
    } else {
      arg1->RefrenceIssure[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssure_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->RefrenceIssure);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_CustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryTradeResultBySerialField_CustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_IdCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdCardType = arg2;
  
}


char _wrap_CThostFtdcReqQueryTradeResultBySerialField_IdCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryTradeResultBySerialField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_CustType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustType = arg2;
  
}


char _wrap_CThostFtdcReqQueryTradeResultBySerialField_CustType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcCustTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_BankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryTradeResultBySerialField_BankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_BankPassWord_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryTradeResultBySerialField_BankPassWord_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankPassWord);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryTradeResultBySerialField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryTradeResultBySerialField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryTradeResultBySerialField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_TradeAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, double _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeAmountType)_swig_go_1; 
  
  if (arg1) (arg1)->TradeAmount = arg2;
  
}


double _wrap_CThostFtdcReqQueryTradeResultBySerialField_TradeAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcTradeAmountType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeAmountType) ((arg1)->TradeAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryTradeResultBySerialField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqQueryTradeResultBySerialField_LongCustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqQueryTradeResultBySerialField_LongCustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LongCustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcReqQueryTradeResultBySerialField *_wrap_new_CThostFtdcReqQueryTradeResultBySerialField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcReqQueryTradeResultBySerialField *result = 0 ;
  CThostFtdcReqQueryTradeResultBySerialField *_swig_go_result;
  
  
  result = (CThostFtdcReqQueryTradeResultBySerialField *)new CThostFtdcReqQueryTradeResultBySerialField();
  *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_result = (CThostFtdcReqQueryTradeResultBySerialField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcReqQueryTradeResultBySerialField_goctp_ef6abdc493ff8ae2(CThostFtdcReqQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  
  arg1 = *(CThostFtdcReqQueryTradeResultBySerialField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryTradeResultBySerialField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryTradeResultBySerialField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryTradeResultBySerialField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryTradeResultBySerialField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryTradeResultBySerialField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryTradeResultBySerialField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryTradeResultBySerialField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryTradeResultBySerialField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryTradeResultBySerialField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcRspQueryTradeResultBySerialField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcRspQueryTradeResultBySerialField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcRspQueryTradeResultBySerialField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcRspQueryTradeResultBySerialField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryTradeResultBySerialField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_Reference_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->Reference = arg2;
  
}


intgo _wrap_CThostFtdcRspQueryTradeResultBySerialField_Reference_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->Reference);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssureType_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcInstitutionTypeType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstitutionTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->RefrenceIssureType = arg2;
  
}


char _wrap_CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssureType_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcInstitutionTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (TThostFtdcInstitutionTypeType) ((arg1)->RefrenceIssureType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssure_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->RefrenceIssure, (const char *)arg2, 36-1);
      arg1->RefrenceIssure[36-1] = 0;
    } else {
      arg1->RefrenceIssure[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssure_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->RefrenceIssure);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_OriginReturnCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OriginReturnCode, (const char *)arg2, 7-1);
      arg1->OriginReturnCode[7-1] = 0;
    } else {
      arg1->OriginReturnCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryTradeResultBySerialField_OriginReturnCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OriginReturnCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_OriginDescrInfoForReturnCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OriginDescrInfoForReturnCode, (const char *)arg2, 129-1);
      arg1->OriginDescrInfoForReturnCode[129-1] = 0;
    } else {
      arg1->OriginDescrInfoForReturnCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryTradeResultBySerialField_OriginDescrInfoForReturnCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OriginDescrInfoForReturnCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_BankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryTradeResultBySerialField_BankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_BankPassWord_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryTradeResultBySerialField_BankPassWord_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankPassWord);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryTradeResultBySerialField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryTradeResultBySerialField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryTradeResultBySerialField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_TradeAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, double _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeAmountType)_swig_go_1; 
  
  if (arg1) (arg1)->TradeAmount = arg2;
  
}


double _wrap_CThostFtdcRspQueryTradeResultBySerialField_TradeAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcTradeAmountType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeAmountType) ((arg1)->TradeAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspQueryTradeResultBySerialField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspQueryTradeResultBySerialField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcRspQueryTradeResultBySerialField *_wrap_new_CThostFtdcRspQueryTradeResultBySerialField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcRspQueryTradeResultBySerialField *result = 0 ;
  CThostFtdcRspQueryTradeResultBySerialField *_swig_go_result;
  
  
  result = (CThostFtdcRspQueryTradeResultBySerialField *)new CThostFtdcRspQueryTradeResultBySerialField();
  *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_result = (CThostFtdcRspQueryTradeResultBySerialField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcRspQueryTradeResultBySerialField_goctp_ef6abdc493ff8ae2(CThostFtdcRspQueryTradeResultBySerialField *_swig_go_0) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  
  arg1 = *(CThostFtdcRspQueryTradeResultBySerialField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcReqDayEndFileReadyField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqDayEndFileReadyField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqDayEndFileReadyField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqDayEndFileReadyField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqDayEndFileReadyField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqDayEndFileReadyField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqDayEndFileReadyField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqDayEndFileReadyField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqDayEndFileReadyField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqDayEndFileReadyField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqDayEndFileReadyField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqDayEndFileReadyField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqDayEndFileReadyField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqDayEndFileReadyField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqDayEndFileReadyField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqDayEndFileReadyField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqDayEndFileReadyField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqDayEndFileReadyField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqDayEndFileReadyField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcReqDayEndFileReadyField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqDayEndFileReadyField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcReqDayEndFileReadyField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqDayEndFileReadyField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcReqDayEndFileReadyField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqDayEndFileReadyField_FileBusinessCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcFileBusinessCodeType arg2 ;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  arg2 = (TThostFtdcFileBusinessCodeType)_swig_go_1; 
  
  if (arg1) (arg1)->FileBusinessCode = arg2;
  
}


char _wrap_CThostFtdcReqDayEndFileReadyField_FileBusinessCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcFileBusinessCodeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  result = (TThostFtdcFileBusinessCodeType) ((arg1)->FileBusinessCode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqDayEndFileReadyField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqDayEndFileReadyField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcReqDayEndFileReadyField *_wrap_new_CThostFtdcReqDayEndFileReadyField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcReqDayEndFileReadyField *result = 0 ;
  CThostFtdcReqDayEndFileReadyField *_swig_go_result;
  
  
  result = (CThostFtdcReqDayEndFileReadyField *)new CThostFtdcReqDayEndFileReadyField();
  *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_result = (CThostFtdcReqDayEndFileReadyField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcReqDayEndFileReadyField_goctp_ef6abdc493ff8ae2(CThostFtdcReqDayEndFileReadyField *_swig_go_0) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  
  arg1 = *(CThostFtdcReqDayEndFileReadyField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcReturnResultField_ReturnCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReturnResultField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReturnResultField *arg1 = (CThostFtdcReturnResultField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReturnResultField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ReturnCode, (const char *)arg2, 7-1);
      arg1->ReturnCode[7-1] = 0;
    } else {
      arg1->ReturnCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReturnResultField_ReturnCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReturnResultField *_swig_go_0) {
  CThostFtdcReturnResultField *arg1 = (CThostFtdcReturnResultField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReturnResultField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ReturnCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReturnResultField_DescrInfoForReturnCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReturnResultField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReturnResultField *arg1 = (CThostFtdcReturnResultField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReturnResultField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DescrInfoForReturnCode, (const char *)arg2, 129-1);
      arg1->DescrInfoForReturnCode[129-1] = 0;
    } else {
      arg1->DescrInfoForReturnCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReturnResultField_DescrInfoForReturnCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReturnResultField *_swig_go_0) {
  CThostFtdcReturnResultField *arg1 = (CThostFtdcReturnResultField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReturnResultField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DescrInfoForReturnCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcReturnResultField *_wrap_new_CThostFtdcReturnResultField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcReturnResultField *result = 0 ;
  CThostFtdcReturnResultField *_swig_go_result;
  
  
  result = (CThostFtdcReturnResultField *)new CThostFtdcReturnResultField();
  *(CThostFtdcReturnResultField **)&_swig_go_result = (CThostFtdcReturnResultField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcReturnResultField_goctp_ef6abdc493ff8ae2(CThostFtdcReturnResultField *_swig_go_0) {
  CThostFtdcReturnResultField *arg1 = (CThostFtdcReturnResultField *) 0 ;
  
  arg1 = *(CThostFtdcReturnResultField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcVerifyFuturePasswordField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyFuturePasswordField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyFuturePasswordField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyFuturePasswordField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyFuturePasswordField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyFuturePasswordField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyFuturePasswordField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyFuturePasswordField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyFuturePasswordField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyFuturePasswordField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcVerifyFuturePasswordField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0, char _swig_go_1) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcVerifyFuturePasswordField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcVerifyFuturePasswordField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyFuturePasswordField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyFuturePasswordField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordField_BankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyFuturePasswordField_BankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordField_BankPassWord_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyFuturePasswordField_BankPassWord_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankPassWord);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcVerifyFuturePasswordField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcVerifyFuturePasswordField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyFuturePasswordField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcVerifyFuturePasswordField *_wrap_new_CThostFtdcVerifyFuturePasswordField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcVerifyFuturePasswordField *result = 0 ;
  CThostFtdcVerifyFuturePasswordField *_swig_go_result;
  
  
  result = (CThostFtdcVerifyFuturePasswordField *)new CThostFtdcVerifyFuturePasswordField();
  *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_result = (CThostFtdcVerifyFuturePasswordField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcVerifyFuturePasswordField_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcVerifyCustInfoField_CustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyCustInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyCustInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyCustInfoField_CustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyCustInfoField *_swig_go_0) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyCustInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyCustInfoField_IdCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyCustInfoField *_swig_go_0, char _swig_go_1) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcVerifyCustInfoField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdCardType = arg2;
  
}


char _wrap_CThostFtdcVerifyCustInfoField_IdCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyCustInfoField *_swig_go_0) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyCustInfoField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyCustInfoField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyCustInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyCustInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyCustInfoField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyCustInfoField *_swig_go_0) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyCustInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyCustInfoField_CustType_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyCustInfoField *_swig_go_0, char _swig_go_1) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = *(CThostFtdcVerifyCustInfoField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustType = arg2;
  
}


char _wrap_CThostFtdcVerifyCustInfoField_CustType_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyCustInfoField *_swig_go_0) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  TThostFtdcCustTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyCustInfoField **)&_swig_go_0; 
  
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyCustInfoField_LongCustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyCustInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyCustInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyCustInfoField_LongCustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyCustInfoField *_swig_go_0) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyCustInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LongCustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcVerifyCustInfoField *_wrap_new_CThostFtdcVerifyCustInfoField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcVerifyCustInfoField *result = 0 ;
  CThostFtdcVerifyCustInfoField *_swig_go_result;
  
  
  result = (CThostFtdcVerifyCustInfoField *)new CThostFtdcVerifyCustInfoField();
  *(CThostFtdcVerifyCustInfoField **)&_swig_go_result = (CThostFtdcVerifyCustInfoField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcVerifyCustInfoField_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyCustInfoField *_swig_go_0) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  
  arg1 = *(CThostFtdcVerifyCustInfoField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcVerifyFuturePasswordAndCustInfoField_CustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordAndCustInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordAndCustInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyFuturePasswordAndCustInfoField_CustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordAndCustInfoField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordAndCustInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordAndCustInfoField_IdCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordAndCustInfoField *_swig_go_0, char _swig_go_1) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordAndCustInfoField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdCardType = arg2;
  
}


char _wrap_CThostFtdcVerifyFuturePasswordAndCustInfoField_IdCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordAndCustInfoField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordAndCustInfoField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordAndCustInfoField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordAndCustInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordAndCustInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyFuturePasswordAndCustInfoField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordAndCustInfoField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordAndCustInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordAndCustInfoField_CustType_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordAndCustInfoField *_swig_go_0, char _swig_go_1) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordAndCustInfoField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustType = arg2;
  
}


char _wrap_CThostFtdcVerifyFuturePasswordAndCustInfoField_CustType_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordAndCustInfoField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  TThostFtdcCustTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordAndCustInfoField **)&_swig_go_0; 
  
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordAndCustInfoField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordAndCustInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordAndCustInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyFuturePasswordAndCustInfoField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordAndCustInfoField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordAndCustInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordAndCustInfoField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordAndCustInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordAndCustInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyFuturePasswordAndCustInfoField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordAndCustInfoField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordAndCustInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordAndCustInfoField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordAndCustInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordAndCustInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyFuturePasswordAndCustInfoField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordAndCustInfoField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordAndCustInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcVerifyFuturePasswordAndCustInfoField_LongCustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordAndCustInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordAndCustInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcVerifyFuturePasswordAndCustInfoField_LongCustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordAndCustInfoField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordAndCustInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LongCustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcVerifyFuturePasswordAndCustInfoField *_wrap_new_CThostFtdcVerifyFuturePasswordAndCustInfoField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *result = 0 ;
  CThostFtdcVerifyFuturePasswordAndCustInfoField *_swig_go_result;
  
  
  result = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)new CThostFtdcVerifyFuturePasswordAndCustInfoField();
  *(CThostFtdcVerifyFuturePasswordAndCustInfoField **)&_swig_go_result = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcVerifyFuturePasswordAndCustInfoField_goctp_ef6abdc493ff8ae2(CThostFtdcVerifyFuturePasswordAndCustInfoField *_swig_go_0) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  
  arg1 = *(CThostFtdcVerifyFuturePasswordAndCustInfoField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcDepositResultInformField_DepositSeqNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepositResultInformField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcDepositResultInformField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DepositSeqNo, (const char *)arg2, 15-1);
      arg1->DepositSeqNo[15-1] = 0;
    } else {
      arg1->DepositSeqNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcDepositResultInformField_DepositSeqNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepositResultInformField *_swig_go_0) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcDepositResultInformField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DepositSeqNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepositResultInformField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepositResultInformField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcDepositResultInformField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcDepositResultInformField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepositResultInformField *_swig_go_0) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcDepositResultInformField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepositResultInformField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepositResultInformField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcDepositResultInformField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcDepositResultInformField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepositResultInformField *_swig_go_0) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcDepositResultInformField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepositResultInformField_Deposit_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepositResultInformField *_swig_go_0, double _swig_go_1) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcDepositResultInformField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Deposit = arg2;
  
}


double _wrap_CThostFtdcDepositResultInformField_Deposit_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepositResultInformField *_swig_go_0) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcDepositResultInformField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Deposit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepositResultInformField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepositResultInformField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcDepositResultInformField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcDepositResultInformField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepositResultInformField *_swig_go_0) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcDepositResultInformField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepositResultInformField_ReturnCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepositResultInformField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcDepositResultInformField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ReturnCode, (const char *)arg2, 7-1);
      arg1->ReturnCode[7-1] = 0;
    } else {
      arg1->ReturnCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcDepositResultInformField_ReturnCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepositResultInformField *_swig_go_0) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcDepositResultInformField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ReturnCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcDepositResultInformField_DescrInfoForReturnCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcDepositResultInformField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcDepositResultInformField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DescrInfoForReturnCode, (const char *)arg2, 129-1);
      arg1->DescrInfoForReturnCode[129-1] = 0;
    } else {
      arg1->DescrInfoForReturnCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcDepositResultInformField_DescrInfoForReturnCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcDepositResultInformField *_swig_go_0) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcDepositResultInformField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DescrInfoForReturnCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcDepositResultInformField *_wrap_new_CThostFtdcDepositResultInformField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcDepositResultInformField *result = 0 ;
  CThostFtdcDepositResultInformField *_swig_go_result;
  
  
  result = (CThostFtdcDepositResultInformField *)new CThostFtdcDepositResultInformField();
  *(CThostFtdcDepositResultInformField **)&_swig_go_result = (CThostFtdcDepositResultInformField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcDepositResultInformField_goctp_ef6abdc493ff8ae2(CThostFtdcDepositResultInformField *_swig_go_0) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  
  arg1 = *(CThostFtdcDepositResultInformField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcReqSyncKeyField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqSyncKeyField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqSyncKeyField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqSyncKeyField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqSyncKeyField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqSyncKeyField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqSyncKeyField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqSyncKeyField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqSyncKeyField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqSyncKeyField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqSyncKeyField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqSyncKeyField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqSyncKeyField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqSyncKeyField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqSyncKeyField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqSyncKeyField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqSyncKeyField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqSyncKeyField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqSyncKeyField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcReqSyncKeyField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqSyncKeyField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcReqSyncKeyField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqSyncKeyField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcReqSyncKeyField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqSyncKeyField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcReqSyncKeyField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqSyncKeyField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqSyncKeyField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqSyncKeyField_Message_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Message, (const char *)arg2, 129-1);
      arg1->Message[129-1] = 0;
    } else {
      arg1->Message[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqSyncKeyField_Message_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Message);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqSyncKeyField_DeviceID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqSyncKeyField_DeviceID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DeviceID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqSyncKeyField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqSyncKeyField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqSyncKeyField_OperNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReqSyncKeyField_OperNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqSyncKeyField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcReqSyncKeyField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReqSyncKeyField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcReqSyncKeyField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcReqSyncKeyField *_wrap_new_CThostFtdcReqSyncKeyField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcReqSyncKeyField *result = 0 ;
  CThostFtdcReqSyncKeyField *_swig_go_result;
  
  
  result = (CThostFtdcReqSyncKeyField *)new CThostFtdcReqSyncKeyField();
  *(CThostFtdcReqSyncKeyField **)&_swig_go_result = (CThostFtdcReqSyncKeyField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcReqSyncKeyField_goctp_ef6abdc493ff8ae2(CThostFtdcReqSyncKeyField *_swig_go_0) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  
  arg1 = *(CThostFtdcReqSyncKeyField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcRspSyncKeyField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspSyncKeyField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspSyncKeyField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspSyncKeyField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspSyncKeyField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspSyncKeyField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspSyncKeyField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspSyncKeyField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspSyncKeyField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspSyncKeyField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspSyncKeyField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspSyncKeyField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspSyncKeyField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspSyncKeyField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspSyncKeyField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspSyncKeyField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspSyncKeyField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspSyncKeyField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspSyncKeyField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcRspSyncKeyField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspSyncKeyField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, char _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcRspSyncKeyField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspSyncKeyField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcRspSyncKeyField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspSyncKeyField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcRspSyncKeyField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspSyncKeyField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspSyncKeyField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspSyncKeyField_Message_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Message, (const char *)arg2, 129-1);
      arg1->Message[129-1] = 0;
    } else {
      arg1->Message[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspSyncKeyField_Message_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Message);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspSyncKeyField_DeviceID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspSyncKeyField_DeviceID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DeviceID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspSyncKeyField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspSyncKeyField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspSyncKeyField_OperNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspSyncKeyField_OperNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspSyncKeyField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcRspSyncKeyField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspSyncKeyField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcRspSyncKeyField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspSyncKeyField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcRspSyncKeyField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcRspSyncKeyField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcRspSyncKeyField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcRspSyncKeyField *_wrap_new_CThostFtdcRspSyncKeyField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcRspSyncKeyField *result = 0 ;
  CThostFtdcRspSyncKeyField *_swig_go_result;
  
  
  result = (CThostFtdcRspSyncKeyField *)new CThostFtdcRspSyncKeyField();
  *(CThostFtdcRspSyncKeyField **)&_swig_go_result = (CThostFtdcRspSyncKeyField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcRspSyncKeyField_goctp_ef6abdc493ff8ae2(CThostFtdcRspSyncKeyField *_swig_go_0) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  
  arg1 = *(CThostFtdcRspSyncKeyField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcNotifyQueryAccountField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcNotifyQueryAccountField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcNotifyQueryAccountField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcNotifyQueryAccountField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_CustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_CustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_IdCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdCardType = arg2;
  
}


char _wrap_CThostFtdcNotifyQueryAccountField_IdCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_CustType_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustType = arg2;
  
}


char _wrap_CThostFtdcNotifyQueryAccountField_CustType_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_BankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_BankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_BankPassWord_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_BankPassWord_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankPassWord);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_FutureSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcFutureSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->FutureSerial = arg2;
  
}


intgo _wrap_CThostFtdcNotifyQueryAccountField_FutureSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcFutureSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcNotifyQueryAccountField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_VerifyCertNoFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcYesNoIndicatorType)_swig_go_1; 
  
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
  
}


char _wrap_CThostFtdcNotifyQueryAccountField_VerifyCertNoFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_BankAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankAccType = arg2;
  
}


char _wrap_CThostFtdcNotifyQueryAccountField_BankAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_DeviceID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_DeviceID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DeviceID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_BankSecuAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankSecuAccType = arg2;
  
}


char _wrap_CThostFtdcNotifyQueryAccountField_BankSecuAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_BankSecuAcc_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_BankSecuAcc_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSecuAcc);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_BankPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BankPwdFlag = arg2;
  
}


char _wrap_CThostFtdcNotifyQueryAccountField_BankPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_SecuPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->SecuPwdFlag = arg2;
  
}


char _wrap_CThostFtdcNotifyQueryAccountField_SecuPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_OperNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_OperNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcNotifyQueryAccountField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcNotifyQueryAccountField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_BankUseAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeAmountType)_swig_go_1; 
  
  if (arg1) (arg1)->BankUseAmount = arg2;
  
}


double _wrap_CThostFtdcNotifyQueryAccountField_BankUseAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeAmountType) ((arg1)->BankUseAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_BankFetchAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, double _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeAmountType)_swig_go_1; 
  
  if (arg1) (arg1)->BankFetchAmount = arg2;
  
}


double _wrap_CThostFtdcNotifyQueryAccountField_BankFetchAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeAmountType) ((arg1)->BankFetchAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcNotifyQueryAccountField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyQueryAccountField_LongCustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyQueryAccountField_LongCustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LongCustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcNotifyQueryAccountField *_wrap_new_CThostFtdcNotifyQueryAccountField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcNotifyQueryAccountField *result = 0 ;
  CThostFtdcNotifyQueryAccountField *_swig_go_result;
  
  
  result = (CThostFtdcNotifyQueryAccountField *)new CThostFtdcNotifyQueryAccountField();
  *(CThostFtdcNotifyQueryAccountField **)&_swig_go_result = (CThostFtdcNotifyQueryAccountField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcNotifyQueryAccountField_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyQueryAccountField *_swig_go_0) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  
  arg1 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTransferSerialField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcPlateSerialType arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcPlateSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcTransferSerialField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcPlateSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (TThostFtdcPlateSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferSerialField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferSerialField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferSerialField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferSerialField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcTransferSerialField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferSerialField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferSerialField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_BankAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, char _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankAccType = arg2;
  
}


char _wrap_CThostFtdcTransferSerialField_BankAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_BankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferSerialField_BankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferSerialField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferSerialField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferSerialField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_FutureAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, char _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcFutureAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcFutureAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->FutureAccType = arg2;
  
}


char _wrap_CThostFtdcTransferSerialField_FutureAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcFutureAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (TThostFtdcFutureAccTypeType) ((arg1)->FutureAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferSerialField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_InvestorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferSerialField_InvestorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->InvestorID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_FutureSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcFutureSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->FutureSerial = arg2;
  
}


intgo _wrap_CThostFtdcTransferSerialField_FutureSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcFutureSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_IdCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, char _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdCardType = arg2;
  
}


char _wrap_CThostFtdcTransferSerialField_IdCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferSerialField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferSerialField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_TradeAmount_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcTradeAmountType)_swig_go_1; 
  
  if (arg1) (arg1)->TradeAmount = arg2;
  
}


double _wrap_CThostFtdcTransferSerialField_TradeAmount_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcTradeAmountType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (TThostFtdcTradeAmountType) ((arg1)->TradeAmount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_CustFee_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcCustFeeType arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustFeeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustFee = arg2;
  
}


double _wrap_CThostFtdcTransferSerialField_CustFee_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcCustFeeType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (TThostFtdcCustFeeType) ((arg1)->CustFee);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_BrokerFee_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcFutureFeeType arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcFutureFeeType)_swig_go_1; 
  
  if (arg1) (arg1)->BrokerFee = arg2;
  
}


double _wrap_CThostFtdcTransferSerialField_BrokerFee_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcFutureFeeType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (TThostFtdcFutureFeeType) ((arg1)->BrokerFee);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_AvailabilityFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, char _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcAvailabilityFlagType arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcAvailabilityFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->AvailabilityFlag = arg2;
  
}


char _wrap_CThostFtdcTransferSerialField_AvailabilityFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcAvailabilityFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (TThostFtdcAvailabilityFlagType) ((arg1)->AvailabilityFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_OperatorCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperatorCode, (const char *)arg2, 17-1);
      arg1->OperatorCode[17-1] = 0;
    } else {
      arg1->OperatorCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferSerialField_OperatorCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperatorCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_BankNewAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankNewAccount, (const char *)arg2, 41-1);
      arg1->BankNewAccount[41-1] = 0;
    } else {
      arg1->BankNewAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferSerialField_BankNewAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankNewAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcTransferSerialField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTransferSerialField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTransferSerialField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcTransferSerialField *_wrap_new_CThostFtdcTransferSerialField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTransferSerialField *result = 0 ;
  CThostFtdcTransferSerialField *_swig_go_result;
  
  
  result = (CThostFtdcTransferSerialField *)new CThostFtdcTransferSerialField();
  *(CThostFtdcTransferSerialField **)&_swig_go_result = (CThostFtdcTransferSerialField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTransferSerialField_goctp_ef6abdc493ff8ae2(CThostFtdcTransferSerialField *_swig_go_0) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  
  arg1 = *(CThostFtdcTransferSerialField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryTransferSerialField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTransferSerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTransferSerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTransferSerialField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTransferSerialField *_swig_go_0) {
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTransferSerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryTransferSerialField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTransferSerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTransferSerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTransferSerialField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTransferSerialField *_swig_go_0) {
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTransferSerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryTransferSerialField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTransferSerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTransferSerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTransferSerialField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTransferSerialField *_swig_go_0) {
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTransferSerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryTransferSerialField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryTransferSerialField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryTransferSerialField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryTransferSerialField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryTransferSerialField *_swig_go_0) {
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryTransferSerialField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryTransferSerialField *_wrap_new_CThostFtdcQryTransferSerialField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryTransferSerialField *result = 0 ;
  CThostFtdcQryTransferSerialField *_swig_go_result;
  
  
  result = (CThostFtdcQryTransferSerialField *)new CThostFtdcQryTransferSerialField();
  *(CThostFtdcQryTransferSerialField **)&_swig_go_result = (CThostFtdcQryTransferSerialField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryTransferSerialField_goctp_ef6abdc493ff8ae2(CThostFtdcQryTransferSerialField *_swig_go_0) {
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  
  arg1 = *(CThostFtdcQryTransferSerialField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcNotifyFutureSignInField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignInField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignInField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignInField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignInField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignInField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignInField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignInField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignInField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignInField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcNotifyFutureSignInField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, char _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcNotifyFutureSignInField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcNotifyFutureSignInField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcNotifyFutureSignInField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignInField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignInField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignInField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_DeviceID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignInField_DeviceID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DeviceID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignInField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_OperNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignInField_OperNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcNotifyFutureSignInField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcNotifyFutureSignInField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcNotifyFutureSignInField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignInField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_PinKey_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->PinKey, (const char *)arg2, 129-1);
      arg1->PinKey[129-1] = 0;
    } else {
      arg1->PinKey[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignInField_PinKey_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->PinKey);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignInField_MacKey_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MacKey, (const char *)arg2, 129-1);
      arg1->MacKey[129-1] = 0;
    } else {
      arg1->MacKey[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignInField_MacKey_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MacKey);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcNotifyFutureSignInField *_wrap_new_CThostFtdcNotifyFutureSignInField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcNotifyFutureSignInField *result = 0 ;
  CThostFtdcNotifyFutureSignInField *_swig_go_result;
  
  
  result = (CThostFtdcNotifyFutureSignInField *)new CThostFtdcNotifyFutureSignInField();
  *(CThostFtdcNotifyFutureSignInField **)&_swig_go_result = (CThostFtdcNotifyFutureSignInField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcNotifyFutureSignInField_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignInField *_swig_go_0) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignInField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcNotifyFutureSignOutField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignOutField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignOutField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignOutField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignOutField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignOutField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignOutField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignOutField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignOutField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignOutField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcNotifyFutureSignOutField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, char _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcNotifyFutureSignOutField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcNotifyFutureSignOutField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcNotifyFutureSignOutField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignOutField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignOutField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignOutField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_DeviceID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignOutField_DeviceID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DeviceID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignOutField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_OperNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignOutField_OperNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcNotifyFutureSignOutField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcNotifyFutureSignOutField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcNotifyFutureSignOutField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifyFutureSignOutField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifyFutureSignOutField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcNotifyFutureSignOutField *_wrap_new_CThostFtdcNotifyFutureSignOutField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcNotifyFutureSignOutField *result = 0 ;
  CThostFtdcNotifyFutureSignOutField *_swig_go_result;
  
  
  result = (CThostFtdcNotifyFutureSignOutField *)new CThostFtdcNotifyFutureSignOutField();
  *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_result = (CThostFtdcNotifyFutureSignOutField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcNotifyFutureSignOutField_goctp_ef6abdc493ff8ae2(CThostFtdcNotifyFutureSignOutField *_swig_go_0) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  
  arg1 = *(CThostFtdcNotifyFutureSignOutField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcNotifySyncKeyField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifySyncKeyField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifySyncKeyField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifySyncKeyField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifySyncKeyField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifySyncKeyField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifySyncKeyField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifySyncKeyField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifySyncKeyField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifySyncKeyField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifySyncKeyField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifySyncKeyField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifySyncKeyField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifySyncKeyField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifySyncKeyField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifySyncKeyField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifySyncKeyField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifySyncKeyField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifySyncKeyField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcNotifySyncKeyField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifySyncKeyField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, char _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcNotifySyncKeyField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifySyncKeyField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcNotifySyncKeyField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifySyncKeyField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcNotifySyncKeyField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifySyncKeyField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifySyncKeyField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifySyncKeyField_Message_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Message, (const char *)arg2, 129-1);
      arg1->Message[129-1] = 0;
    } else {
      arg1->Message[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifySyncKeyField_Message_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Message);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifySyncKeyField_DeviceID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifySyncKeyField_DeviceID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DeviceID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifySyncKeyField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifySyncKeyField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifySyncKeyField_OperNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifySyncKeyField_OperNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifySyncKeyField_RequestID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcRequestIDType)_swig_go_1; 
  
  if (arg1) (arg1)->RequestID = arg2;
  
}


intgo _wrap_CThostFtdcNotifySyncKeyField_RequestID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcRequestIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifySyncKeyField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcNotifySyncKeyField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifySyncKeyField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcNotifySyncKeyField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcNotifySyncKeyField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcNotifySyncKeyField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcNotifySyncKeyField *_wrap_new_CThostFtdcNotifySyncKeyField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcNotifySyncKeyField *result = 0 ;
  CThostFtdcNotifySyncKeyField *_swig_go_result;
  
  
  result = (CThostFtdcNotifySyncKeyField *)new CThostFtdcNotifySyncKeyField();
  *(CThostFtdcNotifySyncKeyField **)&_swig_go_result = (CThostFtdcNotifySyncKeyField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcNotifySyncKeyField_goctp_ef6abdc493ff8ae2(CThostFtdcNotifySyncKeyField *_swig_go_0) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  
  arg1 = *(CThostFtdcNotifySyncKeyField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryAccountregisterField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryAccountregisterField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryAccountregisterField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryAccountregisterField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryAccountregisterField *_swig_go_0) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryAccountregisterField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryAccountregisterField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryAccountregisterField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryAccountregisterField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryAccountregisterField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryAccountregisterField *_swig_go_0) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryAccountregisterField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryAccountregisterField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryAccountregisterField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryAccountregisterField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryAccountregisterField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryAccountregisterField *_swig_go_0) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryAccountregisterField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryAccountregisterField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryAccountregisterField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryAccountregisterField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryAccountregisterField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryAccountregisterField *_swig_go_0) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryAccountregisterField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryAccountregisterField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryAccountregisterField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryAccountregisterField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryAccountregisterField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryAccountregisterField *_swig_go_0) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryAccountregisterField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryAccountregisterField *_wrap_new_CThostFtdcQryAccountregisterField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryAccountregisterField *result = 0 ;
  CThostFtdcQryAccountregisterField *_swig_go_result;
  
  
  result = (CThostFtdcQryAccountregisterField *)new CThostFtdcQryAccountregisterField();
  *(CThostFtdcQryAccountregisterField **)&_swig_go_result = (CThostFtdcQryAccountregisterField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryAccountregisterField_goctp_ef6abdc493ff8ae2(CThostFtdcQryAccountregisterField *_swig_go_0) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  
  arg1 = *(CThostFtdcQryAccountregisterField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcAccountregisterField_TradeDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDay, (const char *)arg2, 9-1);
      arg1->TradeDay[9-1] = 0;
    } else {
      arg1->TradeDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcAccountregisterField_TradeDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcAccountregisterField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcAccountregisterField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcAccountregisterField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcAccountregisterField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcAccountregisterField_BankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcAccountregisterField_BankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcAccountregisterField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcAccountregisterField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcAccountregisterField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcAccountregisterField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcAccountregisterField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcAccountregisterField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcAccountregisterField_IdCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0, char _swig_go_1) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdCardType = arg2;
  
}


char _wrap_CThostFtdcAccountregisterField_IdCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcAccountregisterField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcAccountregisterField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcAccountregisterField_CustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcAccountregisterField_CustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcAccountregisterField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcAccountregisterField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcAccountregisterField_OpenOrDestroy_set_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0, char _swig_go_1) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcOpenOrDestroyType arg2 ;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  arg2 = (TThostFtdcOpenOrDestroyType)_swig_go_1; 
  
  if (arg1) (arg1)->OpenOrDestroy = arg2;
  
}


char _wrap_CThostFtdcAccountregisterField_OpenOrDestroy_get_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcOpenOrDestroyType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  result = (TThostFtdcOpenOrDestroyType) ((arg1)->OpenOrDestroy);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcAccountregisterField_RegDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->RegDate, (const char *)arg2, 9-1);
      arg1->RegDate[9-1] = 0;
    } else {
      arg1->RegDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcAccountregisterField_RegDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->RegDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcAccountregisterField_OutDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OutDate, (const char *)arg2, 9-1);
      arg1->OutDate[9-1] = 0;
    } else {
      arg1->OutDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcAccountregisterField_OutDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OutDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcAccountregisterField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcAccountregisterField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcAccountregisterField_CustType_set_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0, char _swig_go_1) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustType = arg2;
  
}


char _wrap_CThostFtdcAccountregisterField_CustType_get_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcCustTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcAccountregisterField_BankAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0, char _swig_go_1) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankAccType = arg2;
  
}


char _wrap_CThostFtdcAccountregisterField_BankAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcAccountregisterField_LongCustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcAccountregisterField_LongCustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LongCustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcAccountregisterField *_wrap_new_CThostFtdcAccountregisterField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcAccountregisterField *result = 0 ;
  CThostFtdcAccountregisterField *_swig_go_result;
  
  
  result = (CThostFtdcAccountregisterField *)new CThostFtdcAccountregisterField();
  *(CThostFtdcAccountregisterField **)&_swig_go_result = (CThostFtdcAccountregisterField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcAccountregisterField_goctp_ef6abdc493ff8ae2(CThostFtdcAccountregisterField *_swig_go_0) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  
  arg1 = *(CThostFtdcAccountregisterField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcOpenAccountField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcOpenAccountField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcOpenAccountField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcOpenAccountField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_CustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_CustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_IdCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdCardType = arg2;
  
}


char _wrap_CThostFtdcOpenAccountField_IdCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_Gender_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcGenderType)_swig_go_1; 
  
  if (arg1) (arg1)->Gender = arg2;
  
}


char _wrap_CThostFtdcOpenAccountField_Gender_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcGenderType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_CountryCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_CountryCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CountryCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_CustType_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustType = arg2;
  
}


char _wrap_CThostFtdcOpenAccountField_CustType_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_Address_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_Address_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Address);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_ZipCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_ZipCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ZipCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_Telephone_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_Telephone_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Telephone);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_MobilePhone_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_MobilePhone_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MobilePhone);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_Fax_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_Fax_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Fax);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_EMail_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_EMail_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->EMail);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_MoneyAccountStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyAccountStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
  
}


char _wrap_CThostFtdcOpenAccountField_MoneyAccountStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_BankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_BankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_BankPassWord_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_BankPassWord_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankPassWord);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcOpenAccountField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_VerifyCertNoFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcYesNoIndicatorType)_swig_go_1; 
  
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
  
}


char _wrap_CThostFtdcOpenAccountField_VerifyCertNoFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_CashExchangeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcCashExchangeCodeType)_swig_go_1; 
  
  if (arg1) (arg1)->CashExchangeCode = arg2;
  
}


char _wrap_CThostFtdcOpenAccountField_CashExchangeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcCashExchangeCodeType) ((arg1)->CashExchangeCode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_BankAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankAccType = arg2;
  
}


char _wrap_CThostFtdcOpenAccountField_BankAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_DeviceID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_DeviceID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DeviceID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_BankSecuAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankSecuAccType = arg2;
  
}


char _wrap_CThostFtdcOpenAccountField_BankSecuAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_BankSecuAcc_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_BankSecuAcc_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSecuAcc);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_BankPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BankPwdFlag = arg2;
  
}


char _wrap_CThostFtdcOpenAccountField_BankPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_SecuPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->SecuPwdFlag = arg2;
  
}


char _wrap_CThostFtdcOpenAccountField_SecuPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_OperNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_OperNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcOpenAccountField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcOpenAccountField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcOpenAccountField_LongCustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcOpenAccountField_LongCustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LongCustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcOpenAccountField *_wrap_new_CThostFtdcOpenAccountField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcOpenAccountField *result = 0 ;
  CThostFtdcOpenAccountField *_swig_go_result;
  
  
  result = (CThostFtdcOpenAccountField *)new CThostFtdcOpenAccountField();
  *(CThostFtdcOpenAccountField **)&_swig_go_result = (CThostFtdcOpenAccountField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcOpenAccountField_goctp_ef6abdc493ff8ae2(CThostFtdcOpenAccountField *_swig_go_0) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  
  arg1 = *(CThostFtdcOpenAccountField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcCancelAccountField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcCancelAccountField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcCancelAccountField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcCancelAccountField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_CustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_CustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_IdCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdCardType = arg2;
  
}


char _wrap_CThostFtdcCancelAccountField_IdCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_Gender_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcGenderType)_swig_go_1; 
  
  if (arg1) (arg1)->Gender = arg2;
  
}


char _wrap_CThostFtdcCancelAccountField_Gender_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcGenderType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_CountryCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_CountryCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CountryCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_CustType_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustType = arg2;
  
}


char _wrap_CThostFtdcCancelAccountField_CustType_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_Address_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_Address_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Address);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_ZipCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_ZipCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ZipCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_Telephone_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_Telephone_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Telephone);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_MobilePhone_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_MobilePhone_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MobilePhone);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_Fax_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_Fax_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Fax);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_EMail_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_EMail_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->EMail);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_MoneyAccountStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyAccountStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
  
}


char _wrap_CThostFtdcCancelAccountField_MoneyAccountStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_BankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_BankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_BankPassWord_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_BankPassWord_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankPassWord);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcCancelAccountField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_VerifyCertNoFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcYesNoIndicatorType)_swig_go_1; 
  
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
  
}


char _wrap_CThostFtdcCancelAccountField_VerifyCertNoFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_CashExchangeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcCashExchangeCodeType)_swig_go_1; 
  
  if (arg1) (arg1)->CashExchangeCode = arg2;
  
}


char _wrap_CThostFtdcCancelAccountField_CashExchangeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcCashExchangeCodeType) ((arg1)->CashExchangeCode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_BankAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankAccType = arg2;
  
}


char _wrap_CThostFtdcCancelAccountField_BankAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_DeviceID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_DeviceID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DeviceID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_BankSecuAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankSecuAccType = arg2;
  
}


char _wrap_CThostFtdcCancelAccountField_BankSecuAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_BankSecuAcc_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_BankSecuAcc_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSecuAcc);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_BankPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BankPwdFlag = arg2;
  
}


char _wrap_CThostFtdcCancelAccountField_BankPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_SecuPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->SecuPwdFlag = arg2;
  
}


char _wrap_CThostFtdcCancelAccountField_SecuPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_OperNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_OperNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OperNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcCancelAccountField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcCancelAccountField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcCancelAccountField_LongCustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcCancelAccountField_LongCustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LongCustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcCancelAccountField *_wrap_new_CThostFtdcCancelAccountField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcCancelAccountField *result = 0 ;
  CThostFtdcCancelAccountField *_swig_go_result;
  
  
  result = (CThostFtdcCancelAccountField *)new CThostFtdcCancelAccountField();
  *(CThostFtdcCancelAccountField **)&_swig_go_result = (CThostFtdcCancelAccountField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcCancelAccountField_goctp_ef6abdc493ff8ae2(CThostFtdcCancelAccountField *_swig_go_0) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  
  arg1 = *(CThostFtdcCancelAccountField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcChangeAccountField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcChangeAccountField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcChangeAccountField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcChangeAccountField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_CustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_CustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_IdCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdCardType = arg2;
  
}


char _wrap_CThostFtdcChangeAccountField_IdCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_Gender_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcGenderType)_swig_go_1; 
  
  if (arg1) (arg1)->Gender = arg2;
  
}


char _wrap_CThostFtdcChangeAccountField_Gender_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcGenderType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_CountryCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_CountryCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CountryCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_CustType_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustType = arg2;
  
}


char _wrap_CThostFtdcChangeAccountField_CustType_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_Address_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_Address_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Address);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_ZipCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_ZipCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ZipCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_Telephone_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_Telephone_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Telephone);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_MobilePhone_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_MobilePhone_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MobilePhone);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_Fax_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_Fax_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Fax);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_EMail_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_EMail_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->EMail);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_MoneyAccountStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyAccountStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
  
}


char _wrap_CThostFtdcChangeAccountField_MoneyAccountStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_BankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_BankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_BankPassWord_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_BankPassWord_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankPassWord);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_NewBankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->NewBankAccount, (const char *)arg2, 41-1);
      arg1->NewBankAccount[41-1] = 0;
    } else {
      arg1->NewBankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_NewBankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->NewBankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_NewBankPassWord_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->NewBankPassWord, (const char *)arg2, 41-1);
      arg1->NewBankPassWord[41-1] = 0;
    } else {
      arg1->NewBankPassWord[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_NewBankPassWord_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->NewBankPassWord);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_BankAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankAccType = arg2;
  
}


char _wrap_CThostFtdcChangeAccountField_BankAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcChangeAccountField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_VerifyCertNoFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcYesNoIndicatorType)_swig_go_1; 
  
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
  
}


char _wrap_CThostFtdcChangeAccountField_VerifyCertNoFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_BankPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->BankPwdFlag = arg2;
  
}


char _wrap_CThostFtdcChangeAccountField_BankPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_SecuPwdFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcPwdFlagType)_swig_go_1; 
  
  if (arg1) (arg1)->SecuPwdFlag = arg2;
  
}


char _wrap_CThostFtdcChangeAccountField_SecuPwdFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcChangeAccountField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcChangeAccountField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcChangeAccountField_LongCustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcChangeAccountField_LongCustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LongCustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcChangeAccountField *_wrap_new_CThostFtdcChangeAccountField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcChangeAccountField *result = 0 ;
  CThostFtdcChangeAccountField *_swig_go_result;
  
  
  result = (CThostFtdcChangeAccountField *)new CThostFtdcChangeAccountField();
  *(CThostFtdcChangeAccountField **)&_swig_go_result = (CThostFtdcChangeAccountField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcChangeAccountField_goctp_ef6abdc493ff8ae2(CThostFtdcChangeAccountField *_swig_go_0) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  
  arg1 = *(CThostFtdcChangeAccountField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcSecAgentACIDMapField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSecAgentACIDMapField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSecAgentACIDMapField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSecAgentACIDMapField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSecAgentACIDMapField *_swig_go_0) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSecAgentACIDMapField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSecAgentACIDMapField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSecAgentACIDMapField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSecAgentACIDMapField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSecAgentACIDMapField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSecAgentACIDMapField *_swig_go_0) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSecAgentACIDMapField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSecAgentACIDMapField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSecAgentACIDMapField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSecAgentACIDMapField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSecAgentACIDMapField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSecAgentACIDMapField *_swig_go_0) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSecAgentACIDMapField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSecAgentACIDMapField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSecAgentACIDMapField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSecAgentACIDMapField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSecAgentACIDMapField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSecAgentACIDMapField *_swig_go_0) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSecAgentACIDMapField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcSecAgentACIDMapField_BrokerSecAgentID_set_goctp_ef6abdc493ff8ae2(CThostFtdcSecAgentACIDMapField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcSecAgentACIDMapField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerSecAgentID, (const char *)arg2, 13-1);
      arg1->BrokerSecAgentID[13-1] = 0;
    } else {
      arg1->BrokerSecAgentID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcSecAgentACIDMapField_BrokerSecAgentID_get_goctp_ef6abdc493ff8ae2(CThostFtdcSecAgentACIDMapField *_swig_go_0) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcSecAgentACIDMapField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerSecAgentID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcSecAgentACIDMapField *_wrap_new_CThostFtdcSecAgentACIDMapField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcSecAgentACIDMapField *result = 0 ;
  CThostFtdcSecAgentACIDMapField *_swig_go_result;
  
  
  result = (CThostFtdcSecAgentACIDMapField *)new CThostFtdcSecAgentACIDMapField();
  *(CThostFtdcSecAgentACIDMapField **)&_swig_go_result = (CThostFtdcSecAgentACIDMapField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcSecAgentACIDMapField_goctp_ef6abdc493ff8ae2(CThostFtdcSecAgentACIDMapField *_swig_go_0) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  
  arg1 = *(CThostFtdcSecAgentACIDMapField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQrySecAgentACIDMapField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQrySecAgentACIDMapField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQrySecAgentACIDMapField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQrySecAgentACIDMapField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQrySecAgentACIDMapField *_swig_go_0) {
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQrySecAgentACIDMapField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQrySecAgentACIDMapField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQrySecAgentACIDMapField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQrySecAgentACIDMapField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQrySecAgentACIDMapField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQrySecAgentACIDMapField *_swig_go_0) {
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQrySecAgentACIDMapField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQrySecAgentACIDMapField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQrySecAgentACIDMapField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQrySecAgentACIDMapField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQrySecAgentACIDMapField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQrySecAgentACIDMapField *_swig_go_0) {
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQrySecAgentACIDMapField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQrySecAgentACIDMapField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQrySecAgentACIDMapField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQrySecAgentACIDMapField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQrySecAgentACIDMapField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQrySecAgentACIDMapField *_swig_go_0) {
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQrySecAgentACIDMapField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQrySecAgentACIDMapField *_wrap_new_CThostFtdcQrySecAgentACIDMapField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQrySecAgentACIDMapField *result = 0 ;
  CThostFtdcQrySecAgentACIDMapField *_swig_go_result;
  
  
  result = (CThostFtdcQrySecAgentACIDMapField *)new CThostFtdcQrySecAgentACIDMapField();
  *(CThostFtdcQrySecAgentACIDMapField **)&_swig_go_result = (CThostFtdcQrySecAgentACIDMapField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQrySecAgentACIDMapField_goctp_ef6abdc493ff8ae2(CThostFtdcQrySecAgentACIDMapField *_swig_go_0) {
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  
  arg1 = *(CThostFtdcQrySecAgentACIDMapField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcUserRightsAssignField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserRightsAssignField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserRightsAssignField *arg1 = (CThostFtdcUserRightsAssignField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserRightsAssignField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserRightsAssignField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserRightsAssignField *_swig_go_0) {
  CThostFtdcUserRightsAssignField *arg1 = (CThostFtdcUserRightsAssignField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserRightsAssignField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserRightsAssignField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserRightsAssignField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcUserRightsAssignField *arg1 = (CThostFtdcUserRightsAssignField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcUserRightsAssignField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcUserRightsAssignField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserRightsAssignField *_swig_go_0) {
  CThostFtdcUserRightsAssignField *arg1 = (CThostFtdcUserRightsAssignField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcUserRightsAssignField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcUserRightsAssignField_DRIdentityID_set_goctp_ef6abdc493ff8ae2(CThostFtdcUserRightsAssignField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcUserRightsAssignField *arg1 = (CThostFtdcUserRightsAssignField *) 0 ;
  TThostFtdcDRIdentityIDType arg2 ;
  
  arg1 = *(CThostFtdcUserRightsAssignField **)&_swig_go_0; 
  arg2 = (TThostFtdcDRIdentityIDType)_swig_go_1; 
  
  if (arg1) (arg1)->DRIdentityID = arg2;
  
}


intgo _wrap_CThostFtdcUserRightsAssignField_DRIdentityID_get_goctp_ef6abdc493ff8ae2(CThostFtdcUserRightsAssignField *_swig_go_0) {
  CThostFtdcUserRightsAssignField *arg1 = (CThostFtdcUserRightsAssignField *) 0 ;
  TThostFtdcDRIdentityIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcUserRightsAssignField **)&_swig_go_0; 
  
  result = (TThostFtdcDRIdentityIDType) ((arg1)->DRIdentityID);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcUserRightsAssignField *_wrap_new_CThostFtdcUserRightsAssignField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcUserRightsAssignField *result = 0 ;
  CThostFtdcUserRightsAssignField *_swig_go_result;
  
  
  result = (CThostFtdcUserRightsAssignField *)new CThostFtdcUserRightsAssignField();
  *(CThostFtdcUserRightsAssignField **)&_swig_go_result = (CThostFtdcUserRightsAssignField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcUserRightsAssignField_goctp_ef6abdc493ff8ae2(CThostFtdcUserRightsAssignField *_swig_go_0) {
  CThostFtdcUserRightsAssignField *arg1 = (CThostFtdcUserRightsAssignField *) 0 ;
  
  arg1 = *(CThostFtdcUserRightsAssignField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcBrokerUserRightAssignField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserRightAssignField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcBrokerUserRightAssignField *arg1 = (CThostFtdcBrokerUserRightAssignField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserRightAssignField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcBrokerUserRightAssignField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserRightAssignField *_swig_go_0) {
  CThostFtdcBrokerUserRightAssignField *arg1 = (CThostFtdcBrokerUserRightAssignField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserRightAssignField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserRightAssignField_DRIdentityID_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserRightAssignField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcBrokerUserRightAssignField *arg1 = (CThostFtdcBrokerUserRightAssignField *) 0 ;
  TThostFtdcDRIdentityIDType arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserRightAssignField **)&_swig_go_0; 
  arg2 = (TThostFtdcDRIdentityIDType)_swig_go_1; 
  
  if (arg1) (arg1)->DRIdentityID = arg2;
  
}


intgo _wrap_CThostFtdcBrokerUserRightAssignField_DRIdentityID_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserRightAssignField *_swig_go_0) {
  CThostFtdcBrokerUserRightAssignField *arg1 = (CThostFtdcBrokerUserRightAssignField *) 0 ;
  TThostFtdcDRIdentityIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserRightAssignField **)&_swig_go_0; 
  
  result = (TThostFtdcDRIdentityIDType) ((arg1)->DRIdentityID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcBrokerUserRightAssignField_Tradeable_set_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserRightAssignField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcBrokerUserRightAssignField *arg1 = (CThostFtdcBrokerUserRightAssignField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = *(CThostFtdcBrokerUserRightAssignField **)&_swig_go_0; 
  arg2 = (TThostFtdcBoolType)_swig_go_1; 
  
  if (arg1) (arg1)->Tradeable = arg2;
  
}


intgo _wrap_CThostFtdcBrokerUserRightAssignField_Tradeable_get_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserRightAssignField *_swig_go_0) {
  CThostFtdcBrokerUserRightAssignField *arg1 = (CThostFtdcBrokerUserRightAssignField *) 0 ;
  TThostFtdcBoolType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcBrokerUserRightAssignField **)&_swig_go_0; 
  
  result = (TThostFtdcBoolType) ((arg1)->Tradeable);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcBrokerUserRightAssignField *_wrap_new_CThostFtdcBrokerUserRightAssignField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcBrokerUserRightAssignField *result = 0 ;
  CThostFtdcBrokerUserRightAssignField *_swig_go_result;
  
  
  result = (CThostFtdcBrokerUserRightAssignField *)new CThostFtdcBrokerUserRightAssignField();
  *(CThostFtdcBrokerUserRightAssignField **)&_swig_go_result = (CThostFtdcBrokerUserRightAssignField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcBrokerUserRightAssignField_goctp_ef6abdc493ff8ae2(CThostFtdcBrokerUserRightAssignField *_swig_go_0) {
  CThostFtdcBrokerUserRightAssignField *arg1 = (CThostFtdcBrokerUserRightAssignField *) 0 ;
  
  arg1 = *(CThostFtdcBrokerUserRightAssignField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcDRTransferField_OrigDRIdentityID_set_goctp_ef6abdc493ff8ae2(CThostFtdcDRTransferField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  TThostFtdcDRIdentityIDType arg2 ;
  
  arg1 = *(CThostFtdcDRTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcDRIdentityIDType)_swig_go_1; 
  
  if (arg1) (arg1)->OrigDRIdentityID = arg2;
  
}


intgo _wrap_CThostFtdcDRTransferField_OrigDRIdentityID_get_goctp_ef6abdc493ff8ae2(CThostFtdcDRTransferField *_swig_go_0) {
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  TThostFtdcDRIdentityIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcDRTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcDRIdentityIDType) ((arg1)->OrigDRIdentityID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDRTransferField_DestDRIdentityID_set_goctp_ef6abdc493ff8ae2(CThostFtdcDRTransferField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  TThostFtdcDRIdentityIDType arg2 ;
  
  arg1 = *(CThostFtdcDRTransferField **)&_swig_go_0; 
  arg2 = (TThostFtdcDRIdentityIDType)_swig_go_1; 
  
  if (arg1) (arg1)->DestDRIdentityID = arg2;
  
}


intgo _wrap_CThostFtdcDRTransferField_DestDRIdentityID_get_goctp_ef6abdc493ff8ae2(CThostFtdcDRTransferField *_swig_go_0) {
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  TThostFtdcDRIdentityIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcDRTransferField **)&_swig_go_0; 
  
  result = (TThostFtdcDRIdentityIDType) ((arg1)->DestDRIdentityID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcDRTransferField_OrigBrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcDRTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcDRTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->OrigBrokerID, (const char *)arg2, 11-1);
      arg1->OrigBrokerID[11-1] = 0;
    } else {
      arg1->OrigBrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcDRTransferField_OrigBrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcDRTransferField *_swig_go_0) {
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcDRTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->OrigBrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcDRTransferField_DestBrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcDRTransferField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcDRTransferField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DestBrokerID, (const char *)arg2, 11-1);
      arg1->DestBrokerID[11-1] = 0;
    } else {
      arg1->DestBrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcDRTransferField_DestBrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcDRTransferField *_swig_go_0) {
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcDRTransferField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->DestBrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcDRTransferField *_wrap_new_CThostFtdcDRTransferField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcDRTransferField *result = 0 ;
  CThostFtdcDRTransferField *_swig_go_result;
  
  
  result = (CThostFtdcDRTransferField *)new CThostFtdcDRTransferField();
  *(CThostFtdcDRTransferField **)&_swig_go_result = (CThostFtdcDRTransferField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcDRTransferField_goctp_ef6abdc493ff8ae2(CThostFtdcDRTransferField *_swig_go_0) {
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  
  arg1 = *(CThostFtdcDRTransferField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcFensUserInfoField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcFensUserInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcFensUserInfoField *arg1 = (CThostFtdcFensUserInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcFensUserInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcFensUserInfoField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcFensUserInfoField *_swig_go_0) {
  CThostFtdcFensUserInfoField *arg1 = (CThostFtdcFensUserInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcFensUserInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcFensUserInfoField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcFensUserInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcFensUserInfoField *arg1 = (CThostFtdcFensUserInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcFensUserInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcFensUserInfoField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcFensUserInfoField *_swig_go_0) {
  CThostFtdcFensUserInfoField *arg1 = (CThostFtdcFensUserInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcFensUserInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcFensUserInfoField_LoginMode_set_goctp_ef6abdc493ff8ae2(CThostFtdcFensUserInfoField *_swig_go_0, char _swig_go_1) {
  CThostFtdcFensUserInfoField *arg1 = (CThostFtdcFensUserInfoField *) 0 ;
  TThostFtdcLoginModeType arg2 ;
  
  arg1 = *(CThostFtdcFensUserInfoField **)&_swig_go_0; 
  arg2 = (TThostFtdcLoginModeType)_swig_go_1; 
  
  if (arg1) (arg1)->LoginMode = arg2;
  
}


char _wrap_CThostFtdcFensUserInfoField_LoginMode_get_goctp_ef6abdc493ff8ae2(CThostFtdcFensUserInfoField *_swig_go_0) {
  CThostFtdcFensUserInfoField *arg1 = (CThostFtdcFensUserInfoField *) 0 ;
  TThostFtdcLoginModeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcFensUserInfoField **)&_swig_go_0; 
  
  result = (TThostFtdcLoginModeType) ((arg1)->LoginMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcFensUserInfoField *_wrap_new_CThostFtdcFensUserInfoField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcFensUserInfoField *result = 0 ;
  CThostFtdcFensUserInfoField *_swig_go_result;
  
  
  result = (CThostFtdcFensUserInfoField *)new CThostFtdcFensUserInfoField();
  *(CThostFtdcFensUserInfoField **)&_swig_go_result = (CThostFtdcFensUserInfoField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcFensUserInfoField_goctp_ef6abdc493ff8ae2(CThostFtdcFensUserInfoField *_swig_go_0) {
  CThostFtdcFensUserInfoField *arg1 = (CThostFtdcFensUserInfoField *) 0 ;
  
  arg1 = *(CThostFtdcFensUserInfoField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcCurrTransferIdentityField_IdentityID_set_goctp_ef6abdc493ff8ae2(CThostFtdcCurrTransferIdentityField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcCurrTransferIdentityField *arg1 = (CThostFtdcCurrTransferIdentityField *) 0 ;
  TThostFtdcDRIdentityIDType arg2 ;
  
  arg1 = *(CThostFtdcCurrTransferIdentityField **)&_swig_go_0; 
  arg2 = (TThostFtdcDRIdentityIDType)_swig_go_1; 
  
  if (arg1) (arg1)->IdentityID = arg2;
  
}


intgo _wrap_CThostFtdcCurrTransferIdentityField_IdentityID_get_goctp_ef6abdc493ff8ae2(CThostFtdcCurrTransferIdentityField *_swig_go_0) {
  CThostFtdcCurrTransferIdentityField *arg1 = (CThostFtdcCurrTransferIdentityField *) 0 ;
  TThostFtdcDRIdentityIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcCurrTransferIdentityField **)&_swig_go_0; 
  
  result = (TThostFtdcDRIdentityIDType) ((arg1)->IdentityID);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcCurrTransferIdentityField *_wrap_new_CThostFtdcCurrTransferIdentityField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcCurrTransferIdentityField *result = 0 ;
  CThostFtdcCurrTransferIdentityField *_swig_go_result;
  
  
  result = (CThostFtdcCurrTransferIdentityField *)new CThostFtdcCurrTransferIdentityField();
  *(CThostFtdcCurrTransferIdentityField **)&_swig_go_result = (CThostFtdcCurrTransferIdentityField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcCurrTransferIdentityField_goctp_ef6abdc493ff8ae2(CThostFtdcCurrTransferIdentityField *_swig_go_0) {
  CThostFtdcCurrTransferIdentityField *arg1 = (CThostFtdcCurrTransferIdentityField *) 0 ;
  
  arg1 = *(CThostFtdcCurrTransferIdentityField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcLoginForbiddenUserField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginForbiddenUserField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginForbiddenUserField *arg1 = (CThostFtdcLoginForbiddenUserField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginForbiddenUserField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginForbiddenUserField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginForbiddenUserField *_swig_go_0) {
  CThostFtdcLoginForbiddenUserField *arg1 = (CThostFtdcLoginForbiddenUserField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginForbiddenUserField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginForbiddenUserField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginForbiddenUserField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginForbiddenUserField *arg1 = (CThostFtdcLoginForbiddenUserField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginForbiddenUserField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginForbiddenUserField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginForbiddenUserField *_swig_go_0) {
  CThostFtdcLoginForbiddenUserField *arg1 = (CThostFtdcLoginForbiddenUserField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginForbiddenUserField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcLoginForbiddenUserField_IPAddress_set_goctp_ef6abdc493ff8ae2(CThostFtdcLoginForbiddenUserField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcLoginForbiddenUserField *arg1 = (CThostFtdcLoginForbiddenUserField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcLoginForbiddenUserField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcLoginForbiddenUserField_IPAddress_get_goctp_ef6abdc493ff8ae2(CThostFtdcLoginForbiddenUserField *_swig_go_0) {
  CThostFtdcLoginForbiddenUserField *arg1 = (CThostFtdcLoginForbiddenUserField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcLoginForbiddenUserField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IPAddress);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcLoginForbiddenUserField *_wrap_new_CThostFtdcLoginForbiddenUserField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcLoginForbiddenUserField *result = 0 ;
  CThostFtdcLoginForbiddenUserField *_swig_go_result;
  
  
  result = (CThostFtdcLoginForbiddenUserField *)new CThostFtdcLoginForbiddenUserField();
  *(CThostFtdcLoginForbiddenUserField **)&_swig_go_result = (CThostFtdcLoginForbiddenUserField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcLoginForbiddenUserField_goctp_ef6abdc493ff8ae2(CThostFtdcLoginForbiddenUserField *_swig_go_0) {
  CThostFtdcLoginForbiddenUserField *arg1 = (CThostFtdcLoginForbiddenUserField *) 0 ;
  
  arg1 = *(CThostFtdcLoginForbiddenUserField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcQryLoginForbiddenUserField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryLoginForbiddenUserField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryLoginForbiddenUserField *arg1 = (CThostFtdcQryLoginForbiddenUserField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryLoginForbiddenUserField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryLoginForbiddenUserField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryLoginForbiddenUserField *_swig_go_0) {
  CThostFtdcQryLoginForbiddenUserField *arg1 = (CThostFtdcQryLoginForbiddenUserField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryLoginForbiddenUserField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcQryLoginForbiddenUserField_UserID_set_goctp_ef6abdc493ff8ae2(CThostFtdcQryLoginForbiddenUserField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcQryLoginForbiddenUserField *arg1 = (CThostFtdcQryLoginForbiddenUserField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcQryLoginForbiddenUserField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcQryLoginForbiddenUserField_UserID_get_goctp_ef6abdc493ff8ae2(CThostFtdcQryLoginForbiddenUserField *_swig_go_0) {
  CThostFtdcQryLoginForbiddenUserField *arg1 = (CThostFtdcQryLoginForbiddenUserField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcQryLoginForbiddenUserField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->UserID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcQryLoginForbiddenUserField *_wrap_new_CThostFtdcQryLoginForbiddenUserField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcQryLoginForbiddenUserField *result = 0 ;
  CThostFtdcQryLoginForbiddenUserField *_swig_go_result;
  
  
  result = (CThostFtdcQryLoginForbiddenUserField *)new CThostFtdcQryLoginForbiddenUserField();
  *(CThostFtdcQryLoginForbiddenUserField **)&_swig_go_result = (CThostFtdcQryLoginForbiddenUserField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcQryLoginForbiddenUserField_goctp_ef6abdc493ff8ae2(CThostFtdcQryLoginForbiddenUserField *_swig_go_0) {
  CThostFtdcQryLoginForbiddenUserField *arg1 = (CThostFtdcQryLoginForbiddenUserField *) 0 ;
  
  arg1 = *(CThostFtdcQryLoginForbiddenUserField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcMulticastGroupInfoField_GroupIP_set_goctp_ef6abdc493ff8ae2(CThostFtdcMulticastGroupInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMulticastGroupInfoField *arg1 = (CThostFtdcMulticastGroupInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMulticastGroupInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->GroupIP, (const char *)arg2, 16-1);
      arg1->GroupIP[16-1] = 0;
    } else {
      arg1->GroupIP[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMulticastGroupInfoField_GroupIP_get_goctp_ef6abdc493ff8ae2(CThostFtdcMulticastGroupInfoField *_swig_go_0) {
  CThostFtdcMulticastGroupInfoField *arg1 = (CThostFtdcMulticastGroupInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMulticastGroupInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->GroupIP);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMulticastGroupInfoField_GroupPort_set_goctp_ef6abdc493ff8ae2(CThostFtdcMulticastGroupInfoField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcMulticastGroupInfoField *arg1 = (CThostFtdcMulticastGroupInfoField *) 0 ;
  TThostFtdcIPPortType arg2 ;
  
  arg1 = *(CThostFtdcMulticastGroupInfoField **)&_swig_go_0; 
  arg2 = (TThostFtdcIPPortType)_swig_go_1; 
  
  if (arg1) (arg1)->GroupPort = arg2;
  
}


intgo _wrap_CThostFtdcMulticastGroupInfoField_GroupPort_get_goctp_ef6abdc493ff8ae2(CThostFtdcMulticastGroupInfoField *_swig_go_0) {
  CThostFtdcMulticastGroupInfoField *arg1 = (CThostFtdcMulticastGroupInfoField *) 0 ;
  TThostFtdcIPPortType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMulticastGroupInfoField **)&_swig_go_0; 
  
  result = (TThostFtdcIPPortType) ((arg1)->GroupPort);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcMulticastGroupInfoField_SourceIP_set_goctp_ef6abdc493ff8ae2(CThostFtdcMulticastGroupInfoField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMulticastGroupInfoField *arg1 = (CThostFtdcMulticastGroupInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcMulticastGroupInfoField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->SourceIP, (const char *)arg2, 16-1);
      arg1->SourceIP[16-1] = 0;
    } else {
      arg1->SourceIP[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcMulticastGroupInfoField_SourceIP_get_goctp_ef6abdc493ff8ae2(CThostFtdcMulticastGroupInfoField *_swig_go_0) {
  CThostFtdcMulticastGroupInfoField *arg1 = (CThostFtdcMulticastGroupInfoField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMulticastGroupInfoField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->SourceIP);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcMulticastGroupInfoField *_wrap_new_CThostFtdcMulticastGroupInfoField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcMulticastGroupInfoField *result = 0 ;
  CThostFtdcMulticastGroupInfoField *_swig_go_result;
  
  
  result = (CThostFtdcMulticastGroupInfoField *)new CThostFtdcMulticastGroupInfoField();
  *(CThostFtdcMulticastGroupInfoField **)&_swig_go_result = (CThostFtdcMulticastGroupInfoField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcMulticastGroupInfoField_goctp_ef6abdc493ff8ae2(CThostFtdcMulticastGroupInfoField *_swig_go_0) {
  CThostFtdcMulticastGroupInfoField *arg1 = (CThostFtdcMulticastGroupInfoField *) 0 ;
  
  arg1 = *(CThostFtdcMulticastGroupInfoField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcTradingAccountReserveField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountReserveField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountReserveField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingAccountReserveField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountReserveField *_swig_go_0) {
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountReserveField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountReserveField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountReserveField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountReserveField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingAccountReserveField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountReserveField *_swig_go_0) {
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountReserveField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountReserveField_Reserve_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountReserveField *_swig_go_0, double _swig_go_1) {
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountReserveField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyType)_swig_go_1; 
  
  if (arg1) (arg1)->Reserve = arg2;
  
}


double _wrap_CThostFtdcTradingAccountReserveField_Reserve_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountReserveField *_swig_go_0) {
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  TThostFtdcMoneyType result;
  double _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountReserveField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyType) ((arg1)->Reserve);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcTradingAccountReserveField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountReserveField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcTradingAccountReserveField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcTradingAccountReserveField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountReserveField *_swig_go_0) {
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTradingAccountReserveField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcTradingAccountReserveField *_wrap_new_CThostFtdcTradingAccountReserveField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTradingAccountReserveField *result = 0 ;
  CThostFtdcTradingAccountReserveField *_swig_go_result;
  
  
  result = (CThostFtdcTradingAccountReserveField *)new CThostFtdcTradingAccountReserveField();
  *(CThostFtdcTradingAccountReserveField **)&_swig_go_result = (CThostFtdcTradingAccountReserveField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTradingAccountReserveField_goctp_ef6abdc493ff8ae2(CThostFtdcTradingAccountReserveField *_swig_go_0) {
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  
  arg1 = *(CThostFtdcTradingAccountReserveField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcReserveOpenAccountConfirmField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcReserveOpenAccountConfirmField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcReserveOpenAccountConfirmField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_CustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 161-1);
      arg1->CustomerName[161-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_CustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_IdCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdCardType = arg2;
  
}


char _wrap_CThostFtdcReserveOpenAccountConfirmField_IdCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_Gender_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  arg2 = (TThostFtdcGenderType)_swig_go_1; 
  
  if (arg1) (arg1)->Gender = arg2;
  
}


char _wrap_CThostFtdcReserveOpenAccountConfirmField_Gender_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcGenderType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_CountryCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_CountryCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CountryCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_CustType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustType = arg2;
  
}


char _wrap_CThostFtdcReserveOpenAccountConfirmField_CustType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcCustTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_Address_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_Address_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Address);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_ZipCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_ZipCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ZipCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_Telephone_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_Telephone_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Telephone);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_MobilePhone_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_MobilePhone_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MobilePhone);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_Fax_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_Fax_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Fax);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_EMail_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_EMail_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->EMail);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_MoneyAccountStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyAccountStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
  
}


char _wrap_CThostFtdcReserveOpenAccountConfirmField_MoneyAccountStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_BankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_BankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_BankPassWord_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_BankPassWord_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankPassWord);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcReserveOpenAccountConfirmField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_VerifyCertNoFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  arg2 = (TThostFtdcYesNoIndicatorType)_swig_go_1; 
  
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
  
}


char _wrap_CThostFtdcReserveOpenAccountConfirmField_VerifyCertNoFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_BankAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankAccType = arg2;
  
}


char _wrap_CThostFtdcReserveOpenAccountConfirmField_BankAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcReserveOpenAccountConfirmField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_AccountID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_AccountID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->AccountID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_Password_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_Password_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Password);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_BankReserveOpenSeq_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankReserveOpenSeq, (const char *)arg2, 13-1);
      arg1->BankReserveOpenSeq[13-1] = 0;
    } else {
      arg1->BankReserveOpenSeq[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_BankReserveOpenSeq_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankReserveOpenSeq);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_BookDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BookDate, (const char *)arg2, 9-1);
      arg1->BookDate[9-1] = 0;
    } else {
      arg1->BookDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_BookDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BookDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_BookPsw_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BookPsw, (const char *)arg2, 41-1);
      arg1->BookPsw[41-1] = 0;
    } else {
      arg1->BookPsw[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_BookPsw_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BookPsw);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcReserveOpenAccountConfirmField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountConfirmField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountConfirmField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcReserveOpenAccountConfirmField *_wrap_new_CThostFtdcReserveOpenAccountConfirmField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcReserveOpenAccountConfirmField *result = 0 ;
  CThostFtdcReserveOpenAccountConfirmField *_swig_go_result;
  
  
  result = (CThostFtdcReserveOpenAccountConfirmField *)new CThostFtdcReserveOpenAccountConfirmField();
  *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_result = (CThostFtdcReserveOpenAccountConfirmField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcReserveOpenAccountConfirmField_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountConfirmField *_swig_go_0) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountConfirmField **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CThostFtdcReserveOpenAccountField_TradeCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_TradeCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_BankID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_BankID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_BankBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_BankBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_BrokerID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_BrokerID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_BrokerBranchID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_BrokerBranchID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerBranchID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_TradeDate_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_TradeDate_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeDate);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_TradeTime_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_TradeTime_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradeTime);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_BankSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_BankSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankSerial);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_TradingDay_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_TradingDay_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->TradingDay);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_PlateSerial_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSerialType)_swig_go_1; 
  
  if (arg1) (arg1)->PlateSerial = arg2;
  
}


intgo _wrap_CThostFtdcReserveOpenAccountField_PlateSerial_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcSerialType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_LastFragment_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcLastFragmentType)_swig_go_1; 
  
  if (arg1) (arg1)->LastFragment = arg2;
  
}


char _wrap_CThostFtdcReserveOpenAccountField_LastFragment_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_SessionID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcSessionIDType)_swig_go_1; 
  
  if (arg1) (arg1)->SessionID = arg2;
  
}


intgo _wrap_CThostFtdcReserveOpenAccountField_SessionID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_CustomerName_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 161-1);
      arg1->CustomerName[161-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_CustomerName_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CustomerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_IdCardType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcIdCardTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->IdCardType = arg2;
  
}


char _wrap_CThostFtdcReserveOpenAccountField_IdCardType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_IdentifiedCardNo_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_IdentifiedCardNo_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IdentifiedCardNo);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_Gender_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcGenderType)_swig_go_1; 
  
  if (arg1) (arg1)->Gender = arg2;
  
}


char _wrap_CThostFtdcReserveOpenAccountField_Gender_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcGenderType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_CountryCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_CountryCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CountryCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_CustType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcCustTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->CustType = arg2;
  
}


char _wrap_CThostFtdcReserveOpenAccountField_CustType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_Address_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_Address_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Address);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_ZipCode_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_ZipCode_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ZipCode);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_Telephone_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_Telephone_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Telephone);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_MobilePhone_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_MobilePhone_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->MobilePhone);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_Fax_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_Fax_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Fax);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_EMail_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_EMail_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->EMail);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_MoneyAccountStatus_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcMoneyAccountStatusType)_swig_go_1; 
  
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
  
}


char _wrap_CThostFtdcReserveOpenAccountField_MoneyAccountStatus_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_BankAccount_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_BankAccount_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankAccount);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_BankPassWord_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_BankPassWord_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BankPassWord);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_InstallID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcInstallIDType)_swig_go_1; 
  
  if (arg1) (arg1)->InstallID = arg2;
  
}


intgo _wrap_CThostFtdcReserveOpenAccountField_InstallID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_VerifyCertNoFlag_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcYesNoIndicatorType)_swig_go_1; 
  
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
  
}


char _wrap_CThostFtdcReserveOpenAccountField_VerifyCertNoFlag_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_CurrencyID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_CurrencyID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->CurrencyID);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_Digest_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_Digest_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Digest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_BankAccType_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcBankAccTypeType)_swig_go_1; 
  
  if (arg1) (arg1)->BankAccType = arg2;
  
}


char _wrap_CThostFtdcReserveOpenAccountField_BankAccType_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_BrokerIDByBank_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_BrokerIDByBank_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BrokerIDByBank);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_TID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcTIDType)_swig_go_1; 
  
  if (arg1) (arg1)->TID = arg2;
  
}


intgo _wrap_CThostFtdcReserveOpenAccountField_TID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcTIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcTIDType) ((arg1)->TID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_ReserveOpenAccStas_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, char _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcReserveOpenAccStasType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcReserveOpenAccStasType)_swig_go_1; 
  
  if (arg1) (arg1)->ReserveOpenAccStas = arg2;
  
}


char _wrap_CThostFtdcReserveOpenAccountField_ReserveOpenAccStas_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcReserveOpenAccStasType result;
  char _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcReserveOpenAccStasType) ((arg1)->ReserveOpenAccStas);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_ErrorID_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  arg2 = (TThostFtdcErrorIDType)_swig_go_1; 
  
  if (arg1) (arg1)->ErrorID = arg2;
  
}


intgo _wrap_CThostFtdcReserveOpenAccountField_ErrorID_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcErrorIDType result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CThostFtdcReserveOpenAccountField_ErrorMsg_set_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_CThostFtdcReserveOpenAccountField_ErrorMsg_get_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  result = (char *) ((arg1)->ErrorMsg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


CThostFtdcReserveOpenAccountField *_wrap_new_CThostFtdcReserveOpenAccountField_goctp_ef6abdc493ff8ae2() {
  CThostFtdcReserveOpenAccountField *result = 0 ;
  CThostFtdcReserveOpenAccountField *_swig_go_result;
  
  
  result = (CThostFtdcReserveOpenAccountField *)new CThostFtdcReserveOpenAccountField();
  *(CThostFtdcReserveOpenAccountField **)&_swig_go_result = (CThostFtdcReserveOpenAccountField *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcReserveOpenAccountField_goctp_ef6abdc493ff8ae2(CThostFtdcReserveOpenAccountField *_swig_go_0) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  
  arg1 = *(CThostFtdcReserveOpenAccountField **)&_swig_go_0; 
  
  delete arg1;
  
}


CThostFtdcMdSpi *_wrap__swig_NewDirectorCThostFtdcMdSpiCThostFtdcMdSpi_goctp_ef6abdc493ff8ae2(intgo _swig_go_0) {
  int arg1 ;
  CThostFtdcMdSpi *result = 0 ;
  CThostFtdcMdSpi *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = new SwigDirector_CThostFtdcMdSpi(arg1);
  *(CThostFtdcMdSpi **)&_swig_go_result = (CThostFtdcMdSpi *)result; 
  return _swig_go_result;
}


void _wrap__swig_DirectorCThostFtdcMdSpi_upcall_OnFrontConnected_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcMdSpi *_swig_go_0) {
  SwigDirector_CThostFtdcMdSpi *arg1 = (SwigDirector_CThostFtdcMdSpi *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcMdSpi **)&_swig_go_0; 
  
  arg1->_swig_upcall_OnFrontConnected();
  
}


void _wrap__swig_DirectorCThostFtdcMdSpi_upcall_OnFrontDisconnected_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcMdSpi *_swig_go_0, intgo _swig_go_1) {
  SwigDirector_CThostFtdcMdSpi *arg1 = (SwigDirector_CThostFtdcMdSpi *) 0 ;
  int arg2 ;
  
  arg1 = *(SwigDirector_CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg1->_swig_upcall_OnFrontDisconnected(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcMdSpi_upcall_OnHeartBeatWarning_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcMdSpi *_swig_go_0, intgo _swig_go_1) {
  SwigDirector_CThostFtdcMdSpi *arg1 = (SwigDirector_CThostFtdcMdSpi *) 0 ;
  int arg2 ;
  
  arg1 = *(SwigDirector_CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg1->_swig_upcall_OnHeartBeatWarning(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcMdSpi_upcall_OnRspUserLogin_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcMdSpi *_swig_go_0, CThostFtdcRspUserLoginField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcMdSpi *arg1 = (SwigDirector_CThostFtdcMdSpi *) 0 ;
  CThostFtdcRspUserLoginField *arg2 = (CThostFtdcRspUserLoginField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspUserLoginField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspUserLogin(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcMdSpi_upcall_OnRspUserLogout_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcMdSpi *_swig_go_0, CThostFtdcUserLogoutField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcMdSpi *arg1 = (SwigDirector_CThostFtdcMdSpi *) 0 ;
  CThostFtdcUserLogoutField *arg2 = (CThostFtdcUserLogoutField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcUserLogoutField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspUserLogout(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcMdSpi_upcall_OnRspError_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcMdSpi *_swig_go_0, CThostFtdcRspInfoField *_swig_go_1, intgo _swig_go_2, bool _swig_go_3) {
  SwigDirector_CThostFtdcMdSpi *arg1 = (SwigDirector_CThostFtdcMdSpi *) 0 ;
  CThostFtdcRspInfoField *arg2 = (CThostFtdcRspInfoField *) 0 ;
  int arg3 ;
  bool arg4 ;
  
  arg1 = *(SwigDirector_CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspInfoField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  arg1->_swig_upcall_OnRspError(arg2, arg3, arg4);
  
}


void _wrap__swig_DirectorCThostFtdcMdSpi_upcall_OnRspSubMarketData_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcMdSpi *_swig_go_0, CThostFtdcSpecificInstrumentField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcMdSpi *arg1 = (SwigDirector_CThostFtdcMdSpi *) 0 ;
  CThostFtdcSpecificInstrumentField *arg2 = (CThostFtdcSpecificInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcSpecificInstrumentField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspSubMarketData(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcMdSpi_upcall_OnRspUnSubMarketData_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcMdSpi *_swig_go_0, CThostFtdcSpecificInstrumentField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcMdSpi *arg1 = (SwigDirector_CThostFtdcMdSpi *) 0 ;
  CThostFtdcSpecificInstrumentField *arg2 = (CThostFtdcSpecificInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcSpecificInstrumentField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspUnSubMarketData(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcMdSpi_upcall_OnRspSubForQuoteRsp_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcMdSpi *_swig_go_0, CThostFtdcSpecificInstrumentField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcMdSpi *arg1 = (SwigDirector_CThostFtdcMdSpi *) 0 ;
  CThostFtdcSpecificInstrumentField *arg2 = (CThostFtdcSpecificInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcSpecificInstrumentField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspSubForQuoteRsp(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcMdSpi_upcall_OnRspUnSubForQuoteRsp_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcMdSpi *_swig_go_0, CThostFtdcSpecificInstrumentField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcMdSpi *arg1 = (SwigDirector_CThostFtdcMdSpi *) 0 ;
  CThostFtdcSpecificInstrumentField *arg2 = (CThostFtdcSpecificInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcSpecificInstrumentField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspUnSubForQuoteRsp(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcMdSpi_upcall_OnRtnDepthMarketData_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcMdSpi *_swig_go_0, CThostFtdcDepthMarketDataField *_swig_go_1) {
  SwigDirector_CThostFtdcMdSpi *arg1 = (SwigDirector_CThostFtdcMdSpi *) 0 ;
  CThostFtdcDepthMarketDataField *arg2 = (CThostFtdcDepthMarketDataField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcDepthMarketDataField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnDepthMarketData(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcMdSpi_upcall_OnRtnForQuoteRsp_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcMdSpi *_swig_go_0, CThostFtdcForQuoteRspField *_swig_go_1) {
  SwigDirector_CThostFtdcMdSpi *arg1 = (SwigDirector_CThostFtdcMdSpi *) 0 ;
  CThostFtdcForQuoteRspField *arg2 = (CThostFtdcForQuoteRspField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcForQuoteRspField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnForQuoteRsp(arg2);
  
}


void _wrap_CThostFtdcMdSpi_OnFrontConnected_goctp_ef6abdc493ff8ae2(CThostFtdcMdSpi *_swig_go_0) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  
  arg1 = *(CThostFtdcMdSpi **)&_swig_go_0; 
  
  (arg1)->OnFrontConnected();
  
}


void _wrap_CThostFtdcMdSpi_OnFrontDisconnected_goctp_ef6abdc493ff8ae2(CThostFtdcMdSpi *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  int arg2 ;
  
  arg1 = *(CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->OnFrontDisconnected(arg2);
  
}


void _wrap_CThostFtdcMdSpi_OnHeartBeatWarning_goctp_ef6abdc493ff8ae2(CThostFtdcMdSpi *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  int arg2 ;
  
  arg1 = *(CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->OnHeartBeatWarning(arg2);
  
}


void _wrap_CThostFtdcMdSpi_OnRspUserLogin_goctp_ef6abdc493ff8ae2(CThostFtdcMdSpi *_swig_go_0, CThostFtdcRspUserLoginField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcRspUserLoginField *arg2 = (CThostFtdcRspUserLoginField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspUserLoginField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspUserLogin(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcMdSpi_OnRspUserLogout_goctp_ef6abdc493ff8ae2(CThostFtdcMdSpi *_swig_go_0, CThostFtdcUserLogoutField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcUserLogoutField *arg2 = (CThostFtdcUserLogoutField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcUserLogoutField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspUserLogout(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcMdSpi_OnRspError_goctp_ef6abdc493ff8ae2(CThostFtdcMdSpi *_swig_go_0, CThostFtdcRspInfoField *_swig_go_1, intgo _swig_go_2, bool _swig_go_3) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcRspInfoField *arg2 = (CThostFtdcRspInfoField *) 0 ;
  int arg3 ;
  bool arg4 ;
  
  arg1 = *(CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspInfoField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  (arg1)->OnRspError(arg2,arg3,arg4);
  
}


void _wrap_CThostFtdcMdSpi_OnRspSubMarketData_goctp_ef6abdc493ff8ae2(CThostFtdcMdSpi *_swig_go_0, CThostFtdcSpecificInstrumentField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcSpecificInstrumentField *arg2 = (CThostFtdcSpecificInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcSpecificInstrumentField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspSubMarketData(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcMdSpi_OnRspUnSubMarketData_goctp_ef6abdc493ff8ae2(CThostFtdcMdSpi *_swig_go_0, CThostFtdcSpecificInstrumentField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcSpecificInstrumentField *arg2 = (CThostFtdcSpecificInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcSpecificInstrumentField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspUnSubMarketData(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcMdSpi_OnRspSubForQuoteRsp_goctp_ef6abdc493ff8ae2(CThostFtdcMdSpi *_swig_go_0, CThostFtdcSpecificInstrumentField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcSpecificInstrumentField *arg2 = (CThostFtdcSpecificInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcSpecificInstrumentField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspSubForQuoteRsp(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcMdSpi_OnRspUnSubForQuoteRsp_goctp_ef6abdc493ff8ae2(CThostFtdcMdSpi *_swig_go_0, CThostFtdcSpecificInstrumentField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcSpecificInstrumentField *arg2 = (CThostFtdcSpecificInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcSpecificInstrumentField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspUnSubForQuoteRsp(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcMdSpi_OnRtnDepthMarketData_goctp_ef6abdc493ff8ae2(CThostFtdcMdSpi *_swig_go_0, CThostFtdcDepthMarketDataField *_swig_go_1) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcDepthMarketDataField *arg2 = (CThostFtdcDepthMarketDataField *) 0 ;
  
  arg1 = *(CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcDepthMarketDataField **)&_swig_go_1; 
  
  (arg1)->OnRtnDepthMarketData(arg2);
  
}


void _wrap_CThostFtdcMdSpi_OnRtnForQuoteRsp_goctp_ef6abdc493ff8ae2(CThostFtdcMdSpi *_swig_go_0, CThostFtdcForQuoteRspField *_swig_go_1) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcForQuoteRspField *arg2 = (CThostFtdcForQuoteRspField *) 0 ;
  
  arg1 = *(CThostFtdcMdSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcForQuoteRspField **)&_swig_go_1; 
  
  (arg1)->OnRtnForQuoteRsp(arg2);
  
}


CThostFtdcMdSpi *_wrap_new_CThostFtdcMdSpi_goctp_ef6abdc493ff8ae2() {
  CThostFtdcMdSpi *result = 0 ;
  CThostFtdcMdSpi *_swig_go_result;
  
  
  result = (CThostFtdcMdSpi *)new CThostFtdcMdSpi();
  *(CThostFtdcMdSpi **)&_swig_go_result = (CThostFtdcMdSpi *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcMdSpi_goctp_ef6abdc493ff8ae2(CThostFtdcMdSpi *_swig_go_0) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  
  arg1 = *(CThostFtdcMdSpi **)&_swig_go_0; 
  
  delete arg1;
  
}


CThostFtdcMdApi *_wrap_CThostFtdcMdApi_CreateFtdcMdApi__SWIG_0_goctp_ef6abdc493ff8ae2(_gostring_ _swig_go_0, bool _swig_go_1, bool _swig_go_2) {
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  bool arg3 ;
  CThostFtdcMdApi *result = 0 ;
  CThostFtdcMdApi *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (bool)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (CThostFtdcMdApi *)CThostFtdcMdApi::CreateFtdcMdApi((char const *)arg1,arg2,arg3);
  *(CThostFtdcMdApi **)&_swig_go_result = (CThostFtdcMdApi *)result; 
  free(arg1); 
  return _swig_go_result;
}


CThostFtdcMdApi *_wrap_CThostFtdcMdApi_CreateFtdcMdApi__SWIG_1_goctp_ef6abdc493ff8ae2(_gostring_ _swig_go_0, bool _swig_go_1) {
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  CThostFtdcMdApi *result = 0 ;
  CThostFtdcMdApi *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (bool)_swig_go_1; 
  
  result = (CThostFtdcMdApi *)CThostFtdcMdApi::CreateFtdcMdApi((char const *)arg1,arg2);
  *(CThostFtdcMdApi **)&_swig_go_result = (CThostFtdcMdApi *)result; 
  free(arg1); 
  return _swig_go_result;
}


CThostFtdcMdApi *_wrap_CThostFtdcMdApi_CreateFtdcMdApi__SWIG_2_goctp_ef6abdc493ff8ae2(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  CThostFtdcMdApi *result = 0 ;
  CThostFtdcMdApi *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (CThostFtdcMdApi *)CThostFtdcMdApi::CreateFtdcMdApi((char const *)arg1);
  *(CThostFtdcMdApi **)&_swig_go_result = (CThostFtdcMdApi *)result; 
  free(arg1); 
  return _swig_go_result;
}


CThostFtdcMdApi *_wrap_CThostFtdcMdApi_CreateFtdcMdApi__SWIG_3_goctp_ef6abdc493ff8ae2() {
  CThostFtdcMdApi *result = 0 ;
  CThostFtdcMdApi *_swig_go_result;
  
  
  result = (CThostFtdcMdApi *)CThostFtdcMdApi::CreateFtdcMdApi();
  *(CThostFtdcMdApi **)&_swig_go_result = (CThostFtdcMdApi *)result; 
  return _swig_go_result;
}


_gostring_ _wrap_CThostFtdcMdApi_GetApiVersion_goctp_ef6abdc493ff8ae2() {
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (char *)CThostFtdcMdApi::GetApiVersion();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMdApi_Release_goctp_ef6abdc493ff8ae2(CThostFtdcMdApi *_swig_go_0) {
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  
  arg1 = *(CThostFtdcMdApi **)&_swig_go_0; 
  
  (arg1)->Release();
  
}


void _wrap_CThostFtdcMdApi_Init_goctp_ef6abdc493ff8ae2(CThostFtdcMdApi *_swig_go_0) {
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  
  arg1 = *(CThostFtdcMdApi **)&_swig_go_0; 
  
  (arg1)->Init();
  
}


intgo _wrap_CThostFtdcMdApi_Join_goctp_ef6abdc493ff8ae2(CThostFtdcMdApi *_swig_go_0) {
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMdApi **)&_swig_go_0; 
  
  result = (int)(arg1)->Join();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_CThostFtdcMdApi_GetTradingDay_goctp_ef6abdc493ff8ae2(CThostFtdcMdApi *_swig_go_0) {
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcMdApi **)&_swig_go_0; 
  
  result = (char *)(arg1)->GetTradingDay();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcMdApi_RegisterFront_goctp_ef6abdc493ff8ae2(CThostFtdcMdApi *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(CThostFtdcMdApi **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  (arg1)->RegisterFront(arg2);
  
  free(arg2); 
}


void _wrap_CThostFtdcMdApi_RegisterNameServer_goctp_ef6abdc493ff8ae2(CThostFtdcMdApi *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(CThostFtdcMdApi **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  (arg1)->RegisterNameServer(arg2);
  
  free(arg2); 
}


void _wrap_CThostFtdcMdApi_RegisterFensUserInfo_goctp_ef6abdc493ff8ae2(CThostFtdcMdApi *_swig_go_0, CThostFtdcFensUserInfoField *_swig_go_1) {
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  CThostFtdcFensUserInfoField *arg2 = (CThostFtdcFensUserInfoField *) 0 ;
  
  arg1 = *(CThostFtdcMdApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcFensUserInfoField **)&_swig_go_1; 
  
  (arg1)->RegisterFensUserInfo(arg2);
  
}


void _wrap_CThostFtdcMdApi_RegisterSpi_goctp_ef6abdc493ff8ae2(CThostFtdcMdApi *_swig_go_0, CThostFtdcMdSpi *_swig_go_1) {
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  CThostFtdcMdSpi *arg2 = (CThostFtdcMdSpi *) 0 ;
  
  arg1 = *(CThostFtdcMdApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcMdSpi **)&_swig_go_1; 
  
  (arg1)->RegisterSpi(arg2);
  
}


intgo _wrap_CThostFtdcMdApi_SubscribeMarketData_goctp_ef6abdc493ff8ae2(CThostFtdcMdApi *_swig_go_0, _goslice_ _swig_go_1) {
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  char **arg2 = (char **) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMdApi **)&_swig_go_0; 
  
  {
    int i;
    _gostring_* a;
    
    arg3 = _swig_go_1.len;
    a = (_gostring_*) _swig_go_1.array;
    arg2 = (char **) malloc ((arg3 + 1) * sizeof (char *));
    for (i = 0; i < arg3; i++) {
      /* Not work */
      //_gostring_ *ps = &a[i];
      //arg2[i] = (char *) ps->p;
      //arg2[i][ps->n] = '\0';
      
      /*Work well*/
      _gostring_ *ps = &a[i];
      arg2[i] = (char*) malloc(ps->n + 1);
      memcpy(arg2[i], ps->p, ps->n);
      arg2[i][ps->n] = '\0';
    }
    arg2[i] = NULL;
  }
  
  
  result = (int)(arg1)->SubscribeMarketData(arg2,arg3);
  _swig_go_result = result; 
  
  
  {
    int i;
    for (i = 0; i < arg3; i++)
    {
      free (arg2[i]);
    }
    free(arg2);
  }
  
  return _swig_go_result;
}


intgo _wrap_CThostFtdcMdApi_UnSubscribeMarketData_goctp_ef6abdc493ff8ae2(CThostFtdcMdApi *_swig_go_0, _goslice_ _swig_go_1) {
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  char **arg2 = (char **) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMdApi **)&_swig_go_0; 
  
  {
    int i;
    _gostring_* a;
    
    arg3 = _swig_go_1.len;
    a = (_gostring_*) _swig_go_1.array;
    arg2 = (char **) malloc ((arg3 + 1) * sizeof (char *));
    for (i = 0; i < arg3; i++) {
      /* Not work */
      //_gostring_ *ps = &a[i];
      //arg2[i] = (char *) ps->p;
      //arg2[i][ps->n] = '\0';
      
      /*Work well*/
      _gostring_ *ps = &a[i];
      arg2[i] = (char*) malloc(ps->n + 1);
      memcpy(arg2[i], ps->p, ps->n);
      arg2[i][ps->n] = '\0';
    }
    arg2[i] = NULL;
  }
  
  
  result = (int)(arg1)->UnSubscribeMarketData(arg2,arg3);
  _swig_go_result = result; 
  
  
  {
    int i;
    for (i = 0; i < arg3; i++)
    {
      free (arg2[i]);
    }
    free(arg2);
  }
  
  return _swig_go_result;
}


intgo _wrap_CThostFtdcMdApi_SubscribeForQuoteRsp_goctp_ef6abdc493ff8ae2(CThostFtdcMdApi *_swig_go_0, _goslice_ _swig_go_1) {
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  char **arg2 = (char **) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMdApi **)&_swig_go_0; 
  
  {
    int i;
    _gostring_* a;
    
    arg3 = _swig_go_1.len;
    a = (_gostring_*) _swig_go_1.array;
    arg2 = (char **) malloc ((arg3 + 1) * sizeof (char *));
    for (i = 0; i < arg3; i++) {
      /* Not work */
      //_gostring_ *ps = &a[i];
      //arg2[i] = (char *) ps->p;
      //arg2[i][ps->n] = '\0';
      
      /*Work well*/
      _gostring_ *ps = &a[i];
      arg2[i] = (char*) malloc(ps->n + 1);
      memcpy(arg2[i], ps->p, ps->n);
      arg2[i][ps->n] = '\0';
    }
    arg2[i] = NULL;
  }
  
  
  result = (int)(arg1)->SubscribeForQuoteRsp(arg2,arg3);
  _swig_go_result = result; 
  
  
  {
    int i;
    for (i = 0; i < arg3; i++)
    {
      free (arg2[i]);
    }
    free(arg2);
  }
  
  return _swig_go_result;
}


intgo _wrap_CThostFtdcMdApi_UnSubscribeForQuoteRsp_goctp_ef6abdc493ff8ae2(CThostFtdcMdApi *_swig_go_0, _goslice_ _swig_go_1) {
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  char **arg2 = (char **) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMdApi **)&_swig_go_0; 
  
  {
    int i;
    _gostring_* a;
    
    arg3 = _swig_go_1.len;
    a = (_gostring_*) _swig_go_1.array;
    arg2 = (char **) malloc ((arg3 + 1) * sizeof (char *));
    for (i = 0; i < arg3; i++) {
      /* Not work */
      //_gostring_ *ps = &a[i];
      //arg2[i] = (char *) ps->p;
      //arg2[i][ps->n] = '\0';
      
      /*Work well*/
      _gostring_ *ps = &a[i];
      arg2[i] = (char*) malloc(ps->n + 1);
      memcpy(arg2[i], ps->p, ps->n);
      arg2[i][ps->n] = '\0';
    }
    arg2[i] = NULL;
  }
  
  
  result = (int)(arg1)->UnSubscribeForQuoteRsp(arg2,arg3);
  _swig_go_result = result; 
  
  
  {
    int i;
    for (i = 0; i < arg3; i++)
    {
      free (arg2[i]);
    }
    free(arg2);
  }
  
  return _swig_go_result;
}


intgo _wrap_CThostFtdcMdApi_ReqUserLogin_goctp_ef6abdc493ff8ae2(CThostFtdcMdApi *_swig_go_0, CThostFtdcReqUserLoginField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  CThostFtdcReqUserLoginField *arg2 = (CThostFtdcReqUserLoginField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMdApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqUserLoginField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqUserLogin(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcMdApi_ReqUserLogout_goctp_ef6abdc493ff8ae2(CThostFtdcMdApi *_swig_go_0, CThostFtdcUserLogoutField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  CThostFtdcUserLogoutField *arg2 = (CThostFtdcUserLogoutField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcMdApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcUserLogoutField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqUserLogout(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


CThostFtdcTraderSpi *_wrap__swig_NewDirectorCThostFtdcTraderSpiCThostFtdcTraderSpi_goctp_ef6abdc493ff8ae2(intgo _swig_go_0) {
  int arg1 ;
  CThostFtdcTraderSpi *result = 0 ;
  CThostFtdcTraderSpi *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = new SwigDirector_CThostFtdcTraderSpi(arg1);
  *(CThostFtdcTraderSpi **)&_swig_go_result = (CThostFtdcTraderSpi *)result; 
  return _swig_go_result;
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnFrontConnected_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  
  arg1->_swig_upcall_OnFrontConnected();
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnFrontDisconnected_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, intgo _swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  int arg2 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg1->_swig_upcall_OnFrontDisconnected(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnHeartBeatWarning_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, intgo _swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  int arg2 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg1->_swig_upcall_OnHeartBeatWarning(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspAuthenticate_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspAuthenticateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspAuthenticateField *arg2 = (CThostFtdcRspAuthenticateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspAuthenticateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspAuthenticate(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspUserLogin_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspUserLoginField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspUserLoginField *arg2 = (CThostFtdcRspUserLoginField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspUserLoginField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspUserLogin(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspUserLogout_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcUserLogoutField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcUserLogoutField *arg2 = (CThostFtdcUserLogoutField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcUserLogoutField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspUserLogout(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspUserPasswordUpdate_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcUserPasswordUpdateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcUserPasswordUpdateField *arg2 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcUserPasswordUpdateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspUserPasswordUpdate(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspTradingAccountPasswordUpdate_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcTradingAccountPasswordUpdateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradingAccountPasswordUpdateField *arg2 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcTradingAccountPasswordUpdateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspTradingAccountPasswordUpdate(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspOrderInsert_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputOrderField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputOrderField *arg2 = (CThostFtdcInputOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputOrderField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspOrderInsert(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspParkedOrderInsert_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcParkedOrderField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcParkedOrderField *arg2 = (CThostFtdcParkedOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcParkedOrderField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspParkedOrderInsert(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspParkedOrderAction_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcParkedOrderActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcParkedOrderActionField *arg2 = (CThostFtdcParkedOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcParkedOrderActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspParkedOrderAction(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspOrderAction_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputOrderActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputOrderActionField *arg2 = (CThostFtdcInputOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputOrderActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspOrderAction(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQueryMaxOrderVolume_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcQueryMaxOrderVolumeField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcQueryMaxOrderVolumeField *arg2 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQueryMaxOrderVolumeField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQueryMaxOrderVolume(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspSettlementInfoConfirm_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcSettlementInfoConfirmField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcSettlementInfoConfirmField *arg2 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcSettlementInfoConfirmField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspSettlementInfoConfirm(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspRemoveParkedOrder_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRemoveParkedOrderField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRemoveParkedOrderField *arg2 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRemoveParkedOrderField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspRemoveParkedOrder(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspRemoveParkedOrderAction_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRemoveParkedOrderActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRemoveParkedOrderActionField *arg2 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRemoveParkedOrderActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspRemoveParkedOrderAction(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspExecOrderInsert_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputExecOrderField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputExecOrderField *arg2 = (CThostFtdcInputExecOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputExecOrderField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspExecOrderInsert(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspExecOrderAction_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputExecOrderActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputExecOrderActionField *arg2 = (CThostFtdcInputExecOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspExecOrderAction(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspForQuoteInsert_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputForQuoteField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputForQuoteField *arg2 = (CThostFtdcInputForQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputForQuoteField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspForQuoteInsert(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQuoteInsert_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputQuoteField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputQuoteField *arg2 = (CThostFtdcInputQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputQuoteField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQuoteInsert(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQuoteAction_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputQuoteActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputQuoteActionField *arg2 = (CThostFtdcInputQuoteActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputQuoteActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQuoteAction(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspBatchOrderAction_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputBatchOrderActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputBatchOrderActionField *arg2 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspBatchOrderAction(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspCombActionInsert_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputCombActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputCombActionField *arg2 = (CThostFtdcInputCombActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputCombActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspCombActionInsert(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryOrder_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcOrderField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOrderField *arg2 = (CThostFtdcOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcOrderField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryOrder(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryTrade_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcTradeField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradeField *arg2 = (CThostFtdcTradeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcTradeField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryTrade(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryInvestorPosition_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInvestorPositionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInvestorPositionField *arg2 = (CThostFtdcInvestorPositionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInvestorPositionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryInvestorPosition(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryTradingAccount_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcTradingAccountField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradingAccountField *arg2 = (CThostFtdcTradingAccountField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcTradingAccountField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryTradingAccount(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryInvestor_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInvestorField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInvestorField *arg2 = (CThostFtdcInvestorField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInvestorField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryInvestor(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryTradingCode_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcTradingCodeField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradingCodeField *arg2 = (CThostFtdcTradingCodeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcTradingCodeField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryTradingCode(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryInstrumentMarginRate_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInstrumentMarginRateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInstrumentMarginRateField *arg2 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryInstrumentMarginRate(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryInstrumentCommissionRate_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInstrumentCommissionRateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInstrumentCommissionRateField *arg2 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryInstrumentCommissionRate(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryExchange_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcExchangeField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExchangeField *arg2 = (CThostFtdcExchangeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcExchangeField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryExchange(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryProduct_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcProductField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcProductField *arg2 = (CThostFtdcProductField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcProductField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryProduct(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryInstrument_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInstrumentField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInstrumentField *arg2 = (CThostFtdcInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInstrumentField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryInstrument(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryDepthMarketData_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcDepthMarketDataField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcDepthMarketDataField *arg2 = (CThostFtdcDepthMarketDataField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcDepthMarketDataField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryDepthMarketData(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQrySettlementInfo_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcSettlementInfoField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcSettlementInfoField *arg2 = (CThostFtdcSettlementInfoField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcSettlementInfoField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQrySettlementInfo(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryTransferBank_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcTransferBankField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTransferBankField *arg2 = (CThostFtdcTransferBankField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcTransferBankField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryTransferBank(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryInvestorPositionDetail_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInvestorPositionDetailField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInvestorPositionDetailField *arg2 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryInvestorPositionDetail(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryNotice_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcNoticeField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcNoticeField *arg2 = (CThostFtdcNoticeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcNoticeField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryNotice(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQrySettlementInfoConfirm_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcSettlementInfoConfirmField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcSettlementInfoConfirmField *arg2 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcSettlementInfoConfirmField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQrySettlementInfoConfirm(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryInvestorPositionCombineDetail_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInvestorPositionCombineDetailField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInvestorPositionCombineDetailField *arg2 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryInvestorPositionCombineDetail(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryCFMMCTradingAccountKey_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcCFMMCTradingAccountKeyField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCFMMCTradingAccountKeyField *arg2 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcCFMMCTradingAccountKeyField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryCFMMCTradingAccountKey(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryEWarrantOffset_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcEWarrantOffsetField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcEWarrantOffsetField *arg2 = (CThostFtdcEWarrantOffsetField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcEWarrantOffsetField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryEWarrantOffset(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryInvestorProductGroupMargin_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInvestorProductGroupMarginField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInvestorProductGroupMarginField *arg2 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryInvestorProductGroupMargin(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryExchangeMarginRate_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcExchangeMarginRateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExchangeMarginRateField *arg2 = (CThostFtdcExchangeMarginRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcExchangeMarginRateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryExchangeMarginRate(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryExchangeMarginRateAdjust_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcExchangeMarginRateAdjustField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExchangeMarginRateAdjustField *arg2 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryExchangeMarginRateAdjust(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryExchangeRate_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcExchangeRateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExchangeRateField *arg2 = (CThostFtdcExchangeRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcExchangeRateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryExchangeRate(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQrySecAgentACIDMap_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcSecAgentACIDMapField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcSecAgentACIDMapField *arg2 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcSecAgentACIDMapField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQrySecAgentACIDMap(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryProductExchRate_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcProductExchRateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcProductExchRateField *arg2 = (CThostFtdcProductExchRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcProductExchRateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryProductExchRate(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryProductGroup_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcProductGroupField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcProductGroupField *arg2 = (CThostFtdcProductGroupField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcProductGroupField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryProductGroup(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryMMInstrumentCommissionRate_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcMMInstrumentCommissionRateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcMMInstrumentCommissionRateField *arg2 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryMMInstrumentCommissionRate(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryMMOptionInstrCommRate_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcMMOptionInstrCommRateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcMMOptionInstrCommRateField *arg2 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryMMOptionInstrCommRate(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryInstrumentOrderCommRate_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInstrumentOrderCommRateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInstrumentOrderCommRateField *arg2 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInstrumentOrderCommRateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryInstrumentOrderCommRate(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryOptionInstrTradeCost_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcOptionInstrTradeCostField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOptionInstrTradeCostField *arg2 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryOptionInstrTradeCost(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryOptionInstrCommRate_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcOptionInstrCommRateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOptionInstrCommRateField *arg2 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryOptionInstrCommRate(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryExecOrder_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcExecOrderField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExecOrderField *arg2 = (CThostFtdcExecOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcExecOrderField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryExecOrder(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryForQuote_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcForQuoteField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcForQuoteField *arg2 = (CThostFtdcForQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcForQuoteField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryForQuote(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryQuote_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcQuoteField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcQuoteField *arg2 = (CThostFtdcQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQuoteField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryQuote(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryCombInstrumentGuard_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcCombInstrumentGuardField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCombInstrumentGuardField *arg2 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcCombInstrumentGuardField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryCombInstrumentGuard(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryCombAction_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcCombActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCombActionField *arg2 = (CThostFtdcCombActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcCombActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryCombAction(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryTransferSerial_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcTransferSerialField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTransferSerialField *arg2 = (CThostFtdcTransferSerialField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcTransferSerialField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryTransferSerial(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryAccountregister_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcAccountregisterField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcAccountregisterField *arg2 = (CThostFtdcAccountregisterField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcAccountregisterField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryAccountregister(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspError_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspInfoField *_swig_go_1, intgo _swig_go_2, bool _swig_go_3) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspInfoField *arg2 = (CThostFtdcRspInfoField *) 0 ;
  int arg3 ;
  bool arg4 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspInfoField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  arg1->_swig_upcall_OnRspError(arg2, arg3, arg4);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnOrder_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcOrderField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOrderField *arg2 = (CThostFtdcOrderField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcOrderField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnOrder(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnTrade_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcTradeField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradeField *arg2 = (CThostFtdcTradeField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcTradeField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnTrade(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnErrRtnOrderInsert_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputOrderField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputOrderField *arg2 = (CThostFtdcInputOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputOrderField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  arg1->_swig_upcall_OnErrRtnOrderInsert(arg2, arg3);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnErrRtnOrderAction_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcOrderActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOrderActionField *arg2 = (CThostFtdcOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcOrderActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  arg1->_swig_upcall_OnErrRtnOrderAction(arg2, arg3);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnInstrumentStatus_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInstrumentStatusField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInstrumentStatusField *arg2 = (CThostFtdcInstrumentStatusField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInstrumentStatusField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnInstrumentStatus(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnBulletin_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcBulletinField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcBulletinField *arg2 = (CThostFtdcBulletinField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcBulletinField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnBulletin(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnTradingNotice_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcTradingNoticeInfoField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradingNoticeInfoField *arg2 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcTradingNoticeInfoField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnTradingNotice(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnErrorConditionalOrder_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcErrorConditionalOrderField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcErrorConditionalOrderField *arg2 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnErrorConditionalOrder(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnExecOrder_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcExecOrderField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExecOrderField *arg2 = (CThostFtdcExecOrderField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcExecOrderField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnExecOrder(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnErrRtnExecOrderInsert_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputExecOrderField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputExecOrderField *arg2 = (CThostFtdcInputExecOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputExecOrderField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  arg1->_swig_upcall_OnErrRtnExecOrderInsert(arg2, arg3);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnErrRtnExecOrderAction_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcExecOrderActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExecOrderActionField *arg2 = (CThostFtdcExecOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcExecOrderActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  arg1->_swig_upcall_OnErrRtnExecOrderAction(arg2, arg3);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnErrRtnForQuoteInsert_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputForQuoteField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputForQuoteField *arg2 = (CThostFtdcInputForQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputForQuoteField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  arg1->_swig_upcall_OnErrRtnForQuoteInsert(arg2, arg3);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnQuote_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcQuoteField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcQuoteField *arg2 = (CThostFtdcQuoteField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQuoteField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnQuote(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnErrRtnQuoteInsert_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputQuoteField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputQuoteField *arg2 = (CThostFtdcInputQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputQuoteField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  arg1->_swig_upcall_OnErrRtnQuoteInsert(arg2, arg3);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnErrRtnQuoteAction_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcQuoteActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcQuoteActionField *arg2 = (CThostFtdcQuoteActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQuoteActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  arg1->_swig_upcall_OnErrRtnQuoteAction(arg2, arg3);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnForQuoteRsp_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcForQuoteRspField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcForQuoteRspField *arg2 = (CThostFtdcForQuoteRspField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcForQuoteRspField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnForQuoteRsp(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnCFMMCTradingAccountToken_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcCFMMCTradingAccountTokenField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCFMMCTradingAccountTokenField *arg2 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcCFMMCTradingAccountTokenField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnCFMMCTradingAccountToken(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnErrRtnBatchOrderAction_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcBatchOrderActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcBatchOrderActionField *arg2 = (CThostFtdcBatchOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcBatchOrderActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  arg1->_swig_upcall_OnErrRtnBatchOrderAction(arg2, arg3);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnCombAction_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcCombActionField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCombActionField *arg2 = (CThostFtdcCombActionField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcCombActionField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnCombAction(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnErrRtnCombActionInsert_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputCombActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputCombActionField *arg2 = (CThostFtdcInputCombActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputCombActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  arg1->_swig_upcall_OnErrRtnCombActionInsert(arg2, arg3);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryContractBank_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcContractBankField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcContractBankField *arg2 = (CThostFtdcContractBankField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcContractBankField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryContractBank(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryParkedOrder_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcParkedOrderField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcParkedOrderField *arg2 = (CThostFtdcParkedOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcParkedOrderField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryParkedOrder(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryParkedOrderAction_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcParkedOrderActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcParkedOrderActionField *arg2 = (CThostFtdcParkedOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcParkedOrderActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryParkedOrderAction(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryTradingNotice_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcTradingNoticeField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradingNoticeField *arg2 = (CThostFtdcTradingNoticeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcTradingNoticeField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryTradingNotice(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryBrokerTradingParams_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcBrokerTradingParamsField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcBrokerTradingParamsField *arg2 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcBrokerTradingParamsField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryBrokerTradingParams(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQryBrokerTradingAlgos_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcBrokerTradingAlgosField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcBrokerTradingAlgosField *arg2 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcBrokerTradingAlgosField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQryBrokerTradingAlgos(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQueryCFMMCTradingAccountToken_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcQueryCFMMCTradingAccountTokenField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg2 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQueryCFMMCTradingAccountTokenField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQueryCFMMCTradingAccountToken(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnFromBankToFutureByBank_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspTransferField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspTransferField *arg2 = (CThostFtdcRspTransferField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspTransferField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnFromBankToFutureByBank(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnFromFutureToBankByBank_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspTransferField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspTransferField *arg2 = (CThostFtdcRspTransferField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspTransferField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnFromFutureToBankByBank(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnRepealFromBankToFutureByBank_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspRepealField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspRepealField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnRepealFromBankToFutureByBank(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnRepealFromFutureToBankByBank_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspRepealField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspRepealField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnRepealFromFutureToBankByBank(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnFromBankToFutureByFuture_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspTransferField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspTransferField *arg2 = (CThostFtdcRspTransferField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspTransferField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnFromBankToFutureByFuture(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnFromFutureToBankByFuture_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspTransferField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspTransferField *arg2 = (CThostFtdcRspTransferField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspTransferField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnFromFutureToBankByFuture(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnRepealFromBankToFutureByFutureManual_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspRepealField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspRepealField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnRepealFromBankToFutureByFutureManual(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnRepealFromFutureToBankByFutureManual_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspRepealField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspRepealField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnRepealFromFutureToBankByFutureManual(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnQueryBankBalanceByFuture_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcNotifyQueryAccountField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcNotifyQueryAccountField *arg2 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnQueryBankBalanceByFuture(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnErrRtnBankToFutureByFuture_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcReqTransferField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqTransferField *arg2 = (CThostFtdcReqTransferField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqTransferField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  arg1->_swig_upcall_OnErrRtnBankToFutureByFuture(arg2, arg3);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnErrRtnFutureToBankByFuture_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcReqTransferField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqTransferField *arg2 = (CThostFtdcReqTransferField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqTransferField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  arg1->_swig_upcall_OnErrRtnFutureToBankByFuture(arg2, arg3);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnErrRtnRepealBankToFutureByFutureManual_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcReqRepealField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqRepealField *arg2 = (CThostFtdcReqRepealField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqRepealField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  arg1->_swig_upcall_OnErrRtnRepealBankToFutureByFutureManual(arg2, arg3);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnErrRtnRepealFutureToBankByFutureManual_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcReqRepealField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqRepealField *arg2 = (CThostFtdcReqRepealField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqRepealField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  arg1->_swig_upcall_OnErrRtnRepealFutureToBankByFutureManual(arg2, arg3);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnErrRtnQueryBankBalanceByFuture_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcReqQueryAccountField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqQueryAccountField *arg2 = (CThostFtdcReqQueryAccountField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqQueryAccountField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  arg1->_swig_upcall_OnErrRtnQueryBankBalanceByFuture(arg2, arg3);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnRepealFromBankToFutureByFuture_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspRepealField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspRepealField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnRepealFromBankToFutureByFuture(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnRepealFromFutureToBankByFuture_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspRepealField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspRepealField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnRepealFromFutureToBankByFuture(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspFromBankToFutureByFuture_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcReqTransferField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqTransferField *arg2 = (CThostFtdcReqTransferField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqTransferField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspFromBankToFutureByFuture(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspFromFutureToBankByFuture_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcReqTransferField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqTransferField *arg2 = (CThostFtdcReqTransferField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqTransferField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspFromFutureToBankByFuture(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRspQueryBankAccountMoneyByFuture_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcReqQueryAccountField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqQueryAccountField *arg2 = (CThostFtdcReqQueryAccountField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqQueryAccountField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  arg1->_swig_upcall_OnRspQueryBankAccountMoneyByFuture(arg2, arg3, arg4, arg5);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnOpenAccountByBank_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcOpenAccountField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOpenAccountField *arg2 = (CThostFtdcOpenAccountField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcOpenAccountField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnOpenAccountByBank(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnCancelAccountByBank_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcCancelAccountField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCancelAccountField *arg2 = (CThostFtdcCancelAccountField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcCancelAccountField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnCancelAccountByBank(arg2);
  
}


void _wrap__swig_DirectorCThostFtdcTraderSpi_upcall_OnRtnChangeAccountByBank_goctp_ef6abdc493ff8ae2(SwigDirector_CThostFtdcTraderSpi *_swig_go_0, CThostFtdcChangeAccountField *_swig_go_1) {
  SwigDirector_CThostFtdcTraderSpi *arg1 = (SwigDirector_CThostFtdcTraderSpi *) 0 ;
  CThostFtdcChangeAccountField *arg2 = (CThostFtdcChangeAccountField *) 0 ;
  
  arg1 = *(SwigDirector_CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcChangeAccountField **)&_swig_go_1; 
  
  arg1->_swig_upcall_OnRtnChangeAccountByBank(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnFrontConnected_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  
  (arg1)->OnFrontConnected();
  
}


void _wrap_CThostFtdcTraderSpi_OnFrontDisconnected_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  int arg2 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->OnFrontDisconnected(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnHeartBeatWarning_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  int arg2 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->OnHeartBeatWarning(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspAuthenticate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspAuthenticateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspAuthenticateField *arg2 = (CThostFtdcRspAuthenticateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspAuthenticateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspAuthenticate(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspUserLogin_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspUserLoginField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspUserLoginField *arg2 = (CThostFtdcRspUserLoginField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspUserLoginField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspUserLogin(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspUserLogout_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcUserLogoutField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcUserLogoutField *arg2 = (CThostFtdcUserLogoutField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcUserLogoutField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspUserLogout(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspUserPasswordUpdate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcUserPasswordUpdateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcUserPasswordUpdateField *arg2 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcUserPasswordUpdateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspUserPasswordUpdate(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspTradingAccountPasswordUpdate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcTradingAccountPasswordUpdateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradingAccountPasswordUpdateField *arg2 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcTradingAccountPasswordUpdateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspTradingAccountPasswordUpdate(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspOrderInsert_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputOrderField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputOrderField *arg2 = (CThostFtdcInputOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputOrderField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspOrderInsert(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspParkedOrderInsert_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcParkedOrderField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcParkedOrderField *arg2 = (CThostFtdcParkedOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcParkedOrderField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspParkedOrderInsert(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspParkedOrderAction_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcParkedOrderActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcParkedOrderActionField *arg2 = (CThostFtdcParkedOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcParkedOrderActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspParkedOrderAction(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspOrderAction_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputOrderActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputOrderActionField *arg2 = (CThostFtdcInputOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputOrderActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspOrderAction(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQueryMaxOrderVolume_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcQueryMaxOrderVolumeField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcQueryMaxOrderVolumeField *arg2 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQueryMaxOrderVolumeField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQueryMaxOrderVolume(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspSettlementInfoConfirm_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcSettlementInfoConfirmField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcSettlementInfoConfirmField *arg2 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcSettlementInfoConfirmField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspSettlementInfoConfirm(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspRemoveParkedOrder_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRemoveParkedOrderField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRemoveParkedOrderField *arg2 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRemoveParkedOrderField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspRemoveParkedOrder(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspRemoveParkedOrderAction_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRemoveParkedOrderActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRemoveParkedOrderActionField *arg2 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRemoveParkedOrderActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspRemoveParkedOrderAction(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspExecOrderInsert_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputExecOrderField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputExecOrderField *arg2 = (CThostFtdcInputExecOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputExecOrderField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspExecOrderInsert(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspExecOrderAction_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputExecOrderActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputExecOrderActionField *arg2 = (CThostFtdcInputExecOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspExecOrderAction(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspForQuoteInsert_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputForQuoteField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputForQuoteField *arg2 = (CThostFtdcInputForQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputForQuoteField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspForQuoteInsert(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQuoteInsert_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputQuoteField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputQuoteField *arg2 = (CThostFtdcInputQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputQuoteField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQuoteInsert(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQuoteAction_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputQuoteActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputQuoteActionField *arg2 = (CThostFtdcInputQuoteActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputQuoteActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQuoteAction(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspBatchOrderAction_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputBatchOrderActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputBatchOrderActionField *arg2 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspBatchOrderAction(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspCombActionInsert_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputCombActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputCombActionField *arg2 = (CThostFtdcInputCombActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputCombActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspCombActionInsert(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryOrder_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcOrderField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOrderField *arg2 = (CThostFtdcOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcOrderField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryOrder(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryTrade_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcTradeField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradeField *arg2 = (CThostFtdcTradeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcTradeField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryTrade(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryInvestorPosition_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInvestorPositionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInvestorPositionField *arg2 = (CThostFtdcInvestorPositionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInvestorPositionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryInvestorPosition(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryTradingAccount_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcTradingAccountField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradingAccountField *arg2 = (CThostFtdcTradingAccountField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcTradingAccountField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryTradingAccount(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryInvestor_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInvestorField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInvestorField *arg2 = (CThostFtdcInvestorField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInvestorField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryInvestor(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryTradingCode_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcTradingCodeField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradingCodeField *arg2 = (CThostFtdcTradingCodeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcTradingCodeField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryTradingCode(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryInstrumentMarginRate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInstrumentMarginRateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInstrumentMarginRateField *arg2 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInstrumentMarginRateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryInstrumentMarginRate(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryInstrumentCommissionRate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInstrumentCommissionRateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInstrumentCommissionRateField *arg2 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInstrumentCommissionRateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryInstrumentCommissionRate(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryExchange_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcExchangeField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExchangeField *arg2 = (CThostFtdcExchangeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcExchangeField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryExchange(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryProduct_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcProductField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcProductField *arg2 = (CThostFtdcProductField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcProductField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryProduct(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryInstrument_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInstrumentField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInstrumentField *arg2 = (CThostFtdcInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInstrumentField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryInstrument(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryDepthMarketData_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcDepthMarketDataField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcDepthMarketDataField *arg2 = (CThostFtdcDepthMarketDataField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcDepthMarketDataField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryDepthMarketData(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQrySettlementInfo_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcSettlementInfoField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcSettlementInfoField *arg2 = (CThostFtdcSettlementInfoField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcSettlementInfoField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQrySettlementInfo(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryTransferBank_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcTransferBankField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTransferBankField *arg2 = (CThostFtdcTransferBankField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcTransferBankField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryTransferBank(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryInvestorPositionDetail_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInvestorPositionDetailField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInvestorPositionDetailField *arg2 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInvestorPositionDetailField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryInvestorPositionDetail(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryNotice_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcNoticeField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcNoticeField *arg2 = (CThostFtdcNoticeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcNoticeField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryNotice(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQrySettlementInfoConfirm_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcSettlementInfoConfirmField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcSettlementInfoConfirmField *arg2 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcSettlementInfoConfirmField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQrySettlementInfoConfirm(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryInvestorPositionCombineDetail_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInvestorPositionCombineDetailField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInvestorPositionCombineDetailField *arg2 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInvestorPositionCombineDetailField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryInvestorPositionCombineDetail(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryCFMMCTradingAccountKey_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcCFMMCTradingAccountKeyField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCFMMCTradingAccountKeyField *arg2 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcCFMMCTradingAccountKeyField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryCFMMCTradingAccountKey(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryEWarrantOffset_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcEWarrantOffsetField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcEWarrantOffsetField *arg2 = (CThostFtdcEWarrantOffsetField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcEWarrantOffsetField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryEWarrantOffset(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryInvestorProductGroupMargin_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInvestorProductGroupMarginField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInvestorProductGroupMarginField *arg2 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInvestorProductGroupMarginField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryInvestorProductGroupMargin(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryExchangeMarginRate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcExchangeMarginRateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExchangeMarginRateField *arg2 = (CThostFtdcExchangeMarginRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcExchangeMarginRateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryExchangeMarginRate(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryExchangeMarginRateAdjust_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcExchangeMarginRateAdjustField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExchangeMarginRateAdjustField *arg2 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcExchangeMarginRateAdjustField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryExchangeMarginRateAdjust(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryExchangeRate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcExchangeRateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExchangeRateField *arg2 = (CThostFtdcExchangeRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcExchangeRateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryExchangeRate(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQrySecAgentACIDMap_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcSecAgentACIDMapField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcSecAgentACIDMapField *arg2 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcSecAgentACIDMapField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQrySecAgentACIDMap(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryProductExchRate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcProductExchRateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcProductExchRateField *arg2 = (CThostFtdcProductExchRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcProductExchRateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryProductExchRate(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryProductGroup_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcProductGroupField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcProductGroupField *arg2 = (CThostFtdcProductGroupField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcProductGroupField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryProductGroup(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryMMInstrumentCommissionRate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcMMInstrumentCommissionRateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcMMInstrumentCommissionRateField *arg2 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcMMInstrumentCommissionRateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryMMInstrumentCommissionRate(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryMMOptionInstrCommRate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcMMOptionInstrCommRateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcMMOptionInstrCommRateField *arg2 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcMMOptionInstrCommRateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryMMOptionInstrCommRate(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryInstrumentOrderCommRate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInstrumentOrderCommRateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInstrumentOrderCommRateField *arg2 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInstrumentOrderCommRateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryInstrumentOrderCommRate(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryOptionInstrTradeCost_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcOptionInstrTradeCostField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOptionInstrTradeCostField *arg2 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcOptionInstrTradeCostField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryOptionInstrTradeCost(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryOptionInstrCommRate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcOptionInstrCommRateField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOptionInstrCommRateField *arg2 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcOptionInstrCommRateField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryOptionInstrCommRate(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryExecOrder_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcExecOrderField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExecOrderField *arg2 = (CThostFtdcExecOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcExecOrderField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryExecOrder(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryForQuote_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcForQuoteField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcForQuoteField *arg2 = (CThostFtdcForQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcForQuoteField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryForQuote(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryQuote_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcQuoteField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcQuoteField *arg2 = (CThostFtdcQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQuoteField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryQuote(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryCombInstrumentGuard_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcCombInstrumentGuardField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCombInstrumentGuardField *arg2 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcCombInstrumentGuardField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryCombInstrumentGuard(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryCombAction_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcCombActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCombActionField *arg2 = (CThostFtdcCombActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcCombActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryCombAction(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryTransferSerial_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcTransferSerialField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTransferSerialField *arg2 = (CThostFtdcTransferSerialField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcTransferSerialField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryTransferSerial(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryAccountregister_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcAccountregisterField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcAccountregisterField *arg2 = (CThostFtdcAccountregisterField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcAccountregisterField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryAccountregister(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspError_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspInfoField *_swig_go_1, intgo _swig_go_2, bool _swig_go_3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspInfoField *arg2 = (CThostFtdcRspInfoField *) 0 ;
  int arg3 ;
  bool arg4 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspInfoField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  (arg1)->OnRspError(arg2,arg3,arg4);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnOrder_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcOrderField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOrderField *arg2 = (CThostFtdcOrderField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcOrderField **)&_swig_go_1; 
  
  (arg1)->OnRtnOrder(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnTrade_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcTradeField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradeField *arg2 = (CThostFtdcTradeField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcTradeField **)&_swig_go_1; 
  
  (arg1)->OnRtnTrade(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnErrRtnOrderInsert_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputOrderField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputOrderField *arg2 = (CThostFtdcInputOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputOrderField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  (arg1)->OnErrRtnOrderInsert(arg2,arg3);
  
}


void _wrap_CThostFtdcTraderSpi_OnErrRtnOrderAction_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcOrderActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOrderActionField *arg2 = (CThostFtdcOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcOrderActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  (arg1)->OnErrRtnOrderAction(arg2,arg3);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnInstrumentStatus_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInstrumentStatusField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInstrumentStatusField *arg2 = (CThostFtdcInstrumentStatusField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInstrumentStatusField **)&_swig_go_1; 
  
  (arg1)->OnRtnInstrumentStatus(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnBulletin_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcBulletinField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcBulletinField *arg2 = (CThostFtdcBulletinField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcBulletinField **)&_swig_go_1; 
  
  (arg1)->OnRtnBulletin(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnTradingNotice_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcTradingNoticeInfoField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradingNoticeInfoField *arg2 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcTradingNoticeInfoField **)&_swig_go_1; 
  
  (arg1)->OnRtnTradingNotice(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnErrorConditionalOrder_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcErrorConditionalOrderField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcErrorConditionalOrderField *arg2 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcErrorConditionalOrderField **)&_swig_go_1; 
  
  (arg1)->OnRtnErrorConditionalOrder(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnExecOrder_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcExecOrderField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExecOrderField *arg2 = (CThostFtdcExecOrderField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcExecOrderField **)&_swig_go_1; 
  
  (arg1)->OnRtnExecOrder(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnErrRtnExecOrderInsert_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputExecOrderField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputExecOrderField *arg2 = (CThostFtdcInputExecOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputExecOrderField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  (arg1)->OnErrRtnExecOrderInsert(arg2,arg3);
  
}


void _wrap_CThostFtdcTraderSpi_OnErrRtnExecOrderAction_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcExecOrderActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExecOrderActionField *arg2 = (CThostFtdcExecOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcExecOrderActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  (arg1)->OnErrRtnExecOrderAction(arg2,arg3);
  
}


void _wrap_CThostFtdcTraderSpi_OnErrRtnForQuoteInsert_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputForQuoteField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputForQuoteField *arg2 = (CThostFtdcInputForQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputForQuoteField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  (arg1)->OnErrRtnForQuoteInsert(arg2,arg3);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnQuote_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcQuoteField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcQuoteField *arg2 = (CThostFtdcQuoteField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQuoteField **)&_swig_go_1; 
  
  (arg1)->OnRtnQuote(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnErrRtnQuoteInsert_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputQuoteField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputQuoteField *arg2 = (CThostFtdcInputQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputQuoteField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  (arg1)->OnErrRtnQuoteInsert(arg2,arg3);
  
}


void _wrap_CThostFtdcTraderSpi_OnErrRtnQuoteAction_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcQuoteActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcQuoteActionField *arg2 = (CThostFtdcQuoteActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQuoteActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  (arg1)->OnErrRtnQuoteAction(arg2,arg3);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnForQuoteRsp_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcForQuoteRspField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcForQuoteRspField *arg2 = (CThostFtdcForQuoteRspField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcForQuoteRspField **)&_swig_go_1; 
  
  (arg1)->OnRtnForQuoteRsp(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnCFMMCTradingAccountToken_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcCFMMCTradingAccountTokenField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCFMMCTradingAccountTokenField *arg2 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcCFMMCTradingAccountTokenField **)&_swig_go_1; 
  
  (arg1)->OnRtnCFMMCTradingAccountToken(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnErrRtnBatchOrderAction_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcBatchOrderActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcBatchOrderActionField *arg2 = (CThostFtdcBatchOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcBatchOrderActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  (arg1)->OnErrRtnBatchOrderAction(arg2,arg3);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnCombAction_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcCombActionField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCombActionField *arg2 = (CThostFtdcCombActionField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcCombActionField **)&_swig_go_1; 
  
  (arg1)->OnRtnCombAction(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnErrRtnCombActionInsert_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcInputCombActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputCombActionField *arg2 = (CThostFtdcInputCombActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputCombActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  (arg1)->OnErrRtnCombActionInsert(arg2,arg3);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryContractBank_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcContractBankField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcContractBankField *arg2 = (CThostFtdcContractBankField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcContractBankField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryContractBank(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryParkedOrder_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcParkedOrderField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcParkedOrderField *arg2 = (CThostFtdcParkedOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcParkedOrderField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryParkedOrder(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryParkedOrderAction_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcParkedOrderActionField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcParkedOrderActionField *arg2 = (CThostFtdcParkedOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcParkedOrderActionField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryParkedOrderAction(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryTradingNotice_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcTradingNoticeField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradingNoticeField *arg2 = (CThostFtdcTradingNoticeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcTradingNoticeField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryTradingNotice(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryBrokerTradingParams_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcBrokerTradingParamsField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcBrokerTradingParamsField *arg2 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcBrokerTradingParamsField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryBrokerTradingParams(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQryBrokerTradingAlgos_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcBrokerTradingAlgosField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcBrokerTradingAlgosField *arg2 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcBrokerTradingAlgosField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQryBrokerTradingAlgos(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQueryCFMMCTradingAccountToken_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcQueryCFMMCTradingAccountTokenField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg2 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQueryCFMMCTradingAccountTokenField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQueryCFMMCTradingAccountToken(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnFromBankToFutureByBank_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspTransferField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspTransferField *arg2 = (CThostFtdcRspTransferField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspTransferField **)&_swig_go_1; 
  
  (arg1)->OnRtnFromBankToFutureByBank(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnFromFutureToBankByBank_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspTransferField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspTransferField *arg2 = (CThostFtdcRspTransferField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspTransferField **)&_swig_go_1; 
  
  (arg1)->OnRtnFromFutureToBankByBank(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByBank_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspRepealField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspRepealField **)&_swig_go_1; 
  
  (arg1)->OnRtnRepealFromBankToFutureByBank(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByBank_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspRepealField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspRepealField **)&_swig_go_1; 
  
  (arg1)->OnRtnRepealFromFutureToBankByBank(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnFromBankToFutureByFuture_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspTransferField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspTransferField *arg2 = (CThostFtdcRspTransferField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspTransferField **)&_swig_go_1; 
  
  (arg1)->OnRtnFromBankToFutureByFuture(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnFromFutureToBankByFuture_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspTransferField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspTransferField *arg2 = (CThostFtdcRspTransferField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspTransferField **)&_swig_go_1; 
  
  (arg1)->OnRtnFromFutureToBankByFuture(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByFutureManual_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspRepealField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspRepealField **)&_swig_go_1; 
  
  (arg1)->OnRtnRepealFromBankToFutureByFutureManual(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByFutureManual_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspRepealField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspRepealField **)&_swig_go_1; 
  
  (arg1)->OnRtnRepealFromFutureToBankByFutureManual(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnQueryBankBalanceByFuture_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcNotifyQueryAccountField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcNotifyQueryAccountField *arg2 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcNotifyQueryAccountField **)&_swig_go_1; 
  
  (arg1)->OnRtnQueryBankBalanceByFuture(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnErrRtnBankToFutureByFuture_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcReqTransferField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqTransferField *arg2 = (CThostFtdcReqTransferField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqTransferField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  (arg1)->OnErrRtnBankToFutureByFuture(arg2,arg3);
  
}


void _wrap_CThostFtdcTraderSpi_OnErrRtnFutureToBankByFuture_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcReqTransferField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqTransferField *arg2 = (CThostFtdcReqTransferField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqTransferField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  (arg1)->OnErrRtnFutureToBankByFuture(arg2,arg3);
  
}


void _wrap_CThostFtdcTraderSpi_OnErrRtnRepealBankToFutureByFutureManual_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcReqRepealField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqRepealField *arg2 = (CThostFtdcReqRepealField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqRepealField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  (arg1)->OnErrRtnRepealBankToFutureByFutureManual(arg2,arg3);
  
}


void _wrap_CThostFtdcTraderSpi_OnErrRtnRepealFutureToBankByFutureManual_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcReqRepealField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqRepealField *arg2 = (CThostFtdcReqRepealField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqRepealField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  (arg1)->OnErrRtnRepealFutureToBankByFutureManual(arg2,arg3);
  
}


void _wrap_CThostFtdcTraderSpi_OnErrRtnQueryBankBalanceByFuture_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcReqQueryAccountField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqQueryAccountField *arg2 = (CThostFtdcReqQueryAccountField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqQueryAccountField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  
  (arg1)->OnErrRtnQueryBankBalanceByFuture(arg2,arg3);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByFuture_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspRepealField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspRepealField **)&_swig_go_1; 
  
  (arg1)->OnRtnRepealFromBankToFutureByFuture(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByFuture_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcRspRepealField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRspRepealField **)&_swig_go_1; 
  
  (arg1)->OnRtnRepealFromFutureToBankByFuture(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspFromBankToFutureByFuture_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcReqTransferField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqTransferField *arg2 = (CThostFtdcReqTransferField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqTransferField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspFromBankToFutureByFuture(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspFromFutureToBankByFuture_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcReqTransferField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqTransferField *arg2 = (CThostFtdcReqTransferField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqTransferField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspFromFutureToBankByFuture(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRspQueryBankAccountMoneyByFuture_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcReqQueryAccountField *_swig_go_1, CThostFtdcRspInfoField *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqQueryAccountField *arg2 = (CThostFtdcReqQueryAccountField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqQueryAccountField **)&_swig_go_1; 
  arg3 = *(CThostFtdcRspInfoField **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->OnRspQueryBankAccountMoneyByFuture(arg2,arg3,arg4,arg5);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnOpenAccountByBank_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcOpenAccountField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOpenAccountField *arg2 = (CThostFtdcOpenAccountField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcOpenAccountField **)&_swig_go_1; 
  
  (arg1)->OnRtnOpenAccountByBank(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnCancelAccountByBank_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcCancelAccountField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCancelAccountField *arg2 = (CThostFtdcCancelAccountField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcCancelAccountField **)&_swig_go_1; 
  
  (arg1)->OnRtnCancelAccountByBank(arg2);
  
}


void _wrap_CThostFtdcTraderSpi_OnRtnChangeAccountByBank_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0, CThostFtdcChangeAccountField *_swig_go_1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcChangeAccountField *arg2 = (CThostFtdcChangeAccountField *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  arg2 = *(CThostFtdcChangeAccountField **)&_swig_go_1; 
  
  (arg1)->OnRtnChangeAccountByBank(arg2);
  
}


CThostFtdcTraderSpi *_wrap_new_CThostFtdcTraderSpi_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTraderSpi *result = 0 ;
  CThostFtdcTraderSpi *_swig_go_result;
  
  
  result = (CThostFtdcTraderSpi *)new CThostFtdcTraderSpi();
  *(CThostFtdcTraderSpi **)&_swig_go_result = (CThostFtdcTraderSpi *)result; 
  return _swig_go_result;
}


void _wrap_delete_CThostFtdcTraderSpi_goctp_ef6abdc493ff8ae2(CThostFtdcTraderSpi *_swig_go_0) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  
  arg1 = *(CThostFtdcTraderSpi **)&_swig_go_0; 
  
  delete arg1;
  
}


CThostFtdcTraderApi *_wrap_CThostFtdcTraderApi_CreateFtdcTraderApi__SWIG_0_goctp_ef6abdc493ff8ae2(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  CThostFtdcTraderApi *result = 0 ;
  CThostFtdcTraderApi *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (CThostFtdcTraderApi *)CThostFtdcTraderApi::CreateFtdcTraderApi((char const *)arg1);
  *(CThostFtdcTraderApi **)&_swig_go_result = (CThostFtdcTraderApi *)result; 
  free(arg1); 
  return _swig_go_result;
}


CThostFtdcTraderApi *_wrap_CThostFtdcTraderApi_CreateFtdcTraderApi__SWIG_1_goctp_ef6abdc493ff8ae2() {
  CThostFtdcTraderApi *result = 0 ;
  CThostFtdcTraderApi *_swig_go_result;
  
  
  result = (CThostFtdcTraderApi *)CThostFtdcTraderApi::CreateFtdcTraderApi();
  *(CThostFtdcTraderApi **)&_swig_go_result = (CThostFtdcTraderApi *)result; 
  return _swig_go_result;
}


_gostring_ _wrap_CThostFtdcTraderApi_GetApiVersion_goctp_ef6abdc493ff8ae2() {
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (char *)CThostFtdcTraderApi::GetApiVersion();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderApi_Release_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  
  (arg1)->Release();
  
}


void _wrap_CThostFtdcTraderApi_Init_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  
  (arg1)->Init();
  
}


intgo _wrap_CThostFtdcTraderApi_Join_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  
  result = (int)(arg1)->Join();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_CThostFtdcTraderApi_GetTradingDay_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  
  result = (char *)(arg1)->GetTradingDay();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CThostFtdcTraderApi_RegisterFront_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  (arg1)->RegisterFront(arg2);
  
  free(arg2); 
}


void _wrap_CThostFtdcTraderApi_RegisterNameServer_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, _gostring_ _swig_go_1) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  (arg1)->RegisterNameServer(arg2);
  
  free(arg2); 
}


void _wrap_CThostFtdcTraderApi_RegisterFensUserInfo_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcFensUserInfoField *_swig_go_1) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcFensUserInfoField *arg2 = (CThostFtdcFensUserInfoField *) 0 ;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcFensUserInfoField **)&_swig_go_1; 
  
  (arg1)->RegisterFensUserInfo(arg2);
  
}


void _wrap_CThostFtdcTraderApi_RegisterSpi_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcTraderSpi *_swig_go_1) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcTraderSpi *arg2 = (CThostFtdcTraderSpi *) 0 ;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcTraderSpi **)&_swig_go_1; 
  
  (arg1)->RegisterSpi(arg2);
  
}


void _wrap_CThostFtdcTraderApi_SubscribePrivateTopic_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  THOST_TE_RESUME_TYPE arg2 ;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = (THOST_TE_RESUME_TYPE)_swig_go_1; 
  
  (arg1)->SubscribePrivateTopic(arg2);
  
}


void _wrap_CThostFtdcTraderApi_SubscribePublicTopic_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, intgo _swig_go_1) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  THOST_TE_RESUME_TYPE arg2 ;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = (THOST_TE_RESUME_TYPE)_swig_go_1; 
  
  (arg1)->SubscribePublicTopic(arg2);
  
}


intgo _wrap_CThostFtdcTraderApi_ReqAuthenticate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcReqAuthenticateField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcReqAuthenticateField *arg2 = (CThostFtdcReqAuthenticateField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqAuthenticateField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqAuthenticate(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqUserLogin_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcReqUserLoginField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcReqUserLoginField *arg2 = (CThostFtdcReqUserLoginField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqUserLoginField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqUserLogin(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqUserLogout_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcUserLogoutField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcUserLogoutField *arg2 = (CThostFtdcUserLogoutField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcUserLogoutField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqUserLogout(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqUserPasswordUpdate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcUserPasswordUpdateField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcUserPasswordUpdateField *arg2 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcUserPasswordUpdateField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqUserPasswordUpdate(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqTradingAccountPasswordUpdate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcTradingAccountPasswordUpdateField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcTradingAccountPasswordUpdateField *arg2 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcTradingAccountPasswordUpdateField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqTradingAccountPasswordUpdate(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqOrderInsert_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcInputOrderField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcInputOrderField *arg2 = (CThostFtdcInputOrderField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputOrderField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqOrderInsert(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqParkedOrderInsert_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcParkedOrderField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcParkedOrderField *arg2 = (CThostFtdcParkedOrderField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcParkedOrderField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqParkedOrderInsert(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqParkedOrderAction_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcParkedOrderActionField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcParkedOrderActionField *arg2 = (CThostFtdcParkedOrderActionField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcParkedOrderActionField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqParkedOrderAction(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqOrderAction_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcInputOrderActionField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcInputOrderActionField *arg2 = (CThostFtdcInputOrderActionField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputOrderActionField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqOrderAction(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQueryMaxOrderVolume_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQueryMaxOrderVolumeField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQueryMaxOrderVolumeField *arg2 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQueryMaxOrderVolumeField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQueryMaxOrderVolume(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqSettlementInfoConfirm_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcSettlementInfoConfirmField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcSettlementInfoConfirmField *arg2 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcSettlementInfoConfirmField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqSettlementInfoConfirm(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqRemoveParkedOrder_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcRemoveParkedOrderField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcRemoveParkedOrderField *arg2 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRemoveParkedOrderField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqRemoveParkedOrder(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqRemoveParkedOrderAction_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcRemoveParkedOrderActionField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcRemoveParkedOrderActionField *arg2 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcRemoveParkedOrderActionField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqRemoveParkedOrderAction(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqExecOrderInsert_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcInputExecOrderField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcInputExecOrderField *arg2 = (CThostFtdcInputExecOrderField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputExecOrderField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqExecOrderInsert(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqExecOrderAction_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcInputExecOrderActionField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcInputExecOrderActionField *arg2 = (CThostFtdcInputExecOrderActionField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputExecOrderActionField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqExecOrderAction(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqForQuoteInsert_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcInputForQuoteField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcInputForQuoteField *arg2 = (CThostFtdcInputForQuoteField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputForQuoteField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqForQuoteInsert(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQuoteInsert_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcInputQuoteField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcInputQuoteField *arg2 = (CThostFtdcInputQuoteField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputQuoteField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQuoteInsert(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQuoteAction_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcInputQuoteActionField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcInputQuoteActionField *arg2 = (CThostFtdcInputQuoteActionField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputQuoteActionField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQuoteAction(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqBatchOrderAction_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcInputBatchOrderActionField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcInputBatchOrderActionField *arg2 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputBatchOrderActionField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqBatchOrderAction(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqCombActionInsert_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcInputCombActionField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcInputCombActionField *arg2 = (CThostFtdcInputCombActionField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcInputCombActionField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqCombActionInsert(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryOrder_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryOrderField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryOrderField *arg2 = (CThostFtdcQryOrderField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryOrderField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryOrder(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryTrade_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryTradeField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryTradeField *arg2 = (CThostFtdcQryTradeField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryTradeField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryTrade(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryInvestorPosition_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryInvestorPositionField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryInvestorPositionField *arg2 = (CThostFtdcQryInvestorPositionField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryInvestorPositionField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryInvestorPosition(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryTradingAccount_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryTradingAccountField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryTradingAccountField *arg2 = (CThostFtdcQryTradingAccountField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryTradingAccountField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryTradingAccount(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryInvestor_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryInvestorField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryInvestorField *arg2 = (CThostFtdcQryInvestorField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryInvestorField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryInvestor(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryTradingCode_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryTradingCodeField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryTradingCodeField *arg2 = (CThostFtdcQryTradingCodeField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryTradingCodeField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryTradingCode(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryInstrumentMarginRate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryInstrumentMarginRateField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryInstrumentMarginRateField *arg2 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryInstrumentMarginRateField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryInstrumentMarginRate(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryInstrumentCommissionRate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryInstrumentCommissionRateField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryInstrumentCommissionRateField *arg2 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryInstrumentCommissionRateField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryInstrumentCommissionRate(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryExchange_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryExchangeField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryExchangeField *arg2 = (CThostFtdcQryExchangeField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryExchangeField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryExchange(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryProduct_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryProductField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryProductField *arg2 = (CThostFtdcQryProductField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryProductField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryProduct(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryInstrument_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryInstrumentField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryInstrumentField *arg2 = (CThostFtdcQryInstrumentField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryInstrumentField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryInstrument(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryDepthMarketData_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryDepthMarketDataField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryDepthMarketDataField *arg2 = (CThostFtdcQryDepthMarketDataField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryDepthMarketDataField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryDepthMarketData(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQrySettlementInfo_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQrySettlementInfoField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQrySettlementInfoField *arg2 = (CThostFtdcQrySettlementInfoField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQrySettlementInfoField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQrySettlementInfo(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryTransferBank_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryTransferBankField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryTransferBankField *arg2 = (CThostFtdcQryTransferBankField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryTransferBankField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryTransferBank(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryInvestorPositionDetail_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryInvestorPositionDetailField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryInvestorPositionDetailField *arg2 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryInvestorPositionDetailField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryInvestorPositionDetail(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryNotice_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryNoticeField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryNoticeField *arg2 = (CThostFtdcQryNoticeField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryNoticeField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryNotice(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQrySettlementInfoConfirm_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQrySettlementInfoConfirmField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQrySettlementInfoConfirmField *arg2 = (CThostFtdcQrySettlementInfoConfirmField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQrySettlementInfoConfirmField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQrySettlementInfoConfirm(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryInvestorPositionCombineDetail_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryInvestorPositionCombineDetailField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryInvestorPositionCombineDetailField *arg2 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryInvestorPositionCombineDetailField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryInvestorPositionCombineDetail(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryCFMMCTradingAccountKey_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryCFMMCTradingAccountKeyField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryCFMMCTradingAccountKeyField *arg2 = (CThostFtdcQryCFMMCTradingAccountKeyField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryCFMMCTradingAccountKeyField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryCFMMCTradingAccountKey(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryEWarrantOffset_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryEWarrantOffsetField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryEWarrantOffsetField *arg2 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryEWarrantOffsetField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryEWarrantOffset(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryInvestorProductGroupMargin_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryInvestorProductGroupMarginField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryInvestorProductGroupMarginField *arg2 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryInvestorProductGroupMarginField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryInvestorProductGroupMargin(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryExchangeMarginRate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryExchangeMarginRateField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryExchangeMarginRateField *arg2 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryExchangeMarginRateField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryExchangeMarginRate(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryExchangeMarginRateAdjust_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryExchangeMarginRateAdjustField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryExchangeMarginRateAdjustField *arg2 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryExchangeMarginRateAdjustField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryExchangeMarginRateAdjust(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryExchangeRate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryExchangeRateField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryExchangeRateField *arg2 = (CThostFtdcQryExchangeRateField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryExchangeRateField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryExchangeRate(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQrySecAgentACIDMap_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQrySecAgentACIDMapField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQrySecAgentACIDMapField *arg2 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQrySecAgentACIDMapField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQrySecAgentACIDMap(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryProductExchRate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryProductExchRateField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryProductExchRateField *arg2 = (CThostFtdcQryProductExchRateField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryProductExchRateField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryProductExchRate(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryProductGroup_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryProductGroupField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryProductGroupField *arg2 = (CThostFtdcQryProductGroupField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryProductGroupField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryProductGroup(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryMMInstrumentCommissionRate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryMMInstrumentCommissionRateField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryMMInstrumentCommissionRateField *arg2 = (CThostFtdcQryMMInstrumentCommissionRateField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryMMInstrumentCommissionRateField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryMMInstrumentCommissionRate(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryMMOptionInstrCommRate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryMMOptionInstrCommRateField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryMMOptionInstrCommRateField *arg2 = (CThostFtdcQryMMOptionInstrCommRateField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryMMOptionInstrCommRateField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryMMOptionInstrCommRate(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryInstrumentOrderCommRate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryInstrumentOrderCommRateField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryInstrumentOrderCommRateField *arg2 = (CThostFtdcQryInstrumentOrderCommRateField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryInstrumentOrderCommRateField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryInstrumentOrderCommRate(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryOptionInstrTradeCost_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryOptionInstrTradeCostField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryOptionInstrTradeCostField *arg2 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryOptionInstrTradeCostField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryOptionInstrTradeCost(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryOptionInstrCommRate_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryOptionInstrCommRateField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryOptionInstrCommRateField *arg2 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryOptionInstrCommRateField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryOptionInstrCommRate(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryExecOrder_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryExecOrderField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryExecOrderField *arg2 = (CThostFtdcQryExecOrderField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryExecOrderField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryExecOrder(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryForQuote_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryForQuoteField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryForQuoteField *arg2 = (CThostFtdcQryForQuoteField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryForQuoteField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryForQuote(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryQuote_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryQuoteField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryQuoteField *arg2 = (CThostFtdcQryQuoteField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryQuoteField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryQuote(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryCombInstrumentGuard_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryCombInstrumentGuardField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryCombInstrumentGuardField *arg2 = (CThostFtdcQryCombInstrumentGuardField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryCombInstrumentGuardField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryCombInstrumentGuard(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryCombAction_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryCombActionField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryCombActionField *arg2 = (CThostFtdcQryCombActionField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryCombActionField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryCombAction(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryTransferSerial_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryTransferSerialField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryTransferSerialField *arg2 = (CThostFtdcQryTransferSerialField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryTransferSerialField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryTransferSerial(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryAccountregister_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryAccountregisterField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryAccountregisterField *arg2 = (CThostFtdcQryAccountregisterField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryAccountregisterField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryAccountregister(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryContractBank_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryContractBankField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryContractBankField *arg2 = (CThostFtdcQryContractBankField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryContractBankField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryContractBank(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryParkedOrder_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryParkedOrderField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryParkedOrderField *arg2 = (CThostFtdcQryParkedOrderField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryParkedOrderField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryParkedOrder(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryParkedOrderAction_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryParkedOrderActionField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryParkedOrderActionField *arg2 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryParkedOrderActionField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryParkedOrderAction(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryTradingNotice_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryTradingNoticeField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryTradingNoticeField *arg2 = (CThostFtdcQryTradingNoticeField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryTradingNoticeField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryTradingNotice(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryBrokerTradingParams_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryBrokerTradingParamsField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryBrokerTradingParamsField *arg2 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryBrokerTradingParamsField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryBrokerTradingParams(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQryBrokerTradingAlgos_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQryBrokerTradingAlgosField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryBrokerTradingAlgosField *arg2 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQryBrokerTradingAlgosField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQryBrokerTradingAlgos(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQueryCFMMCTradingAccountToken_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcQueryCFMMCTradingAccountTokenField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg2 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcQueryCFMMCTradingAccountTokenField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQueryCFMMCTradingAccountToken(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqFromBankToFutureByFuture_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcReqTransferField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcReqTransferField *arg2 = (CThostFtdcReqTransferField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqTransferField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqFromBankToFutureByFuture(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqFromFutureToBankByFuture_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcReqTransferField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcReqTransferField *arg2 = (CThostFtdcReqTransferField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqTransferField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqFromFutureToBankByFuture(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_CThostFtdcTraderApi_ReqQueryBankAccountMoneyByFuture_goctp_ef6abdc493ff8ae2(CThostFtdcTraderApi *_swig_go_0, CThostFtdcReqQueryAccountField *_swig_go_1, intgo _swig_go_2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcReqQueryAccountField *arg2 = (CThostFtdcReqQueryAccountField *) 0 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CThostFtdcTraderApi **)&_swig_go_0; 
  arg2 = *(CThostFtdcReqQueryAccountField **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->ReqQueryBankAccountMoneyByFuture(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


#ifdef __cplusplus
}
#endif

 
  //printf("Initialization goctp done.\n");

